./helion/ceph/ceph_install.dita:                deployer:<codeblock>cd helion/hlm/ansible</codeblock></li>
./helion/controlplaneHA.dita:            perform this step if you are using the HLM supplied Cobber playbooks to install hLinux
./helion/controlplaneHA.dita:          <li>Update servers.yml,: This step is not necessary if you are using the HLM supplied
./helion/esx/esx_installation.dita:    <section id="HLM_Node_Personalization">
./helion/esx/esx_installation.dita:          <codeblock>tar zxvf /media/cdrom/hos-2.0.0/hlm-deployer-2.0.0-20150805T115313Z.tgz</codeblock></li>
./helion/esx/esx_installation.dita:          <codeblock>~/hlm-deployer/hlm-init-2.0.0.bash</codeblock></li>
./helion/esx/esx_installation.dita:helion/my_cloud/config/        Directory contains .j2 files which are symlinks to the /hlm/ansible directory
./helion/esx/esx_installation.dita:helion/hlm/                    Directory contains files used by the installer
./helion/esx/esx_installation.dita:          command:<codeblock>cd /home/stack/helion/hlm/ansible;
./helion/esx/esx_installation.dita:cd /home/stack/scratch/ansible/next/hlm/ansible;
./helion/esx/esx_installation.dita:              <codeblock>stack@hlm:~/helion/hlm/ansible$ less generated_files/etc/hosts</codeblock></li>
./helion/esx/esx_installation.dita:          <codeblock>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml -e tuning_selector=medium</codeblock>
./helion/esx/esx_installation.dita:        <li>Import the <codeph>hlm-shell-vm.ova</codeph> in the vCenter using the vSphere client. </li>
./helion/esx/esx_installation.dita:        <codeblock><codeph>cd ~/helion/hlm/ansible</codeph>
./helion/esx/esx_installation.dita:        cloud:<codeblock><codeph>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml -e tuning_selector=medium</codeph></codeblock></p>
./helion/esx/esx_installation.dita:              network.<codeblock>ansible-playbook -i hosts/verb_hosts hlm-cloud-configure.yml</codeblock><note>You
./helion/esx/esx_installation.dita:              network.</note><codeblock>ansible-playbook -i hosts/verb_hosts hlm-cloud-configure.yml -e EXT_NET_CIDR=10.240.96.0/20</codeblock></li>
./helion/esx/esx_installation.dita:          <li>As the /etc/hosts no longer have entries for HLM, sudo commands may become a bit
./helion/esx/esx_installation.dita:            slower. To fix this issue, once this step is complete, add "hlm" after "127.0.0.1
./helion/esx/esx_installation.dita:127.0.0.1 localhost hlm</codeblock></li>
./helion/faq.dita:<p>Links within a bond can fail. This requires that the bond logic software (driver) monitor and links in a bond. There are two ways of doing this monitoring. MII monitoring  and ARP monitoring. Miimon queries registers on the NIC (based on the MII (Media Independent Interface) standard) to determine the health of the network link. The querying interval is set using HLM GUI. There are times when the link fails deeper in the network i.e. several hops deep. In this case ARP monitoring can be used. ARP monitoring requires setting the interval for the ARP monitor to send ARP (Address Resolution Protocol) queries to a remove IP address in the network. The health of the link is determined based on the responses receive from the remote address.</p>
./helion/installation.dita:    <section id="HLM_Node_Personalization">
./helion/installation.dita:          <codeblock>tar zxvf /media/cdrom/hos-2.0.0/hlm-deployer-2.0.0-20150805T115313Z.tgz</codeblock>
./helion/installation.dita:          <codeblock>~/hlm-deployer/hlm-init-2.0.0.bash</codeblock></li>
./helion/installation.dita:helion/my_cloud/config/        Directory contains .j2 files which are symlinks to the /hlm/ansible directory
./helion/installation.dita:helion/hlm/                    Directory contains files used by the installer
./helion/installation.dita:        <li>Run the configuration processor, as follows: <codeblock>cd ~/helion/hlm/ansible</codeblock>
./helion/installation.dita:        <li>Modify the ./helion/hlm/ansible/hlm-deploy.yml to comment out the line containing
./helion/installation.dita:          <codeblock>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml -e tuning_selector=medium</codeblock>
./helion/installation.dita:        <li>Enter the following name for the management group: hlm003-vsa-mg</li>
./helion/installation.dita:        <li>Add the following cluster name: hlm003-vsa-cluster</li>
./helion/installation.dita:        <li>On the deployer, edit the following file: <codeblock>helion/hlm/ansible/roles/_CND-CMN/templates/cinder.conf.j2</codeblock><ol>
./helion/installation.dita:hplefthand_clustername: hlm003-vsa-cluster
./helion/installation.dita:volume_backend_name: vsa-backend-hlm003
./helion/installation.dita:            network.<codeblock>ansible-playbook -i hosts/verb_hosts hlm-cloud-configure.yml</codeblock><note>You
./helion/installation.dita:            network.</note><codeblock>ansible-playbook -i hosts/verb_hosts hlm-cloud-configure.yml -e EXT_NET_CIDR=10.240.96.0/20</codeblock></li>
./helion/installation.dita:          /etc/hosts no longer have entries for HLM, sudo commands may become a bit slower. To fix
./helion/installation.dita:          this issue, once this step is complete, add "hlm" after "127.0.0.1 localhost". The result
./helion/installation.dita:127.0.0.1 localhost hlm
./helion/keystone/keystone_installation.dita:        performed using the OpenStack command line utility. The utility is installed by HLM onto
./helion/keystone/keystone_installation.dita:        deployer node. Also, HLM installs convenient *.osrc files which contain exports of
./helion/keystone/keystone_installation.dita:# These users are created by HLM installer in MySQL backend
./helion/keystone/keystone_installation.dita:# List domains created by HLM installer
./helion/monasca/monasca.dita:        <li>Then when running the <codeph>hlm-deploy.yml</codeph> Ansible playbook, add the argument
./helion/monasca/monasca.dita:      <codeblock>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml -e tuning_selector=medium -e database_type=influxdb</codeblock>
./helion/releasenotes.dita:    <p>The one-region-poc-with-vsa will be provided by the HLM team which impacts not only VSA but
./helion/swift/swift_mid_sized_cloud_model.dita:    - name: hlm-vg
./helion/using_git.dita:    <p>The deployer provisioning runs the hlm-init-deployer script automatically; this calls
./helion/using_git.dita:      ready-deployment.yml from the ~/helion/hlm/ansible directory. This will prepare a scratch
./helion/using_git.dita:      directory with the appropriate contents in it under "~/scratch/ansible/next/hlm/ansible". The
./helion/using_git.dita:      deployment may be continued via: cd ~/scratch/ansible/next/hlm/ansible ansible-playbook -i
