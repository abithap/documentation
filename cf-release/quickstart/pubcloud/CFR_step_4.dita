<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_pqc_jhz_st">
 <title>Quick Start Step 4: <keyword keyref="quickStartHPcloudStep4"/></title>
 <shortdesc>During this step you will use Terraform to create a cluster on <keyword
      keyref="pubCloudShort"/>.</shortdesc>
 <prolog>
  <metadata>
   <othermeta name="author" content="Michael Khmelnitsky"/>
  </metadata>
 </prolog>
 <conbody>
    <draft-comment author="michaelk">
      <note type="tip">If you work on Windows, you can make the visual output of your commands more
        readable by <xref
          href="https://www.liferay.com/web/igor.spasic/blog/-/blogs/enable-ansi-colors-in-windows-command-prompt"
          format="html" scope="external">enabling ANSI colors in the Windows command prompt</xref>
        or using a tool like <xref href="https://www.cygwin.com/" format="html" scope="external"
          >Cygwin</xref> or <xref href="https://git-for-windows.github.io/" format="html"
          scope="external">Git Bash</xref>.</note>
    </draft-comment>
  <simpletable>
   <strow>
    <stentry>1. <xref conref="CFR_step_2.dita#concept_ikh_xgz_st/quickStartHPcloudStep1_"/><p>2.
              <xref conref="CFR_step_1.dita#concept_s2k_b35_st/quickStartHPcloudStep2_"/></p><p>3.
              <xref conref="CFR_step_1.dita#concept_s2k_b35_st/quickStartHPcloudStep3_"/></p><p>4.
                <b><keyword keyref="quickStartHPcloudStep4" id="quickStartHPcloudStep4"
            /></b></p><p>5. <xref
              conref="CFR_step_1.dita#concept_s2k_b35_st/quickStartHPcloudStep5_"/></p>6. <xref
            conref="CFR_step_1.dita#concept_s2k_b35_st/quickStartHPcloudStep6_"/></stentry>
    <stentry><b>Deploying a Docker Image</b><ol id="ol_p2k_vx1_tt">
            <li>Add the variables from the
                <filepath><varname>&lt;number></varname>-Project-openrc.sh</filepath> file that you
              have downloaded in <b>Step 3</b> to your terminal session.<ul id="ul_ptr_bwp_tt">
                <li>On a Linux machine, navigate to the directory that contains the
                    <filepath>.sh</filepath> file and source the file, for
                  example:<codeblock>source <filepath>12345678901234-Project-openrc.sh</filepath></codeblock>Enter
                  your OpenStack password when prompted.</li>
                <li>On a Windows machine, add variables from the <filepath>.sh</filepath> file at
                  the command prompt, or add the commands to a batch file, for
                  example:<codeblock>set OS_AUTH_URL=https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0/
set OS_USERNAME=myUsername
set OS_PASSWORD=myPassword123
set OS_TENANT_ID=12345678901234
set OS_TENANT_NAME=MySandbox
set OS_REGION_NAME=region-a.geo-1</codeblock></li>
              </ul><note type="tip">When you close your terminal session, your variables will be
                discarded. To prevent this, you can do the following: <ul id="ul_myk_1xp_tt">
                  <li>On a Linux machine, add the variables to your <filepath>~/.bashrc</filepath>
                    file and run the <filepath>source ~/.bashrc</filepath> command.</li>
                  <li>On a Windows machine, <menucascade>
                      <uicontrol>Control Panel</uicontrol>
                      <uicontrol>System</uicontrol>
                      <uicontrol>Advanced system settings</uicontrol>
                      <uicontrol>Environment Variables</uicontrol>
                    </menucascade> and add the variables to your <uicontrol>System
                      variables.</uicontrol></li>
                </ul></note></li>
            <li>Decompress the <keyword keyref="prodShort"/> file into a convenient directory.</li>
            <li>Navigate to the <keyword keyref="prodShort"/> directory and ensure that it contains
              a <filepath>.tfvars</filepath> file. Your <filepath>.tfvars</filepath> file should
              contain the credentials and keys for your cluster.</li>
            <li>Configure the necessary values in your <filepath>.tfvars</filepath> file, using the
              included <filepath>overrides.tfvars.sample</filepath> file as a guide.<note>For more
                information, see <xref
                  href="../../reference/CFR_reference_TF_vars.dita#reference_phl_shc_rt">Terraform
                  Variables</xref>.</note></li>
            <li>Run the following
                command:<codeblock>terraform apply -var-file=<varname>&lt;myVariables></varname>.tfvars</codeblock><note
                type="tip">On Windows, add the <filepath>-no-color</filepath> flag to your
                command.</note><p>Terraform creates the necessary security groups and instances,
                installs Docker, installs the Docker images required to run <keyword
                  keyref="prodShort"/>, and saves the state of your infrastructure to
                  <filepath>terraform.tfstate</filepath>. The process takes about 10 minutes,
                depending on your configuration.</p><note type="tip">At the end of the process,
                Terraform displays the URL of the <keyword keyref="pubCloudShort"/> core, formatted
                using the xip.io wildcard DNS, for
                example:<codeblock>api_endpoint = http://api.203.0.113.0.xip.io</codeblock>You will
                need this URL to use the Cloud Foundry CLI. You can also run the <filepath>terraform
                  show</filepath> command to see detailed information about the
                core.</note><b>Exploring the <keyword keyref="prodShort"/> Core</b><p>After the
                Docker image is deployed as an instance on <keyword keyref="pubCloudShort"/>, you
                can view the instance and its security groups on <keyword keyref="pubCloudShort"
                />:</p><ul id="ul_rqs_v43_tt">
                <li>To view the instance, click <menucascade>
                    <uicontrol>Project</uicontrol>
                    <uicontrol>Compute</uicontrol>
                    <uicontrol>Instances</uicontrol>
                  </menucascade>.</li>
                <li>To view the security group, clicking <menucascade>
                    <uicontrol>Project</uicontrol>
                    <uicontrol>Computer</uicontrol>
                    <uicontrol>Access and Security</uicontrol>
                  </menucascade>.</li>
              </ul><p>Ensure that all three security groups are available, for example
                  <uicontrol>cluster1-SSH</uicontrol>, <uicontrol>cluster-1-Router</uicontrol>, and
                  <uicontrol>cluster-1-Internal</uicontrol>.</p></li>
          </ol><xref href="CFR_step_5.dita#concept_cw2_thz_st">
            <image href="../../media/NextButton.png" id="image_gqc_sgp_js" placement="break"/>
          </xref></stentry>
   </strow>
  </simpletable>
 </conbody>
</concept>
