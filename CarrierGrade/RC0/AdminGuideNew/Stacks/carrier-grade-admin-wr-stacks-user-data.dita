<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic2270">
<title>HP Helion <tm tmtype="reg">OpenStack</tm> Carrier Grade 1.1: Customizing Guest Images with User Data</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HP Helion Openstack"/>
<othermeta name="product-version" content="HP Helion Openstack 1.1"/>
<othermeta name="role" content="All"/>
<othermeta name="role" content="Paul F"/>
<othermeta name="product-version1" content="HP Helion Openstack"/>
<othermeta name="product-version2" content="HP Helion Openstack 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--UNDER REVISION-->
 <!--./CarrierGrade/AdminGuideNew/Stacks/carrier-grade-admin-wr-stacks-user-data.md-->
 <!--permalink: /helion/openstack/carrier/admin/stacks/user-data/--></p>
<p>You can provide bootstrap configuration for an instance at launch by including user data in the template.</p>
<!-- ===================== horizontal rule ===================== -->
<p>
<b>Note:</b> This feature applies only to servers in the VNF Region.</p>
<!-- ===================== horizontal rule ===================== -->
<p>You can include user data by defining a UserData property for an instance. This sends configuration instructions to the instance at launch. For an example of user data, see the <codeph>CPUScale.yaml</codeph> template included with the Titanium
Server.</p>
<p>Normally, this requires <codeph>cloud-init</codeph> to be installed in the guest, because the user data is converted to MIME format and then interpreted by <codeph>cloud-init</codeph>. For instances that do not include <codeph>cloud-init</codeph>, you can bypass the MIME conversion
of user data by invoking a Wind River extension property and assigning the value 'RAW'. This allows the VM to retrieve the specified user data in unaltered format through a simple REST API call to the metadata server. The name of the property follows the convention for the associated resource type. For an AWS resource (for example, <codeph>AWS::EC2::Instance</codeph>), use <codeph>UserDataType</codeph>. For an OpenStack resource (for example, <codeph>OS::Nova::Server</codeph>), use <codeph>user_data_type</codeph>. The following code fragment shows the property used with an AWS resource.</p>
<codeblock><codeph>type : AWS::EC2::Instance
. . .
UserDataType: 'RAW'
UserData:
    Fn::Base64:
    Fn::Replace:
        - 'AWS::StackName': {Ref: 'AWS::StackName'}
        'AWS::Region': {Ref: 'AWS::Region'}
        'AWS::AccessKey': {Ref: 'WebServerKeys'}
        'AWS::SecretKey': {"Fn::GetAtt": [WebServerKeys, SecretAccessKey]}
    - |
. . .
</codeph></codeblock>
<p>
<b>Note:</b> For a VM to access user data, it must have a DHCP-enabled interface on a tenant network that has a Neutron
router. Typically, this is the interface to the VM's <codeph>EXT</codeph> network or an internal network. The Neutron router
provides a route to the metadata server, which provides instances with access to user data.</p>
<p>
  <xref type="section" href="#topic2270"> Return to Top </xref>
</p>
<!-- ===================== horizontal rule ===================== -->
</body>
</topic>
