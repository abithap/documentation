<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic5886">
<title>HP Helion <tm tmtype="reg">OpenStack</tm> Carrier Grade 1.1: Add a Disk to Starter Object Ring</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HP Helion Openstack"/>
<othermeta name="product-version" content="HP Helion Openstack 1.0"/>
<othermeta name="product-version" content="HP Helion Openstack 1.0.1"/>
<othermeta name="product-version" content="HP Helion Openstack 1.1"/>
<othermeta name="role" content="Storage Administrator"/>
<othermeta name="role" content="Storage Architect"/>
<othermeta name="role" content="Keshava HP, Binamra S"/>
<othermeta name="product-version1" content="HP Helion Openstack"/>
<othermeta name="product-version2" content="HP Helion Openstack 1.0"/>
<othermeta name="product-version3" content="HP Helion Openstack 1.0.1"/>
<othermeta name="product-version4" content="HP Helion Openstack 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--UNDER REVISION-->
 <!--./CarrierGrade/AdminGuideNew/Swift/carrier-grade-services-swift-deployment-add-disk-starter-object-ring.md-->
 <!--permalink: /helion/openstack/carrier/services/swift/deployment/add-disk-starter/--></p>
<p>Perform the following procedure to add disk to a starter object ring.</p>
<ol>
<li>
<xref type="section" href="#topic5886/prer">Prerequisite</xref>
</li>
<li>
<xref type="section" href="#topic5886/adding-Swift-disks-to-a-ring">Add disks to a Starter Object Ring</xref>
</li>
</ol>
<section id="prer"> <title>Prerequisite</title>
<ul>
<li>HP Helion OpenStack cloud is successfully deployed.<!--A BR tag was used here in the original source.--><i>(Starter Swift nodes are functional by default as they are part of cloud deployment.)</i>
</li>
<li>All of the rings generated <b>must</b> be preserved, preferably at more than one location. Swift needs these rings to be consistent across all nodes.</li>
<li>Make a backup of the rings before any operation.</li>
</ul>
<!-- ===================== horizontal rule ===================== -->
<p>
<b>Note</b>: If the scale out swift nodes are not deployed, you need to perform the following:</p>
<ol>
<li>
<p>Create a directory named ring-building.</p>

<codeblock>
<codeph># mkdir -p /root/ring-building
# cd /root/ring-building
</codeph>
</codeblock>
</li>
<li>
<p>Get all the rings and builder files from either of the starter nodes.</p>

<codeblock>
<codeph>rsync -qzp --rsync-path="sudo rsync" heat-admin@&lt;starter Swift nodes IP address&gt;:/etc/swift/object.ring.gz /root/ring-building/
rsync -qzp --rsync-path="sudo rsync" heat-admin@&lt;starter Swift nodes IP address&gt;:/etc/swift/account.ring.gz /root/ring-building/
rsync -qzp --rsync-path="sudo rsync" heat-admin@&lt;starter Swift nodes IP address&gt;:/etc/swift/container.ring.gz /root/ring-building/
rsync -qzp --rsync-path="sudo rsync" heat-admin@&lt;starter Swift nodes IP address&gt;:/etc/swift/object.builder /root/ring-building/
rsync -qzp --rsync-path="sudo rsync" heat-admin@&lt;starter Swift nodes IP address&gt;:/etc/swift/account.builder /root/ring-building/
rsync -qzp --rsync-path="sudo rsync" heat-admin@&lt;starter Swift nodes IP address&gt;:
</codeph>
</codeblock>
</li>
</ol>
<!-- ===================== horizontal rule ===================== -->
</section>
<section id="prepare-the-undercloud-to-manage-swift-clusters"> <title>Prepare the undercloud to manage Swift Clusters</title>
<p>Perform the following steps:</p>
<ol>
<li>
<p>Enable SSH from the undercloud to the overcloud node by copying the SSH keys from the seed to the undercloud.</p>
</li>
<li>
<p>Log in to the seed.</p>

<codeblock>
<codeph># ssh root@&lt;seed IP address&gt;
</codeph>
</codeblock>
</li>
<li>
<p>Copy the SSH key from the seed cloud to undercloud.</p>

<codeblock>
<codeph># scp ~/.ssh/id_rsa heat-admin@&lt;\undercloud IP address&gt;:/home/heat-admin
</codeph>
</codeblock>
</li>
<li>
<p>Log in to the undercloud.</p>

<codeblock>
<codeph># ssh heat-admin@&lt;undercloud IP address&gt;
# sudo -i
# mv ~heat-admin/id_rsa ~/.ssh/ 
</codeph>
</codeblock>
</li>
</ol>
</section>
<section id="adding-Swift-disks-to-a-ring"> <title>Add disks to a Starter Object Ring</title>
<p>Perform the following steps to add Swift disk to a ring:</p>
<ol>
<li>
<p>Log in to the undercloud from seed.</p>

<codeblock>
<codeph># ssh heat-admin@&lt;undercloud IP address&gt; 
# sudo -i
</codeph>
</codeblock>
</li>
<li>
<p>Change the directory to ring builder.</p>

<codeblock>
<codeph># cd /root/ring-building
</codeph>
</codeblock>
</li>
<li>
<p>List the starter Swift nodes.</p>

<codeblock>
<codeph># ringos list-swift-nodes -t starter
</codeph>
</codeblock>

<p>The following sample displays starter Swift nodes:</p>

<codeblock>
<codeph>+---------------+
| starter-nodes |
+---------------+
| 192.0.2.22    |
| 192.0.2.24    |
+---------------+
</codeph>
</codeblock>
</li>
<li>
<p>List the disks on the starter nodes.</p>

<codeblock>
<codeph># ringos list-disks -n &lt;starter Swift nodes IP address&gt; 
</codeph>
</codeblock>

<p>The following sample displays the lists of disk available on the starter Swift node <b>192.0.2.22</b>.</p>

<codeblock>
<codeph>+----------+------------+
| disk     | size       |
+----------+------------+
| /dev/sdb | 1073741824 |
|          |            |
| /dev/sdc | 1073741824 |
|          |            |
+----------+------------+
</codeph>
</codeblock>
</li>
<li>
<p>Format the given disk.</p>

<codeblock>
<codeph># ringos format-disks -n &lt;starter Swift nodes IP address&gt; -d &lt;disk&gt;
</codeph>
</codeblock>

<p>
<b>Note</b>: You can format all the disks with the single command (-d --all).</p>

<p>The following sample displays the output of formatted disk of 192.0.2.22.</p>

<codeblock>
<codeph>+----------+-----------+---------+---------------------------------+-------------+------------+
| disk     | formatted | mounted | mount_point                     | label       | size       |
+----------+-----------+---------+---------------------------------+-------------+------------+
| /dev/sdb | y         | y       | /mnt/state/srv/node/b1410063336 | b1410063336 | 1073741824 |
+----------+-----------+---------+---------------------------------+-------------+------------+
</codeph>
</codeblock>
</li>
<li>
<p>List the file in ring directory and identify the <codeph>object.builder</codeph> file for object.</p>
</li>
<li>
<p>(Optional)If the builder file does not exit in the undercloud, copy the builder files using the following command.</p>

<codeblock>
<codeph>rsync -qzp --rsync-path="sudo rsync" heat-admin@&lt;starter Swift nodes IP address&gt;:/etc/swift/object.builder /root/ring-building/
</codeph>
</codeblock>
</li>
<li>
<p>Add the formatted disk to object ring.</p>

<codeblock>
<codeph># ringos add-disk-to-ring -f /root/ring-building/object.builder -i &lt;Starter Swift nodes IP address&gt; -p &lt;port&gt; -d &lt;disk label&gt; -w &lt;weight&gt; -r &lt;region&gt; -z &lt;zone&gt;
</codeph>
</codeblock>

<p>
<b>Note</b>:</p>

<ul>
<li>Choose the zone and region information appropriately.</li>
<li>The disk label is derived from step 5.</li>
</ul>
<p>
<b>Recommendation</b>:</p>

<ul>
<li>Add drives gradually using a weighted approach to avoid degraded performance of Swift cluster. The weight will gradually increase by 25% until it becomes 100%. The initial weight is 25.</li>
</ul>
</li>
<li>
<p>Re-balance the ring.</p>

<codeblock>
<codeph># ringos rebalance-ring -f /root/ring-building/object.builder
</codeph>
</codeblock>

<p>
<b>Note</b>: You must wait for the time specified by <codeph>min_part_hours</codeph> before another re-balance succeeds.</p>
</li>
<li>
<p>List all the Swift nodes.</p>

<codeblock>
<codeph># ringos list-swift-nodes -t all
</codeph>
</codeblock>
</li>
<li>
<p>Copy the object file to all the nodes.</p>

<codeblock>
<codeph># ringos copy-ring -s /root/ring-building/object.ring.gz -n &lt;Swift nodes IP address&gt;
</codeph>
</codeblock>
</li>
<li>
<p>Copy the builder file to all the nodes.</p>

<codeblock>
<codeph># ringos copy-ring -s /root/ring-building/object.builder -n &lt;Swift nodes IP address&gt;
</codeph>
</codeblock>

<p>
<b>Note</b>: The <codeph>.buldier</codeph> and <codeph>.ring.gz</codeph> files <b>must</b> be present in the Swift nodes.</p>

<p>You can also copy the ring files and the builder files to all the swift nodes using the following commands:</p>

<codeblock>
<codeph># ringos copy-ring -s /root/ring-building/\*.ring.gz -n all

# ringos copy-ring -s /root/ring-building/object-1.builder -n all
</codeph>
</codeblock>
</li>
<li>
<p>Set the weight of the disks using the following command:</p>

<codeblock>
<codeph># ringos set-weight -f /root/ring-building/object.builder -s &lt;disk id&gt; -w &lt;weight&gt;
</codeph>
</codeblock>
</li>
<li>
<p>Repeat steps from <b>8-13</b> gradually increasing the disk weight by 25: set the weight to 50, 75, and finally 100 (w= 50, 75, 100) .</p>
</li>
</ol>
<p>
  <xref type="section" href="#topic5886"> Return to Top </xref>
</p>
<!-- ===================== horizontal rule ===================== -->
</section>
</body>
</topic>
