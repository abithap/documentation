<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic4448">
<title>HPE Helion OpenStack(R) Carrier Grade (Beta): Deployment Scenarios using the CLI</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HPE Helion OpenStack(R)"/>
<othermeta name="product-version" content="HPE Helion OpenStack(R) 1.1"/>
<othermeta name="role" content="All"/>
<othermeta name="role" content="Paul F"/>
<othermeta name="product-version1" content="HPE Helion OpenStack(R)"/>
<othermeta name="product-version2" content="HPE Helion OpenStack(R) 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--UNDER REVISION-->
 <!--./CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli.md-->
 <!--permalink: /helion/openstack/carrier/deploy/cli/--></p>
<p>As an alternative to the web administration interface, you can work through the scenarios using the command-line interface.</p>
<!-- ===================== horizontal rule ===================== -->
<p>
<b>Note:</b> This feature applies only to servers in the VNF Region.</p>
<!-- ===================== horizontal rule ===================== -->
<p>Users who are comfortable with text-based commands and Linux-based operating systems can use a command-line interface (CLI) to install and manage all aspects of HPE Helion OpenStack(R) Carrier Grade, including setting up the scenario environment and deploying scenarios. In addition to providing a compact and efficient environment, the CLI offers some capabilities not afforded by the web administration interface, such as the ability to save customization scripts (user data) for re-use.</p>
<p>For general information about the scenarios, see <xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-overview.dita" >Reference Deployment Scenarios</xref>. For more information on command-line systems, see <xref type="section" href="#topic4448/before">Before you begin</xref> below.</p>
<p>To use the CLI, log in to the controller console as the admin user, or as <codeph>user1</codeph> or <codeph>user2</codeph>, depending on the task to be performed:</p>
<ul>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-tenants.dita" >Creating Tenants and Updating Quotas</xref>
</li>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-users.dita" >Creating Users</xref>
</li>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-provider.dita" >Establishing Provider Networks</xref>
</li>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-segment.dita" >Creating Segmentation Ranges</xref>
</li>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-tenant.dita" >Setting Up Tenant Networks</xref>
</li>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-guest.dita" >Setting Up the Example Guest Image</xref>
</li>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-data.dita" >Setting Up User Data</xref>
</li>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-flavor.dita" >Setting Up Flavors</xref>
</li>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-environ.dita" >Creating Login Environment Files</xref>
</li>
<li>
<xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-cli-launch.dita" >Launching Instances Using the CLI</xref>
</li>
</ul>
<section id="before"> <title>Before you begin</title>
<p>Before you being the deployment scenarios using the CLI, you can review the following section for more information on command-line systems.</p>
</section>
<section id="working-with-system-objects-uuids-uuid"> <title>Working with system objects: UUIDs {uuid}</title>
<p>Each system component (see <xref href="../../CarrierGrade/DeploymentScenarios/carrier-grade-deployment-setting-components.dita" >Components of the Scenario Environment</xref> is identified by a string of hexadecimal characters known as a universal unique identifier (UUID). In the CLI, UUIDs are sometimes required for working with a component. You can display them using an appropriate command. For example, you can display the UUIDs of currently defined tenants using the following command:</p>
<codeblock>
  <codeph>keystone tenant-list
</codeph>
</codeblock>
<p>The command line environment provides methods for working with UUIDs conveniently and efficiently, without typing them manually.</p>
<ul>
<li>You can store them in variables, and use the variables in subsequent commands.</li>
<li>
<p>You can filter the output of commands so that the UUID is passed directly to a variable.</p>

<p>For example, the following command stores the UUID of the admin tenant in the variable <codeph>admin_tenant_UUID</codeph>.</p>

<codeblock>
<codeph>export admin_tenant_UUID=`keystone
tenant-list | grep admin | \
awk '{print $2}'`
</codeph>
</codeblock>

<p>The command keystone <codeph>tenant-list</codeph> generates a list of all tenants. This is piped to the grep command, which filters for the line containing the string admin. This in turn is piped to an awk command, which prints the content of the id column to the console. The result, the UUID, is stored in the variable <codeph>admin_tenant_UUID</codeph>.</p>

<p>You can supply variables to other commands using the shell syntax ${variable}. For example, to adjust resource quotas for a tenant, you need to supply the UUID of the tenant. With the UUID stored as a variable, you can do this as shown in the following example:</p>

<codeblock>
<codeph>neutron quota-update --subnet 32 --tenant-id ${admin_tenant_UUID}
</codeph>
</codeblock>

<p>Note the use of <codeph>admin_tenant_UUID</codeph> to supply the UUID.</p>

<p>These techniques are used throughout the CLI-based exercises. If you prefer, you can copy UUIDs from the display and paste them directly to the command line.</p>
</li>
</ul>
</section>
<section id="user-login-environment"> <title>User Login Environment</title>
<p>For the HPE Helion OpenStack(R) Carrier Grade server to identify the user who is executing system commands, a shell environment with the proper set of variables must be in place. For the cloud admin account, the shell is set up automatically when you log in as the Linux admin user.</p>
<p>You can create scripts for other users. Later in this presentation, the scripts <codeph>/etc/nova/openrc.user1</codeph> and <codeph>/etc/nova/openrc.user2</codeph> are created (for details, see [Creating Login Environment Files for Users]{#loginuser}</p>
<p>To execute commands with the corresponding user identities, use the
source command to invoke the scripts.</p>
<p>For more information on login accounts, see the <i>HPE Helion OpenStack(R) Carrier Grade Installation Guide: About Login Accounts</i>.</p>
<p>
  <xref type="section" href="#topic4448/top"> Return to Top </xref>
</p>
<!-- ===================== horizontal rule ===================== -->
</section>
</body>
</topic>
