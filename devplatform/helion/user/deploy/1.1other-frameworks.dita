<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic2380">
<title>HP Helion 1.1 Development Platform: Generic and Standalone Frameworks</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HP Helion Development Platform"/>
<othermeta name="product-version" content="HP Helion Development Platform 1.1"/>
<othermeta name="role" content="Application Developer"/>
<othermeta name="role" content="ISV Developer"/>
<othermeta name="role" content="Service Developer"/>
<othermeta name="role" content="Systems Administrator"/>
<othermeta name="role" content="Jayme P"/>
<othermeta name="product-version1" content="HP Helion Development Platform"/>
<othermeta name="product-version2" content="HP Helion Development Platform 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./devplatform/helion/user/deploy/1.1other-frameworks.md-->
 <!--permalink: /helion/devplatform/1.1/als/user/deploy/other-frameworks/--></p>
<p>

</p>
<p>The Generic and Standalone frameworks are for applications that might
not fit any of the other frameworks available in Application Lifecycle Service.</p>
<ul>
<li>
<b>Generic</b> is for web applications.</li>
<li>
<b>Standalone</b> is for background applications without an HTTP
interface.</li>
</ul>
<p>These two frameworks make no assumptions about the application type and
can be customized to run a wide variety of non-standard applications.</p>
<p>Any language <xref href="../../../../devplatform/helion/user/deploy/1.1manifestyml.dita#runtime" type="section"  >
<i>runtime</i>
</xref>
available on the server can be specified in the config file. If a
runtime is not specified, Python 2.7 is made available by default.</p>
<section id="generic"> <title>Generic</title>
<p>The Generic framework requires a custom <xref href="../../../../devplatform/helion/user/deploy/1.1manifestyml.dita#processes" type="section"  >
<i>processes:web</i>
</xref> setting in
<i>manifest.yml</i> specifying a command to start the web process (e.g. a
custom web server).</p>
<p>The example below shows a web process that serves static files from the
application directory using Python's
<xref href="../../../../devplatform/helion/admin/server/1.1index.dita" >SimpleHTTPServer</xref>:</p>
<codeblock>
  <codeph>framework:
    type: generic
processes:
    web: python -m SimpleHTTPServer $PORT
</codeph>
</codeblock>
<p>If you wish to run an application <i>without</i> a web interface (i.e. a
background "worker" process), <xref href="../../../../devplatform/helion/user/deploy/1.1manifestyml.dita#processes-web-null" type="section"  >
<i>set 'processes: web:' to
Null</i>
</xref> or use the
Standalone framework instead.</p>
</section>
<section id="standalone"> <title>Standalone</title>
<p>The Standalone framework uses a custom command specified in the
<xref href="../../../../devplatform/helion/user/deploy/1.1manifestyml.dita#command" type="section"  >
<i>command:</i>
</xref> key to start a
background worker process.</p>
<p>The example below shows <i>manifest.yml</i> configuration for an application
running a simple Python worker script.</p>
<codeblock>
  <codeph>name: worker
framework:
  type: standalone
  runtime: python27
command: python main.py
</codeph>
</codeblock>
<p>The <codeph>command</codeph> must start a long-running child
process. If this process exits for any reason, the Health Manager will
restart the application instance.</p>
<p>Application Lifecycle Service will not assign URLs to apps deployed with the standalone
framework, as it is intended for background worker processes. The
<codeph>helion</codeph> client includes a heuristic that will
automatically suppress URL mapping for applications using this
framework.</p>
<p>
  <b>Note</b>
</p>
<p>If the application does not serve web requests, it may appear in the Management Console or <codeph>helion apps</codeph> command as not running. To verify a non-web application is actually running, use <codeph>helion logs</codeph> or <codeph>helion ssh</codeph>.</p>
</section>
</body>
</topic>
