<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic1406">
<title>HP Helion 1.1 Development Platform: Clojure</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HP Helion Development Platform"/>
<othermeta name="product-version" content="HP Helion Development Platform 1.1"/>
<othermeta name="role" content="Application Developer"/>
<othermeta name="role" content="ISV Developer"/>
<othermeta name="role" content="Service Developer"/>
<othermeta name="role" content="Jayme P"/>
<othermeta name="product-version1" content="HP Helion Development Platform"/>
<othermeta name="product-version2" content="HP Helion Development Platform 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./devplatform/helion/user/deploy/languages/1.1clojure.md-->
 <!--permalink: /helion/devplatform/1.1/als/user/deploy/languages/clojure/--></p>
<p>

</p>
<p>Application Lifecycle Service supports deploying Clojure applications using
<xref href="https://github.com/technomancy/leiningen" scope="external" format="html" >leiningen</xref>.</p>
<p>To create a new Clojure web application, install leiningen and
<xref href="http://webnoir.org/" scope="external" format="html" >Noir</xref> (a Clojure web framework):</p>
<codeblock>
  <codeph>lein plugin install lein-noir 1.1.0
</codeph>
</codeblock>
<p>Create a Noir project:</p>
<codeblock>
  <codeph>lein noir new myapp
...
cd myapp/
</codeph>
</codeblock>
<p>Now deploy to Application Lifecycle Service. Accept the defaults for each prompt:</p>
<codeblock>
  <codeph>helion push myapp
[...]
Application Deployed URL: 'myapp.helion-xxxx.local'?
[...]
Starting Application: OK
</codeph>
</codeblock>
<p>Open the application's URL in your browser to see the default Noir welcome
page.</p>
<section id="clojure-database-services-example"> <title>Clojure Database Services Example</title>
<p>Taken from the <xref href="https://github.com/Stackato-Apps/4clojure/blob/stackato/src/foreclojure/config.clj#L6" type="section" scope="external" format="html" >4clojure sample
app</xref>:</p>
<codeblock>
  <codeph>(defn assoc-cloud-env
  "Import Cloud Foundry / Application Lifecycle Service environment settings"
  [config]
  (let [port (Integer/parseInt (System/getenv "PORT"))
        srv  (parse-string (System/getenv "VCAP_SERVICES"))
        cred ((first (srv "mongodb-1.8")) "credentials")]
    (assoc config
      :jetty-port port
      :db-host    (cred "host")
      :db-port    (cred "port")
      :db-user    (cred "username")
      :db-pwd     (cred "password")
      :db-dbname  (cred "db"))))
</codeph>
</codeblock>
</section>
</body>
</topic>
