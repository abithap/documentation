<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic2852">
<title>HP Helion 1.0 Development Platform: Troubleshooting</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HP Helion Development Platform"/>
<othermeta name="product-version" content="HP Helion Development Platform 1.1"/>
<othermeta name="role" content="Application Developer"/>
<othermeta name="role" content="ISV Developer"/>
<othermeta name="role" content="Service Developer"/>
<othermeta name="role" content="Systems Administrator"/>
<othermeta name="role" content="Jayme P"/>
<othermeta name="product-version1" content="HP Helion Development Platform"/>
<othermeta name="product-version2" content="HP Helion Development Platform 1.1"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./devplatform/helion/user/reference/1.0troubleshoot.md-->
 <!--permalink: /als/v1/user/reference/troubleshoot/--></p>
<section id="see-the-helion-11-development-platform-version-of-this-page"> <title>

</title>
</section>
<section id="ssh-to-failed-containers"> <title>SSH to Failed Containers</title>
<p>For troubleshooting and diagnostic purposes, it is possible to use helion ssh to access a <xref href="../../../../devplatform/helion/user/reference/1.0glossary.dita#term-container" type="section"  >
<i>container</i>
</xref> that has recently failed or did not start correctly. Containers are kept for one hour before being reclaimed. See the <xref href="../../../../devplatform/helion/user/reference/1.0client-ref.dita#command-ref-client" type="section"  >
<i>Command Reference</i>
</xref> for details on the <codeph>helion ssh</codeph> command.</p>
</section>
<section id="checking-the-logs"> <title>Checking the Logs</title>
<p>Most Application Lifecycle Service users will not have administrative access to the server. If you need to troubleshoot an application deployment or runtime failure, you can use the helion client to view the <codeph>stderr</codeph> and <codeph>stdout</codeph> log files. For example, if an application called <codeph>myapp</codeph> did not deploy correctly, run the command:</p>
<codeblock>
  <codeph>$ helion logs myapp --all
</codeph>
</codeblock>
<p>This will generally show all errors encountered during deployment.</p>
<p>If you need to view another log file (e.g. one specific to your
application), use the files command to explore the remote filesystem and
return the contents of the files:</p>
<codeblock>
  <codeph>$ helion files myapp logs
stderr.log                                 44B
stdout.log                                101B
myapp-err.log                             189B

$ helion files myapp logs/myapp-err.log
</codeph>
</codeblock>
<p>If that command should fail, try using the run command in combination
with ls or cat:</p>
<codeblock>
  <codeph>$ helion run myapp cat ../logs/myapp-err.log
</codeph>
</codeblock>
</section>
<section id="specific-cases"> <title>Specific Cases</title>
<p>
  <b>When pushing an app, the Application Lifecycle Service Client reports OK but app isn't
running</b>
</p>
<p>The final output from pushing an app should look like:</p>
<codeblock>
  <codeph>Staging Application: OK
Starting Application: OK
</codeph>
</codeblock>
<p>If the app is being pushed to multiple instances, the client waits until at least one instance is running, and exits at that point (it does not wait until all instances are active). If afterwards you run <codeph>helion apps</codeph> and find the Health status at 0%, it is because the app crashed after starting successfully, not because the Application Lifecycle Service client reported incorrectly.</p>
<p>
  <b>DNS queries returning "connection refused"</b>
</p>
<p>This error is reported when the Application Lifecycle Service server does not have an IP Address. To investigate and resolve, try the following:</p>
<ul>
<li>
<p>Verify the ARP tables on the hypervisor host, and on the Application Lifecycle Service server through its <xref href="../../../../devplatform/helion/user/reference/1.0glossary.dita#term-tty-console" type="section"  >
<i>tty console</i>
</xref>:</p>

<codeblock>
<codeph> $ arp -n
</codeph>
</codeblock>
</li>
<li>
<p>Check that the DHCP client is running:</p>

<codeblock>
<codeph>$ pgrep dhclient
$ grep dhclient /var/log/syslog
</codeph>
</codeblock>
</li>
<li>
<p>Connect to the DHCP server and verify that it is receiving client requests from the Application Lifecycle Service server.</p>
</li>
<li>
<p>If your network is statically configured, assign an IP address on the Application Lifecycle Service server by editing the <xref href="http://manpages.ubuntu.com/manpages/utopic/en/man5/interfaces.5.html" scope="external" format="html" >interfaces</xref> file:</p>

<codeblock>
<codeph>/etc/network/interfaces
</codeph>
</codeblock>
</li>
</ul>
</section>
</body>
</topic>
