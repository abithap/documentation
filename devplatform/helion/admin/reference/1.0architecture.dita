<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic4025">
<title>HP Helion 1.0 Development Platform: Architectural Design</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HP Helion Development Platform"/>
<othermeta name="product-version" content="HP Helion Development Platform 1.0"/>
<othermeta name="role" content="Application Developer"/>
<othermeta name="role" content="Security Engineer"/>
<othermeta name="role" content="ISV Developer"/>
<othermeta name="role" content="Service Developer"/>
<othermeta name="role" content="Jayme P"/>
<othermeta name="product-version1" content="HP Helion Development Platform"/>
<othermeta name="product-version2" content="HP Helion Development Platform 1.0"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./devplatform/helion/admin/reference/1.0architecture.md-->
 <!--permalink: /als/v1/admin/reference/architecture/--></p>
<p>

</p>
<ul>
<li>
<xref type="section" href="#topic4025/base">Base</xref>
</li>
<li>
<xref type="section" href="#topic4025/primary">Primary</xref>
</li>
<li>
<xref type="section" href="#topic4025/cloud-controller">Cloud Controller</xref>
</li>
<li>
<xref type="section" href="#topic4025/router">Router</xref>
</li>
<li>
<xref type="section" href="#topic4025/droplet-execution-agents">Droplet Execution Agents</xref>
</li>
<li>
<xref type="section" href="#topic4025/service-roles">Service Roles</xref>

<ul>
<li>
<xref type="section" href="#topic4025/databases">Databases:</xref>
</li>
<li>
<xref type="section" href="#topic4025/other-data-services">Other data services:</xref>
</li>
</ul>
</li>
<li>
<xref type="section" href="#topic4025/role-groups">Role Groups</xref>
</li>
</ul>
<p>The Application Lifecycle Service VM is a stand-alone <xref href="../../../../devplatform/helion/user/reference/1.0glossary.dita#term-micro-cloud" type="section"  >
<i>micro
cloud</i>
</xref> virtual
machine with all the components necessary for running a test environment
in one instance. For use on a larger scale, the VM can be cloned and
assigned specific roles: Router, Cloud Controller, Droplet Execution
Agents (DEAs, or worker nodes), or specific database services.</p>
<p> 
  <image href="../../../../media/helion-architecture-diagram.png"/>
</p>
<section id="roles"> <title>Roles</title>
</section>
<section id="base"> <title>Base</title>
<p>The Base role comprises of several processes that are necessary for any
node to function as part of an Application Lifecycle Service cluster, and is mostly
responsible for communicating with the primary node and forwarding log
information.</p>
<p>This role cannot be disabled on any node.</p>
</section>
<section id="primary"> <title>Primary</title>
<p>The Primary role is a mandatory part of a Core node (or micro cloud) and
runs a number of critical system processes, including the Health
Manager.</p>
<p>The Health Manager keeps track of the apps on each DEA and provides
feedback on the number currently running. It works in conjunction with
the Cloud Controller and must be run on the same VM.</p>
<p>In a cluster setup, all nodes performing other roles are attached to the
MBUS IP of the Core node. Every cluster must include exactly one Primary
role.</p>
</section>
<section id="cloud-controller"> <title>Cloud Controller</title>
<p>The Controller manages most of the operations of an Application Lifecycle Service system. It
hosts the Management Console, provides the API endpoint for client
access, manages the cloud_controller_ng process, provisions services,
dispatches applications for staging and deployment, and (with the Health
Manager) tracks the availability of DEA nodes.</p>
<p>In a cluster setup, the Controller role must run on the <xref href="../../../../devplatform/helion/admin/cluster/1.0index.dita#server-cluster-core-node" type="section"  >
<i>Core
node</i>
</xref> that all other
VM's in the cluster connect to.</p>
<p>A single Controller is sufficient for small and mid-sized clusters, but
<xref href="../../../../devplatform/helion/admin/cluster/1.0index.dita#cluster-multi-controllers" type="section"  >
<i>multiple
Controllers</i>
</xref> can be
configured if necessary for larger implementations.</p>
</section>
<section id="router"> <title>Router</title>
<p>The router directs incoming network traffic to the appropriate
application.</p>
<p>For smaller configurations, the router can be run on the same Application Lifecycle Service
VM as the other components.</p>
<p>When additional DEAs are in use and traffic increases, additional
routers can be added to handle the load. This will require a <xref href="../../../../devplatform/helion/admin/cluster/1.0index.dita#cluster-load-balancer" type="section"  >
<i>load
balancer</i>
</xref> to be available
in the cluster.</p>
</section>
<section id="droplet-execution-agents"> <title>Droplet Execution Agents</title>
<p>The Droplet Execution Agent (DEA) role in Application Lifecycle Service is responsible for
staging applications and running application instances within Linux
containers. In an Application Lifecycle Service cluster, there will typically be a number of
nodes running the DEA role, which in turn each host multiple user
application instances.</p>
<p>The DEA role is comprised of a number of processes:</p>
<ul>
<li>dea_ng: Master process for staging and starting application instances, reporting on their state via NATS to the Health Manager.</li>
<li>dir_server: Handles requests for directories/files, responding with an HTTP URL.</li>
<li>fence: Responsible for the management of application containers using Docker.</li>
<li>apptail: Streams application logs via Logyard to various log drains.</li>
</ul>
<p>The Docker image used for the containers can be customized by admins.</p>
</section>
<section id="service-roles"> <title>Service Roles</title>
<p>Application Lifecycle Service nodes can also be assigned roles for data services. The data
services can be run separately on their own nodes, or grouped together.</p>
</section>
<section id="databases"> <title>Databases:</title>
<ul>
<li>mysql</li>
<li>postgresql</li>
<li>redis</li>
</ul>
</section>
<section id="other-data-services"> <title>Other data services:</title>
<ul>
<li>filesystem ( Persistent filesystem service )</li>
<li>rabbit ( RabbitMQ message queue service )</li>
<li>memcached</li>
<li>Harbor ( Ports service )</li>
</ul>
</section>
<section id="role-groups"> <title>Role Groups</title>
<p>Role groups represent a set of roles. For example the <b>data-services</b>
group provides all databases plus RabbitMQ and the filesystem service:</p>
<codeblock>
  <codeph>$ kato role add data-services
</codeph>
</codeblock>
<p>Additional groups can be defined by administrators in
<i>/s/etc/kato/role_groups.yml</i>.</p>
</section>
</body>
</topic>
