<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_t3w_fnh_ts">
  <title>Install the Messaging Service</title>
  <body>
    <section id="install-messaging">
      <p>This section provides details on installing the Messaging service for the Development
        Platform.</p>
    </section>
    <section><title>Prerequisites</title>Installing services requires that the HDP Installer 2.0,
      also known as HDPI, has already <xref
        href="devplatform_install_platform.dita#topic_gly_xmh_ts">been installed</xref>.<p>The
        images for the individual services will be downloaded when the service installation is
        started. A separate download step is not necessary.</p><p>The installer retrieves service
        configuration information from the clouds.yaml file. If you did not create a clouds.yaml
        file earlier, you can <xref href="install_cloudsyaml.dita#topic_wzw_r4w_rt">create one
          now</xref>.</p></section>  <section>
            <title>Install the Messaging Service</title>
            <note type="tip"> For help with the installer, enter the command <codeph>openstack
              hdpi</codeph>
            </note>
            <ol>
              <li>SSH to the Deployer.                </li>
              <li>Create a Virtual Environment. <codeblock>virtualenv .devplatform</codeblock></li>
              <li>Source the Virtual
                Environment.<codeblock>source .devplatform/bin/activate</codeblock></li>
              
              
              <li>If you did not create a <codeph>clouds.yaml</codeph> file earlier, you must <xref
                href="install_cloudsyaml.dita#topic_wzw_r4w_rt">create one now</xref>.</li><li>Add the following values to the <codeph>clouds.yaml</codeph> file. Most of the values can be
          left at the default value.<note>If you installed the HP Helion Code Engine service first,
            the Messaging service can use the values in the existing <codeph>helionci:</codeph>
            section. Do not add a new section, just check to ensure that values for all listed
            variables are
            provided.<codeblock># header may say messaging or helionci
# do not duplicate section
messaging:
  deployer_key: default
  deployer_flavor: 4 
  deployer_name: &lt;service&gt;_deployer_&lt;version&gt;
  deployer_security_group: default
  deployer_version: 
  deployer_image: 
  deployer_uri: 
  deployer_net_id: 
  deployer_cloud: </codeblock></note><ul
            id="ul_nk3_nzz_st">
            <li>deployer_key: The keypair to use for the deployer instance. Default value:
              default</li>
            <li>deployer_flavor: The flavor to use for the deployer instance, Default value: 4 which
              is Large.</li>
            <li>deployer_name: The name of the deployer instance. Default value:
              &lt;service&gt;_deployer_&lt;version&gt;</li>
            <li>deployer_security_group: The name of the security group for the deployer. Default
              value: default</li>
            <li>deployer_version: The version of the deployer. Default value: if not set, it will
              use the version in the image name.</li>
            <li>deployer_image: The image to use for the deployer. It will attempt to find an image
              with the prefix <i>helionci</i> or <i>msgaas</i> and containing the word
              <i>hlinux</i>.</li>
            <li>deployer_uri: The location where the download the deployer tgz can be found. Will be
              set by the CLI based on information retrieved from Swift.</li>
            <li>deployer_net_id: Network id for the deployer instance. Default value: The id of the
              network named <i>SVC</i>. </li>
            <li>deployer_cloud: The cloud identified in the clouds.yaml where the deployer will be
              created. Note that while the deployer creation must be performed by an admin, the
              deployer itself may be owned by someone else.</li>
          </ul></li>
              <li>Run the installer.
          <codeblock>openstack hdpi messaging install --package wscatalog.</codeblock></li>
              <li>After the installation is complete, launch the deployer.
          <codeblock>$ openstack hdpi messaging launch</codeblock>The output should look similar to
          the
          following:<codeblock>Searching for container msgaas-deployer...
Searching for container msgaas-launcher...
Extracting ...
Running scripts...
Running launcher.py

....
</codeblock></li>  </ol>
          </section>
  </body>
</topic>
