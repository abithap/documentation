<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_gly_xmh_ts">
  <title>Install the HP Helion Development Platform</title>
  <body>

    <section id="preparation">
      <title>1. Pre-requisites</title>
      <ol id="ol_w1c_vy1_4t">
        <li>You will need the following pieces of information in order to run the service updates.
            <table pgwide="1" id="table_ydc_vy1_4t">
            <tgroup cols="2">
              <colspec colname="col1" colwidth="237px" colsep="1"/>
              <colspec colname="col2" colwidth="1*"/>
              <thead>
                <row>
                  <entry> Identifier </entry>
                  <entry> Description </entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry> DEPLOYER</entry>
                  <entry>IP address of the Deployer.</entry>
                </row>
                <row>
                  <entry> USERNAME </entry>
                  <entry>The OpenStack username of a cloud admin that has rights to perform a
                    service update for the selected service.</entry>
                </row>
                <row>
                  <entry> PASSWORD </entry>
                  <entry>The OpenStack password of a cloud admin that has rights to perform a
                    service update for the selected service.</entry>
                </row>
              </tbody>
            </tgroup>
          </table></li>
        <li>Manually set folder ownership where required. [This is an extra step required for the
          beta release.]<ol>
            <li>SSH to the Deployer node using admin credentials.</li>
            <li>On the Deployer, search within the <codeph>/etc/hosts</codeph> file, which lists all
              of the cloud hosts. Identify the three cloud management nodes; they will look similar
              to the
              following:<codeblock>$ cat /etc/hosts | grep c1-m1-mgmt
10.10.10.11    mi-ccp-c1-m1-mgmt

$ cat /etc/hosts | grep c1-m2-mgmt
10.10.10.12    mi-ccp-c1-m2-mgmt

$ cat /etc/hosts | grep c1-m3-mgmt
10.10.10.13    mi-ccp-c1-m3-mgmt</codeblock></li>
            <li> SSH to <b>each</b> of those three management nodes with admin credentials and run
              the following commands on each
              one:<codeblock>$ sudo chown -R horizon-venv /opt/stack/service/horizon/venv/bin
$ sudo chown -R horizon-venv /opt/stack/service/horizon/venv/lib</codeblock></li>
          </ol></li>
        <li>The DBaaS, DNSaaS and Cue services rely on the creation of a VM service network. This
          service network is a VLAN-encapsulated provider network which is fully routable to the
          Helion OpenStack MGMT network. [This is an extra step required for the beta release.]<ol>
            <li>SSH to the Deployer node using admin credentials.</li>
            <li>Source the admin credentials:
              <!--This step will not be necessary after HOS GA but it is during the beta per Alex--><codeblock>source ~/service.osrc</codeblock></li>
            <li>Install the Neutron client, if not already available.
              <codeblock>sudo apt-get install -y python-neutronclient</codeblock></li>
            <li>To create this network, an administrator should issue the following
              commands:<codeblock>neutron net-create svc-net --provider:network_type vlan --provider:physical_network physnet1 --provider:segmentation_id &lt;SVC VLAN_ID> </codeblock><codeblock>neutron subnet-create --allocation-pool start=&lt;low address on SVC network>,end=&lt;high address on SVC network> --no-gateway --host-route destination=&lt;CIDR of MGMT network>,nexthop=&lt;gateway from SVC to MGMT net> --enable-dhcp svc-net &lt;SVC network CIDR></codeblock>As
              an example, given a management network with the following attributes: <sl>
                <sli> MGMT Net = 10.1.2.0/24</sli>
                <sli> SVC Net = 10.1.6.0/240</sli>
                <sli> SVC gateway to MGMT = 10.1.6.1</sli>
                <sli> SVC Net VLAN = 306</sli>
              </sl>the commands for creating the service network would
                be:<codeblock>neutron net-create svc-net --provider:network_type vlan --provider:physical_network physnet1 --provider:segmentation_id 306 </codeblock><codeblock>neutron subnet-create --allocation-pool start=10.1.6.2,end=10.1.6.254 --no-gateway --host-route destination=10.1.2.0/24,nexthop=10.1.6.1 --enable-dhcp svc-net 10.1.6.0/24</codeblock><note>
                To configure a service network for flat encapsulation, modify the service network
                creation statement: <codeph>--provider:network_type flat</codeph> The subnet
                creation statement does not change. </note></li>
<!-- THIS IS STEP #3 for after HOS goes to GA, just replace the existing step three above with this info:          
              <li>To create this network, an administrator should use the following Ansible
              playbook: <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts neutron-svc-net-configure.yml \
    -e PROV_NET_TYPE=&#60;provider_network_type&#62; \
    -e PROV_PHYS_NET=&#60;physical_network_name&#62; \
    -e PROV_NET_VLAN_ID=&#60;vlan_id&#62; \
    -e SVC_NET_CIDR=&#60;provider_network_cidr&#62; \
    -e SVC_NET_DEST=&#60;svc_net_destination&#62; \
    -e SVC_NET_GATEWAY="gateway_used_by_the_network"</codeblock>
              <p>As an example, given a management network with the following attributes: <sl>
                  <sli>MGMT Net = 192.168.245.1/32</sli>
                  <sli>SVC Net = 10.55.66.0/24</sli>
                  <sli>SVC gateway to MGMT = 10.55.66.3</sli>
                  <sli>SVC Net VLAN = 100</sli>
                </sl> the playbook command for creating the service network would be:
                <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts neutron-svc-net-configure.yml -e PROV_NET_TYPE=vlan -e PROV_PHYS_NET=physnet1 -e PROV_NET_VLAN_ID=100 -e SVC_NET_CIDR=10.55.66.0/24 -e SVC_NET_DEST=192.168.245.1/32 -e SVC_NET_GATEWAY=10.55.66.3</codeblock></p>
              <note>To configure a service network for flat encapsulation, modify the service
                network creation statement: <codeph>-e PROV_NET_TYPE flat</codeph> The subnet
                creation statement does not change.</note></li>
              -->
          </ol></li>
      </ol>
    </section>
    <section>
      <title>Step 2. Download the Latest Version of HP Helion Development Platform</title>
      <p>The installation of the HP Helion Development Platform for HP Helion OpenStack is provided
        as a small compressed tar file. The images for the individual services will be downloaded at
        the installer's request.</p>
      <ol id="ol_ogs_qpt_nt">
        <li>Navigate to the <xref href="https://helion.hpwsportal.com/catalog.html#/Home/Show"
            format="html" scope="external">HP Helion Download Network</xref> (HDN) and log in. If
          necessary, create an account first.</li>
        <li>Download the Development Platform Installer 2.0.0.0 beta package.</li>
      </ol>
    </section>
    <section>
      <title>Step 3. Download and Install the Python Scripts</title>
      <ol>
        <li>SSH to the Deployer. </li>
        <li>Verify that you have access to the <xref href="https://pypi.python.org/pypi"
            scope="external" format="html">pypi</xref> site. If <i>ping</i> is unavailable, use
            <i>wget</i>.<codeblock>ping pypi.python.org</codeblock></li>
        <li>Install <codeph>python-virtualenv</codeph>
          <codeblock>sudo apt-get install python-virtualenv</codeblock></li>
        <li> Install <codeph>python-dev </codeph>
          <codeblock>sudo apt-get install python-dev</codeblock></li>
      </ol>
    </section>
    <section id="pre-installing-the-hp-helion-development-platform">
      <title>Step 4. Install the HP Helion Development Platform</title>
      <note type="tip"> For help with the installer, enter the command <codeph>openstack
          hdpi</codeph>
      </note>
      <ol>
        <li>SSH to the Deployer.
          <!--find out whether this works on a windows box or if it needs further explanation; where should this be run from?--></li>
        <li> If your network uses a proxy, it may be necessary to set the
            <codeph>https_proxy</codeph> and <codeph>http_proxy</codeph> shell variables so that the
          installer may download required Python libraries from the <xref
            href="https://pypi.python.org/pypi" scope="external" format="html">pypi</xref> site. To
          set the shell variables, enter the following commands:
          <codeblock>export https_proxy={ip address or url of https proxy} 
export http_proxy={ip address or url of http proxy} </codeblock>Example:
          <codeblock>export https_proxy=http://proxy.example.com
export http_proxy=http://proxy.example.com</codeblock></li>
        <li> If your network uses a proxy, you must define the proxy exclusion list. Enter the
          following command:
          <!--confirm if this setting is still necessary--><codeblock>export no_proxy=localhost,127.0.0.1, &lt;ip address or host name of identity service aka keystone&gt;</codeblock>
          Example: <codeblock>export no_proxy=localhost,127.0.0.1,10.0.0.10 </codeblock></li>
        <li>Create a Virtual Environment. <codeblock>virtualenv .devplatform</codeblock></li>
        <li>Source the Virtual
          Environment.<codeblock>source .devplatform/bin/activate</codeblock></li>


        <li>Install the Development Platform Installer in the Virtual Environment
          .<codeblock>pip install DevelopmentPlatformInstaller_2.0.0.0.tar.gz</codeblock></li>
      </ol>
    </section>
  </body>
</topic>
