<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_vsf_hnh_ts">
  <title>Install the Database Service</title>
  <body>
<section id="install-database">
<p>This section provides details on installing the Database Service for the Development Platform.<ul
          id="ul_rt3_x2z_nt">
  <li><xref href="#topic_vsf_hnh_ts/availability-zones">Configure Availablility Zones</xref></li>
  <li><xref href="#topic_vsf_hnh_ts/quotas">Set Quotas</xref></li>
  <li><xref href="#topic_vsf_hnh_ts/dbaas_installation">Install the Database Service</xref></li>
  <li><xref href="#topic_vsf_hnh_ts/configure_haproxy">Configure HAProxy</xref></li>
        </ul></p>
</section>

<section id="availability-zones"> <title>Configure Availability Zones</title>
<p>To configure the Database Service in a highly available manner, it is necessary to create
        separate availability zones. As a best practice, HP recommends creating three availability
        zones. All hosts should be placed within one of these availability zones. </p>
      <p>If a host is not associated with an availability zone, the Database Service will not be
        able to provision a database instance to it. As a result, the Database Service may run out
        of capacity even though there are hosts with free capacity.</p>
<p>The following steps show how to create three availability zones and assign a compute host to the zone.</p>
<ol>
<li>Execute the following commands to create three availability zones named: "AZ-1", "AZ-2" and
          "AZ-3".<codeblock>openstack aggregate create --zone AZ-1 aggregate-AZ-1
openstack aggregate create --zone AZ-2 aggregate-AZ-2
openstack aggregate create --zone AZ-3 aggregate-AZ-3</codeblock></li>
<li> Validate that the availability zones were correctly created by issuing the following
          command.<codeblock>openstack aggregate list</codeblock></li>
<li> The following commands will add a host to your newly created aggregate. Execute this command
          once for every host that you wish to associate with an
          aggregate.<codeblock>openstack aggregate add host &lt;aggregate name or id&gt; &lt;host&gt;</codeblock></li>
<li> The following command can be used to list all availability zones and the hosts associated with
          each one.<codeblock>openstack availability zone list</codeblock></li>
</ol>
</section>
<section id="quotas"> <title>Set Quotas</title>
<p>The project tenant must have sufficient quota available and unused resources for the service to
        use. To check existing quota availability, log in to Horizon as the <b>admin</b> user and
        open the <b>Overview</b> panel under the <b>Compute</b> tab.</p>
<p>If you are not configuring the Database Service to be highly available you must have the following quota available:</p>
<table>
<tgroup cols="2">
          <colspec colname="col1" colwidth="132pt"/>
          <colspec colname="col2" colwidth="77.25pt"/>
          <thead>
            <row>
              <entry>Resource</entry>
              <entry align="right">Usage</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Floating IPs</entry>
              <entry align="right">6</entry>
            </row>
            <row>
              <entry>Instances</entry>
              <entry align="right">6</entry>
            </row>
            <row>
              <entry>Networks</entry>
              <entry align="right">2</entry>
            </row>
            <row>
              <entry>RAM (GB)</entry>
              <entry align="right">24</entry>
            </row>
            <row>
              <entry>Routers</entry>
              <entry align="right">2</entry>
            </row>
            <row>
              <entry>Security Groups</entry>
              <entry align="right">6</entry>
            </row>
            <row>
              <entry>Volumes</entry>
              <entry align="right">4</entry>
            </row>
            <row>
              <entry>Volume Storage (GB)</entry>
              <entry align="right">160</entry>
            </row>
          </tbody>
        </tgroup>
</table>
<p>If you have set up Availability Zones and plan to install the Database Service in a highly-available configuration you must have the following quota available:</p>
<table>
<tgroup cols="2">
          <colspec colname="col1" colwidth="120pt"/>
          <colspec colname="col2" colwidth="87.75pt"/>
          <thead>
            <row>
              <entry>Resource</entry>
              <entry align="right">Usage</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Floating IPs</entry>
              <entry align="right">16</entry>
            </row>
            <row>
              <entry>Instances</entry>
              <entry align="right">16</entry>
            </row>
            <row>
              <entry>Networks</entry>
              <entry align="right">2</entry>
            </row>
            <row>
              <entry>RAM (GB)</entry>
              <entry align="right">64</entry>
            </row>
            <row>
              <entry>Routers</entry>
              <entry align="right">2</entry>
            </row>
            <row>
              <entry>Security Groups</entry>
              <entry align="right">6</entry>
            </row>
            <row>
              <entry>Volumes</entry>
              <entry align="right">4</entry>
            </row>
            <row>
              <entry>Volume Storage (GB)</entry>
              <entry align="right">600 </entry>
            </row>
          </tbody>
        </tgroup>
</table>
<p>In addition to the quotas mentioned above, for every database instance that is created by a user,
        the necessary resources to create that instance will be deducted from the admin project
        quota. The user's database service quota will also be affected.</p>
</section>
<section id="dbaas_installation">
      <title>Install the Database Service </title>
      <ol id="ol_xct_5dz_nt">
        <li> Source a stack RC file for the admin user and project. <ol>
            <li> Log in to Horizon using the admin account.</li>
            <li> Download the OpenStack RC file. <p>
                <image placement="break" href="../../../media/quickstartDownloadRCFile.png"
                  id="image_asb_jvy_nt"/>
              </p></li>
            <li>Use <codeph>scp</codeph> to copy the RC file over to the Deployer.</li>
            <li>SSH to the Deployer and source the RC file. You will need to provide the same admin
              password that you used to log in to Horizon. <p>
                <codeblock> source admin-openrc.sh</codeblock>
              </p></li>
          </ol></li><li>Create a file <codeph>~/.config/openstack/clouds.yaml</codeph> and enter the configuration
          information for your installation in the file. The following sample configuration provides
          a starting point. For more detailed information, see the OpenStack <xref
            href="http://docs.openstack.org/developer/python-openstackclient/configuration.html"
            format="html" scope="external">client configuration documentation</xref>. <note>The
            Identity URL can be found in Horizon at: <b>Project</b> &gt; <b>Compute</b> &gt;
              <b>Access &amp; Security</b> &gt; <b>API Access</b>. Note the URL for the Identity
            Service.
          </note><codeblock>clouds:
  mycloud:
    codn_username: hdnuser@domain.com
    codn_password: password
    horizon_url: http://&lt;horizon-ip-address&gt;/
    cacert: /etc/ssl/certs/ca-certificates.crt
    region_name: region1
    auth:
      auth_url: &lt;identity url&gt;
      project_name: &lt; admin project name&gt;
      username: &lt; admin user name&gt;
      password: &lt; admin password&gt;
    database:
      ephemeral_ca_cert: unset
      external_network: &lt;guid of ext-net&gt;
      provider_network: &lt; guid of svc-net&gt;
      ntp_server: &lt;ip address of ntp server&gt;
      keypair: default
      enable_ha: true
      flavor: m1.medium
      database_flavor: m1.medium
      messaging_flavor: m1.medium
      database_volume_size: 10
      logstash_rabbitmq_host: &lt; ip address of logging service&gt;
      logstash_rabbitmq_password: &lt; password for logging service&gt;
      hotpools_enabled: true
      hotpools_max_instances: 1
      hotpools_image_name: percona
      hotpools_flavor_names:
          - 'm1.medium'
          - 'm1.small'
          - 'm1.large'
      disable_rollback: true
      project_id: &lt; project id of user to install service to&gt;   </codeblock></li>
         <li>List the available database versions to install:
          <codeblock>openstack hdpi list --os-cloud mycloud | grep database</codeblock>The output
          should look similar
          to:<codeblock>database | wscatalog.2655 | 2.0.0.0 | available</codeblock></li>
        <li>Select the database version to install and view the details of the
          package:<codeblock>openstack hdpi show wscatalog.2655 --os-cloud mycloud</codeblock></li>
        <li>Install the database service
          <codeblock>openstack --os-cloud mycloud hdpi database install â€“-package wscatalog.2655 </codeblock></li>
      </ol>
    </section>
<section id="configure_haproxy"><sectiondiv><p><b>Configure HAProxy</b></p>The
        following steps will configure HAProxy to receive and forward HTTP requests to the VM that
        hosts the REST API endpoint for the Database Service.<ol>
          <li> Identify the API server IPs on the SVC network. You should have as many API servers
            (and IPs) as you have Availability Zones in your Helion OpenStack installation.<p>
              <codeblock>openstack server list | awk '/trove[0-9]*_api/{ print $4,"\t", substr($8,5) }'</codeblock>
            </p></li>
          <li> Identify the Virtual IP used to load balance the Helion OpenStack
            services:<codeblock>openstack endpoint show database -c publicurl --format value</codeblock></li>
          <li> Update configuration on each of the Helion OpenStack controller nodes by connecting
            to the controller and doing the following: <ol>
              <li>Edit the <i>/etc/haproxy/manual/paas.cfg</i> file and add the following lines. The
                last line should be repeated once for each API server identified in step
                1.<codeblock>listen trove_api
bind &lt;virtual IP from step 2&gt;:8779
option httpchk GET /
server trove-trove&lt;n&gt;_api-&lt;uniqueid&gt; &lt;API server n's IP Address&gt; check inter 2000 rise 2 fall 5 check-ssl ca-file /etc/ssl/certs/ca-certificates.crt</codeblock></li>
              <li> Edit the /etc/iptables/rules.v4 file and add to
                it:<codeblock>-I INPUT -p tcp --dport 8779 -j ACCEPT</codeblock></li>
              <li>Run the following command as
                root:<codeblock>sudo iptables -I INPUT -p tcp --dport 8779 -j ACCEPT</codeblock></li>
              <li>Reload the haproxy service
                configuration<codeblock>sudo service haproxy reload</codeblock></li>
            </ol></li>
          <li> The installation is complete. Return to the Horizon dashboard (you may log out and
            log in with a non-Admin account if desired), and click on the <b>Database</b> panel
            under the current Project to being using Database Service. </li>
        </ol></sectiondiv></section>

 
  </body>
</topic>
