<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="configure_logging">
  <title>HP Helion <tm tmtype="reg">OpenStack</tm> 2.0: Configuring the Centralized Logging
    Service</title>
  <body>
    <section id="config">
      <p>In HP Helion OpenStack 2.0 you will have the option to configure the Centralized Logging
        service for your needs. The information contained here will assist in this process.</p>
    </section>
    <section id="config_files">
      <p>Centralized Logging can be configured via the configuration files in the
          <codeph>~/helion/my_cloud/config/logging/</codeph> directory on the deployer. These files
        and their use are:</p>
      <table frame="all" rowsep="1" colsep="1" id="table_wtv_rc5_st">
        <tgroup cols="2">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <thead>
            <row>
              <entry>File</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>main.yml</entry>
              <entry>Main configuration file for all centralized logging components</entry>
            </row>
            <row>
              <entry>elasticsearch.yml.j2</entry>
              <entry>Main configuration file for elasticsearch</entry>
            </row>
            <row>
              <entry>elasticsearch-default.j2</entry>
              <entry>Default overrides for the elasticsearch init script</entry>
            </row>
            <row>
              <entry>kibana.yml.j2</entry>
              <entry>Main configuration file for Kibana</entry>
            </row>
            <row>
              <entry>kibana-apache2.conf.j2</entry>
              <entry>Apache configuration for Kibana</entry>
            </row>
            <row>
              <entry>logstash.conf.j2</entry>
              <entry>Logstash inputs/outputs configuration</entry>
            </row>
            <row>
              <entry>logstash-default.j2</entry>
              <entry>Default overrides for the logstash init script</entry>
            </row>
            <row>
              <entry>beaver.conf.j2</entry>
              <entry>Main configuration file for Beaver</entry>
            </row>
            <row>
              <entry>vars</entry>
              <entry>Path to logrotate configuration files</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section id="general_config"><title>General Configuration</title>
      <p>The Centralized Logging service needs to have the proper amount of resources available to
        it in order to perform adequately for different scale environments. The base logging levels
        will be tuned during installation according to the amount of RAM allocated to your control
        plane nodes to ensure optimum performance.</p>
      <table frame="all" rowsep="1" colsep="1" id="table_grx_2f5_st">
        <tgroup cols="7">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <colspec colname="c3" colnum="3"/>
          <colspec colname="c4" colnum="4"/>
          <colspec colname="c5" colnum="5"/>
          <colspec colname="c6" colnum="6"/>
          <colspec colname="newCol7" colnum="7" colwidth="1*"/>
          <thead>
            <row>
              <entry>Component</entry>
              <entry>Ansible Variable</entry>
              <entry>Demo (&lt;32GB)</entry>
              <entry>Small (&lt;64GB)</entry>
              <entry>Medium (&lt;128GB)</entry>
              <entry>Large (>= 128GB)</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Elasticsearch</entry>
              <entry>elasticsearch_heap_size</entry>
              <entry>256m</entry>
              <entry>8g</entry>
              <entry>16g</entry>
              <entry>32g</entry>
              <entry>Amount of heap allocated to Elasticsearch</entry>
            </row>
            <row>
              <entry>Logstash</entry>
              <entry>logstash_heap_size</entry>
              <entry>256m</entry>
              <entry>2g</entry>
              <entry>4g</entry>
              <entry>8g</entry>
              <entry>Amount of heap allocated to Logstash</entry>
            </row>
            <row>
              <entry>Logstash</entry>
              <entry>logstash_num_workers</entry>
              <entry>10</entry>
              <entry>10</entry>
              <entry>20</entry>
              <entry>30</entry>
              <entry>Number of logstash threads to spawn</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <p>These values can be viewed and changed in the
          <codeph>~/helion/my_cloud/config/logging/main.yml</codeph> file if you wish but you will
        need to run a reconfigure of the Centralized Logging service if changes are made..</p>
    </section>
    <section id="kibana_config">
      <title>Kibana Configuration</title>
      <p>The access information for Kibana is defined in
          <codeph>~/helion/my_cloud/config/logging/main.yml</codeph> and implemented in the Kibana
        configuration file
        <codeph>~/helion/my_cloud/config/logging/kibana-apache2.conf.j2</codeph>.</p>
      <table frame="all" rowsep="1" colsep="1" id="table_spl_rg5_st">
        <tgroup cols="3">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <colspec colname="c3" colnum="3"/>
          <thead>
            <row>
              <entry>Ansible Variable</entry>
              <entry>Default Value</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>kibana_user</entry>
              <entry>kibana</entry>
              <entry>Username that will be required for logging into the Kibana UI</entry>
            </row>
            <row>
              <entry>kibana_pass</entry>
              <entry>random password is generated</entry>
              <entry>Password generated during installation that is used to login to the Kibana
                UI</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section id="elasticsearch_config">
      <title>Elasticsearch Configuration</title>
      <p>Elasticsearch has a number of tunable options exposed in it's configuration that we have
        taken advantage of to tune Elasticsearch in HP Helion OpenStack in such a way that we favor
        indexing speed over search speed. We have also tuned it for optimal performance in low RAM
        environments. The options that we've modified are listed below along with an explanation as
        to why they were modified.</p>
      <p>These configurations are defined in
          <codeph>~/helion/my_cloud/config/logging/main.yml</codeph> and are implemented in the
        Elasticsearch configuration file
          <codeph>~/helion/my_cloud/config/logging/elasticsearch.yml.j2</codeph>.</p>
      <table frame="all" rowsep="1" colsep="1" id="table_qsd_3h5_st">
        <tgroup cols="5">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <colspec colname="c3" colnum="3"/>
          <colspec colname="c4" colnum="4"/>
          <colspec colname="c5" colnum="5"/>
          <thead>
            <row>
              <entry>Ansible Variable</entry>
              <entry>Configuration Parameter</entry>
              <entry>Default HP Helion OpenStack Value</entry>
              <entry>Elasticsearch Default Value</entry>
              <entry>Comments</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>elasticsearch_cluster_name</entry>
              <entry>cluster name</entry>
              <entry>elasticsearch</entry>
              <entry>elasticsearch</entry>
              <entry>Name of the Elasticsearch cluster. This variable cannot be changed after the
                initial deployment. Doing so will reset all Elasticsearch indices.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_fielddata_cache_size</entry>
              <entry>indices.fielddata.cache.size</entry>
              <entry>15%</entry>
              <entry>unbounded</entry>
              <entry>By default, this setting is <i>unbounded</i>â€”Elasticsearch will never evict
                data from fielddata, which is less than ideal when trying to conserve on memory
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_breaker_fielddata_limit</entry>
              <entry>indices.breaker.fielddata.limit</entry>
              <entry>25%</entry>
              <entry>60%</entry>
              <entry>The field data circuit breaker allows Elasticsearch to estimate the amount of
                memory a field will require to be loaded into memory. This value must be greater
                than <i><b>cache.size</b></i> to evict data properly.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_ttl_bulk_size</entry>
              <entry>indices.ttl.bulk_size</entry>
              <entry>100000</entry>
              <entry>10000</entry>
              <entry>The number of expired docs to delete at once.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_cache_filter_size</entry>
              <entry>indices.cache.filter.expire</entry>
              <entry>6h</entry>
              <entry>-1</entry>
              <entry>By default, this setting is -1 (i.e. never expires).</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_memory_index_buffer_size</entry>
              <entry>indices.memory.index_buffer_size</entry>
              <entry>50%</entry>
              <entry>10%</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_memory_min_index_buffer_size</entry>
              <entry>indices.memory.min_index_buffer_size</entry>
              <entry>200mb</entry>
              <entry>48mb</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_memory_min_shard_index_buffer_size</entry>
              <entry>indices.memory.min_shard_index_buffer_size</entry>
              <entry>12mb</entry>
              <entry>4mb</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_store_throttle_type</entry>
              <entry>indices.store.throttle.type</entry>
              <entry>merge</entry>
              <entry>merge</entry>
              <entry>Configures store module throttle for merges.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_store_throttle_max_bytes_per_sec</entry>
              <entry>indices.store.throttle.max_bytes_per_sec</entry>
              <entry>80mb</entry>
              <entry>20mb</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_refresh_interval</entry>
              <entry>index.refresh_interval</entry>
              <entry>30s</entry>
              <entry>1s</entry>
              <entry>Increasing refresh interval reduces overhead.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_merge_scheduler_max_thread_count</entry>
              <entry>index.merge.scheduler.max_thread_count</entry>
              <entry>1</entry>
              <entry>cores/2</entry>
              <entry>Elasticsearch recommends 1 if using spinning disks</entry>
            </row>
            <row>
              <entry>elasticsearch_index_translog_flush_threashhold_ops</entry>
              <entry>index.translog.flush_threshhold_ops</entry>
              <entry>150000</entry>
              <entry>unlimited</entry>
              <entry>Each shard has a transaction log or write ahead log associated with it. This
                setting controls when commits occur.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_translog_flush_threashhold_size</entry>
              <entry>index.translog.flush_threshhold_size</entry>
              <entry>1gb</entry>
              <entry>512mb</entry>
              <entry>Increasing this setting decreases fsync.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section id="service_config"><title>Service Logging Level Configuration</title>
      <p>To configure the logging level for a specific service follow these steps:</p>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglevel_config">
          <tgroup cols="4">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <colspec colname="c4" colnum="4"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Expected Default Logging Level</entry>
                <entry>Steps to Change Log Level</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry morerows="5">Ceilometer</entry>
                <entry>ceilometer-api</entry>
                <entry>INFO</entry>
                <entry>Ceilometer log level is configurable in
                  <b>roles/_CEI-CMN/defaults/main.yml:ceilometer_loglevel: INFO</b>. You can
                  change the ceilometer_loglevel in <b>roles/_CEI-CMN/defaults/main.yml</b> for all
                  components during deployment or after deployment. You can also change log level
                  for <b>ceilometer-api</b> only by changing
                  <b>roles/CEI-API/templates/api-logging.conf.j2:level: DEBUG</b>
                  <p>For post deployment log level changes, please re-run the following from
                    deployer node:
                    <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml ceilometer-reconfigure.yml</codeblock></p></entry>
              </row>
              <row>
                <entry>ceilometer-collector</entry>
                <entry>INFO</entry>
                <entry>Ceilometer log level is configurable in
                  <b>roles/_CEI-CMN/defaults/main.yml:ceilometer_loglevel: INFO</b>. You can
                  change the ceilometer_loglevel in <b>roles/_CEI-CMN/defaults/main.yml</b> for all
                  components during deployment or after deployment. You can also change log level
                  for <b>ceilometer-collector</b> only by changing
                  <b>roles/CEI-COL/templates/collector-logging.conf.j2:level: DEBUG</b>
                  <p>For post deployment log level changes, please re-run the following from
                    deployer node:
                    <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml ceilometer-reconfigure.yml</codeblock></p></entry>
              </row>
              <row>
                <entry>ceilometer-alarm-evaluator-json</entry>
                <entry>INFO</entry>
                <entry/>
              </row>
              <row>
                <entry>ceilometer-agent-notification</entry>
                <entry>INFO</entry>
                <entry>Ceilometer log level is configurable in
                  <b>roles/_CEI-CMN/defaults/main.yml:ceilometer_loglevel: INFO</b>. You can
                  change the ceilometer_loglevel in <b>roles/_CEI-CMN/defaults/main.yml</b> for all
                  components during deployment or after deployment. You can also change log level
                  for <b>ceilometer-agent-notification</b> only by changing
                  <b>roles/CEI-NAG/templates/agent-notification-logging.conf.j2:level: DEBUG</b>
                  <p>For post deployment log level changes, please re-run the following from
                    deployer node:
                    <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml ceilometer-reconfigure.yml</codeblock></p></entry>
              </row>
              <row>
                <entry>ceilometer-agent-central</entry>
                <entry>INFO</entry>
                <entry>Ceilometer log level is configurable in
                  <b>roles/_CEI-CMN/defaults/main.yml:ceilometer_loglevel: INFO</b>. You can
                  change the ceilometer_loglevel in <b>roles/_CEI-CMN/defaults/main.yml</b> for all
                  components during deployment or after deployment. You can also change log level
                  for <b>ceilometer-agent-central</b> only by changing
                  <b>roles/CEI-CAG/templates/agent-central-logging.conf.j2:level: DEBUG</b>
                  <p>For post deployment log level changes, please re-run the following from
                    deployer node:
                    <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml ceilometer-reconfigure.yml</codeblock></p></entry>
              </row>
              <row>
                <entry>ceilometer-expirer</entry>
                <entry>INFO</entry>
                <entry>Ceilometer log level is configurable in
                  <b>roles/_CEI-CMN/defaults/main.yml:ceilometer_loglevel: INFO</b>. You can
                  change the ceilometer_loglevel in <b>roles/_CEI-CMN/defaults/main.yml</b> for all
                  components during deployment or after deployment. You can also change log level
                  for <b>ceilometer-expirer</b> only by changing
                  <b>roles/CEI-EXP/templates/expirer-logging.conf.j2:level: DEBUG</b>
                  <p>For post deployment log level changes, please re-run the following from
                    deployer node:
                    <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml ceilometer-reconfigure.yml</codeblock></p></entry>
              </row>
              <row>
                <entry>Ceph</entry>
                <entry>ceph-mon <p>ceph-osd</p></entry>
                <entry>INFO</entry>
                <entry>Ceph log levels are configurable both during initial deployment and after the
                  deployment. Use the following variables (default is <b>INFO</b>, case-sensitive): 
                  <codeblock>ansible-playbook -i hosts/verb_hosts site.yml -e "ceph_mon_log_level=DEBUG, ceph_osd_log_level=DEBUG"</codeblock>
                  <!--<p>You can also use <b>-e "helion_loglevel=DEBUG"</b> to specify the log level,
                    which sets the log level across multiple HLM services (this includes both OSD
                    and MON). However the former two take higher precedence than
                      <b>helion_loglevel</b> variable. The same variables can be used while running
                      <b>ceph-deploy.yml</b> play also.</p>-->
                </entry>
              </row>
              <row>
                <entry morerows="2">Freezer</entry>
                <entry>freezer-agent</entry>
                <entry>INFO</entry>
                <entry>Currently the freezer-agent does not support debug logs. INFO level is the
                  default one used for this component.</entry>
              </row>
              <row>
                <entry>freezer-api</entry>
                <entry>INFO</entry>
                <entry>Currently the freezer-api does not support debug logs. INFO level is the
                  default one used for this component.</entry>
              </row>
              <row>
                <entry>freezer-scheduler</entry>
                <entry>INFO</entry>
                <entry>Currently the freezer-scheduler does not support debug logs. INFO level is
                  the default one used for this component.</entry>
              </row>
              <row>
                <entry>Glance</entry>
                <entry/>
                <entry>INFO</entry>
                <entry>Glance exposes logging configuration templates at deployer under
                  <codeph>~/helion/my_cloud/config/glance/
                    glance-[api,registry]-logging.conf</codeph>. After the needed changes are done
                  (for example logging level changes to local or centralized logging)
                  glance-reconfigure playbook must be ran targeting relevant nodes to deploy the
                  configuration change.
                  <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts glance-reconfigure.yml</codeblock></entry>
              </row>
              <row>
                <entry>Heat</entry>
                <entry/>
                <entry>INFO</entry>
                <entry>There are logging config files in my_cloud/config/heat directory[
                  api-cfn-logging.conf.j2 api-cloudwatch-logging.conf.j2 api-logging.conf.j2
                  engine-logging.conf.j2 ] . User can edit these files and set the desired log level
                  for both local as well as centralized logging. After making the changes run
                  heat-reconfigure playbook from the deployer to apply the changes.
                  <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts heat-reconfigure.yml</codeblock></entry>
              </row>
              <row>
                <entry>Keystone</entry>
                <entry>key-api</entry>
                <entry>INFO</entry>
                <entry>To configure logging levels, see <xref
                  href="../identity/identity_reconfigure.dita">Identity Service
                  Reconfigure</xref></entry>
              </row>
              <row>
                <entry>Monasca</entry>
                <entry/>
                <entry>WARN</entry>
                <entry>
                  <p>All of the Monasca logging is defaulted to WARN. To change the level for all of
                    our services you can run:</p>
                  <codeblock>cd ~/scratch/ansible/next/hos/ansible
                    ansible-playbook -i hosts/verb_hosts monasca-reconfigure.yml -e "monasca_log_level=DEBUG"
                    ansible-playbook -i hosts/verb_hosts monasca-agent-reconfigure.yml -e "monasca_log_level=DEBUG"</codeblock>
                  <p>If you want to change per a service each of the following var files have that
                    variable that you can set to the desired level:</p>
                  <ul>
                    <li>roles/monasca-persister/defaults/main.yml</li>
                    <li>roles/zookeeper/defaults/main.yml</li>
                    <li>roles/storm/defaults/main.yml</li>
                    <li>roles/monasca-notification/defaults/main.yml</li>
                    <li>roles/monasca-api/defaults/main.yml</li>
                    <li>roles/kafka/defaults/main.yml</li>
                    <li>roles/monasca-agent/defaults/main.yml (This one you will need to add the
                      variable)</li>
                  </ul>
                  <p>You will then need to run:</p>
                  <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts monasca-reconfigure.yml -e "monasca_log_level=DEBUG"
ansible-playbook -i hosts/verb_hosts monasca-agent-reconfigure.yml -e "monasca_log_level=DEBUG"</codeblock>
                </entry>
              </row>
              <row>
                <entry morerows="1">Nova</entry>
                <entry>nova-api</entry>
                <entry>INFO</entry>
                <entry>Nova service log levels are configurable in
                  <b>~/helion/my_cloud/config/nova/*-logging.conf.j2</b>. After you edit the
                  specify the level you would like, you will need to run the following series of
                  commands to commit them to the environment:<p>
                    <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "Change Nova logging"
cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml nova-reconfigure.yml</codeblock>
                  </p>
                </entry>
              </row>
              <row>
                <entry>nova-compute</entry>
                <entry>INFO</entry>
                <entry>Nova service log levels are configurable in
                  <b>~/helion/my_cloud/config/nova/*-logging.conf.j2</b>. After you edit the
                  specify the level you would like, you will need to run the following series of
                  commands to commit them to the environment:<p>
                    <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "Change Nova logging"
cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml nova-reconfigure.yml</codeblock>
                  </p></entry>
              </row>
              <row>
                <entry>Operations Console</entry>
                <entry>ops-web <p>ops-mon</p></entry>
                <entry>INFO</entry>
                <entry>
                  <p>Operations Console server log levels are configurable both during initial
                    deployment and after the deployment. Use the following variable (default is
                    <b>INFO</b>, case-sensitive):</p>
                  <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml -e "ops_console_loglevel=DEBUG"</codeblock>
                  <!--<p>You can also use <b>-e "helion_loglevel=DEBUG"</b> to specify the log level,
                    which sets the log level across multiple services. However the
                      <b>ops_console_loglevel</b> takes higher precedence than the
                      <b>helion_loglevel</b> variable. The same variables can be used while running
                    the <b>ops-console-deploy.yml</b> playbook as well.</p>-->
                </entry>
              </row>
              <row>
                <entry>Sherpa</entry>
                <entry/>
                <entry>INFO</entry>
                <entry>
                  <p>Logging level is set in <codeph>/etc/sherpa/sherpa.conf</codeph>. To change the
                    logging level, just change from INFO to DEBUG in the following line in
                    sherpa.conf:</p>
                  <codeblock>'sherpa': {'level': 'INFO', 'handlers': ['file', 'json']}</codeblock>
                </entry>
              </row>
              <row>
                <entry>Swift</entry>
                <entry/>
                <entry>INFO</entry>
                <entry>Swift service log levels are configurable in
                  <b>~/stack/helion/my_cloud/config/swift/account-server.conf.j2</b>. After you
                  edit the specify the level you would like, you will need to run the following
                  series of commands to commit them to the environment:<p>
                    <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "Change Swift logging"
cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml swift-reconfigure.yml</codeblock>
                  </p>
                </entry>
              </row>
              <row>
                <entry>VSA</entry>
                <entry>vsa-installer</entry>
                <entry>INFO</entry>
                <entry>
                  <p>VSA log levels are configurable for<b> vsa-installer</b> module. Use the
                    following variables (default is <b>INFO</b>, case-sensitive):</p>
                  <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml -e "vsa_installer_log_level=DEBUG"</codeblock>
                  <!--<p>You can also use <b>-e "helion_loglevel=DEBUG"</b> to specify the log level,
                    which sets the log level across multiple HLM services. However the
                      <b>vsa_installer_log_level</b> take higher precedence than
                      <b>helion_loglevel</b> variable. The same variables can be used while running
                      <b>vsa-deploy.yml</b> play also.</p>-->
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
    </section>
  </body>
</topic>
