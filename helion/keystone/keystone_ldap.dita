<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ifg_n33_bt">
  <title>LDAP Integration</title>
  <body>
    <section><title>Integrating with an external LDAP server</title>
      <p>If your organization, like most, uses an LDAP directory service such as Active Directory, you can integrate it with Keystone by following the steps outlined below. </p>
      <p>While you may configure LDAP at installation time, you may also add LDAP support on a
        per-domain basis after installation because Keystone also supports the option to specify
        identity driver configurations on a domain-by-domain basis. This allows you to, for example,
        give a specific domain its own LDAP server. In general,  the process to create an LDAP
        domain in Keystone looks like this:</p>
      <p><image href="../../media/keystone/ldap_flow.png" id="image_ifn_j2t_ct"/></p>
      <p>With domain_specific_drivers_enabled set to True, the ability to add domains individually
        will be enabled, causing Keystone to look in the ______________________ (e.g.
        ______________________) for configuration files of the form _____________________</p>
      <p>To integrate an LDAP domain, follow this process:</p>
      <ol>
        
        <li>Ensure that the <b>domain_specific_drivers_enabled</b> option is set to <b>True</b> in
          the main configuration file template
            (<b>_________________roles/KEY-API/templates/keystone.conf.j2</b>). You'll see a sample
          file at the end of this topic.</li>
        <li>Create a YAML file that contains the definition of the LDAP server connection. Use
            <b>roles/KEY-API/files/samples/keystone_configure_ldap_sample.yml</b> as an example.
          Save the file, as, for example, /tmp/myldap.yml. Please refer to the LDAP section of the
          Keystone Kilo documentation for a full list of options and descriptions: <xref
            href="http://docs.openstack.org/kilo/config-reference/content/keystone-configuration-file.html"
            format="html" scope="external"
            >http://docs.openstack.org/kilo/config-reference/content/keystone-configuration-file.html</xref></li>
        <li><note>The name of the file you create is important and must always be of the form:
            &lt;domain-name&gt;.yml, in /tmp where the domain name must match the name of the domain
            created in Keystone. Options provided in the domain-specific configuration file will
            override those in the primary configuration file (i.e. keystone.yml) for the specified
            domain. Domains without a specific configuration file will continue to use the options
            from the primary configuration file. For example, if the service provider creates a
            domain called "domainA", then the domain-specific configuration file must be
            domainA.yml. </note></li>
        <li>Run the reconfiguration playbook, passing the YAML file created in the previous step as
          a command-line option:
          <codeblock>ansible-playbook -i hosts/verb_hosts keystone-reconfigure.yml -e@/tmp/myldap.yml
</codeblock></li>
        <li>Follow these same steps for each LDAP domain with which you are integrating Keystone,
          creating a yaml file for each and running the reconfigure playbook once for each
          additional domain.</li>
        <li>Ensure that the new domain or domains were created for LDAP (Microsoft Active Directory
          in this example), and that user and group records can be retrieved: <codeblock># Import environment variables suited for Keystone administration
$ source keystone.osrc
 
# Get list of domains
stack@hLinux:~$ openstack domain list
+----------------------------------+---------+---------+----------------------------------------------------------------------+
| ID                               | Name    | Enabled | Description                                                          |
+----------------------------------+---------+---------+----------------------------------------------------------------------+
| 6740dbf7465a4108a36d6476fc967dbd | heat    | True    | Owns users and projects created by heat                              |
| default                          | Default | True    | Owns users and tenants (i.e. projects) available on Identity API v2. |
| b2aac984a52e49259a2bbf74b7c4108b | ad      | True    | Dedicated domain for users managed by Microsoft AD server            |
+----------------------------------+---------+---------+----------------------------------------------------------------------+
 
# Get list of LDAP groups
stack@hLinux:~$ openstack group list --domain ad
+------------------------------------------------------------------+------------+
| ID                                                               | Name       |
+------------------------------------------------------------------+------------+
| 03976b0ea6f54a8e4c0032e8f756ad581f26915c7e77500c8d4aaf0e83afcdc6 | testgroup1 |
| 7ba52ee1c5829d9837d740c08dffa07ad118ea1db2d70e0dc7fa7853e0b79fcf | testgroup2 |
+------------------------------------------------------------------+------------+
 
# Get user record
stack@hLinux:~$ openstack user show testuser1 --domain ad
+-----------+------------------------------------------------------------------+
| Field     | Value                                                            |
+-----------+------------------------------------------------------------------+
| domain_id | b2aac984a52e49259a2bbf74b7c4108b                                 |
| id        | 05f107e4b1645c52c24a529e3fb464647e4075a31db3e51b34e1ed41116d7706 |
| name      | testuser1                                                        |
+-----------+------------------------------------------------------------------+
 
# Grant testuser1 admin role within LDAP domain. For demonstration purpose only - don't do this in production!
# Please note that due to current Openstack CLI limitation, we have to use user ID rather then user name
# when working with non-default domain.
stack@hLinux:~$ openstack role add admin --user 05f107e4b1645c52c24a529e3fb464647e4075a31db3e51b34e1ed41116d7706 --domain ad
stack@hLinux:~$ openstack role assignment list --user 05f107e4b1645c52c24a529e3fb464647e4075a31db3e51b34e1ed41116d7706 --domain ad
+----------------------------------+------------------------------------------------------------------+-------+---------+----------------------------------+
| Role                             | User                                                             | Group | Project | Domain                           |
+----------------------------------+------------------------------------------------------------------+-------+---------+----------------------------------+
| c0b1ee04cd0c44c4bf001da9585b107e | 05f107e4b1645c52c24a529e3fb464647e4075a31db3e51b34e1ed41116d7706 |       |         | b2aac984a52e49259a2bbf74b7c4108b |
+----------------------------------+------------------------------------------------------------------+-------+---------+----------------------------------+

</codeblock>
          <note>The LDAP domain is read-only. This means that you cannot create a new user or group
            record in it. </note>
        </li>
        <li>Once an LDAP user is granted the appropriate role, he or she can authenticate within the
          specified domain by setting the appropriate OS_* environment variables for the OpenStack
          CLI.</li>
      </ol>
    </section>
    <section><title>Adjusting WSGI and logging parameters</title> To modify Web Server Gateway
      Interface (WSGI) parameters (such as process counts for public and admin Keystone interfaces)
      and log levels: <ol>
        <li>Adjust respective parameters in
            <b>roles/keystone-common/vars/keystone_deploy_config.yml</b>.</li>
        <li>Run reconfiguration playbook:
          <codeblock>ansible-playbook -i hosts/verb_hosts keystone-reconfigure.yml</codeblock>
        </li>
      </ol>
    </section>
    
    <section>
      <title>Sample LDAP configuration file</title>
      <p>
        
        Below is a sample LDAP configuration file
        
      </p>
      <codeblock>---

keystone_domainldap_conf:

    # CA certificates file content.
    # Certificates are stored in Base64 PEM format. This may be entire LDAP server
    # certificate (in case of self-signed certificates), certificate of authority 
    # which issued LDAP server certificate, or a full certificate chain (Root CA
    # certificate, intermediate CA certificate(s), issuer certificate).
    #
    cert_settings:
      cacert: |
        -----BEGIN CERTIFICATE-----

        generated certificate appears here

        -----END CERTIFICATE-----

    # A domain will be created in MySQL with this name, and associated with ldap backend.
    # Installer will also generate a config file named /etc/keystone/domains/keystone.&lt;domain_name>.conf
    #
    domain_settings:
      name: dept1
      description: Dedicated domain for dept1 users

    conf_settings:
      identity:
         driver: keystone.identity.backends.ldap.Identity

      assignment:
        driver: keystone.assignment.backends.sql.Assignment

      # For full list and description of ldap configuration options, please refer to
      # https://github.com/openstack/keystone/blob/master/etc/keystone.conf.sample or
      # http://docs.openstack.org/kilo/config-reference/content/keystone-configuration-file.html.
      #
      # Please note:
      #  1. LDAP configuration is read-only. Configuration which performs write operations (i.e. creates users, groups, etc)
      #     is not supported at the moment.
      #  2. LDAP is only supported for identity operations (reading users and groups from LDAP). Assignment
      #     operations with LDAP (i.e. managing roles, projects) are not supported.
      #  3. LDAP is configured as non-default domain. Configuring LDAP as a default domain is not supported.
      #
      ldap:
        url: ldap://ad.myorg.com
        suffix: DC=acme,DC=net
        user_tree_dn: CN=Users,DC=acme,DC=net
        user : CN=admin,CN=Users,DC=acme,DC=net
        password: REDACTED
        user_objectclass: user
        user_id_attribute: cn
        user_name_attribute: cn
        user_allow_create: False
        user_allow_update: False
        user_allow_delete: False
        group_tree_dn: CN=Users,DC=acme,DC=net
        group_objectclass: group
        group_id_attribute: cn
        group_name_attribute: cn
        group_allow_create: False
        group_allow_update: False
        group_allow_delete: False
        use_pool: True
        user_enabled_attribute: userAccountControl
        user_enabled_mask: 2
        user_enabled_default: 512
        use_tls: True
        # if you are configuring multiple LDAP domains, and LDAP server certificates are issued
        # by different authorities, make sure that CA file names are unique for each domain.
        tls_cacertfile: /etc/keystone/ssl/certs/domainname_ldapca.pem</codeblock>
      

    </section>
  </body>
</topic>
<!--

-->
