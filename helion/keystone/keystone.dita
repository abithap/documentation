<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ugs_fnd_bt">
  <title>Keystone Identity Service</title>
  <body>
    <section>
  
    <p>General Service Overview</p>

  <p><b>What is the Identity service</b></p>
  <p>The OpenStack Identity service, based on the Keystone API, is responsible for providing UserID
    authentication and access authorization to enable organizations the ability to achieve their
    access security and compliance objectives in order to successfully deploy OpenStack. In short,
    the Identity Service is the gateway to the rest of the OpenStack services. </p>
 
    </section>  
     <section>
    <p> <b>Authentication</b></p>
  <p>The authentication function provides the initial login function to OpenStack. Keystone supports
    multiple sources of authentication including a native or built-in authentication system. The
    Keystone native system can be used for all user management functions for proof of concept
    deployments or small deployments not requiring integration with a corporate authentication
    system but it lacks some of the advanced functions usually found in user management systems such
    as forcing password changes. The focus of the Keystone native authentication system is to be the
    source of authentication for OpenStack-specific users required for the operation of the various
    OpenStack services. These users are stored by Keystone in a default domain and do not require
    the addition of these IDs in an external authentication system.</p>
  <p>Keystone is more commonly integrated with external authentication systems like OpenLDAP or
    Microsoft Active Directory. These systems are usually centrally deployed by organizations to
    service as the single source of user management and authentication for all
    organizationally-deployed applications and systems requiring user authentication. In addition to
    LDAP and Microsoft Active Directory, support for integrating with SAML-based Identity Providers
    from companies like Ping, CA, IBM, Oracle, etc. is also on the verge of becoming
    “production-ready”. Keystone also provides architectural support via the underlying Apache
    deployment for other types of authentication systems like Multi-Factor Authentication. These
    types of systems typically require driver support and integration from the respective provider
    vendors. NOTE: While support for Identity Providers and Multi-factor authentication is available
    in Keystone it has not yet been certified by the Helion Openstack engineering team and is an
    experimental feature in Helion OpenStack v1.1.</p>
  <p>LDAP-compatible directories such as OpenLDAP and Microsoft Active Directory are recommended
    alternatives to using the Keystone local authentication. Both methods are widely used already by
    most organizations and are integrated with a variety of other enterprise applications. These
    directories act as the single source of user information within an organization. Keystone can be
    configured to authenticate against an LDAP-compatible directory on a per-domain basis. Domains,
    explained later in this slide deck, can be configured so that based on the user id, a incoming
    user is automatically mapped to a specific domain. This domain can then be configured to
    authenticate against a specific LDAP directory. The user credentials provided by the user to
    Keystone are passed along to the designated LDAP source for authentication. This communication
    can be optionally configured to be secure via SSL encryption. No special LDAP administrative
    access and only read-only access is required for this configuration. Keystone will NOT add any
    LDAP information. All user adds, deletes, and modifications are performed by the applications
    front ending the LDAP directories. After a user has been successfully authenticated they are
    then assigned to the groups, roles, and projects defined by the Keystone domain or project
    administrators. This information is stored within the Keystone service database.</p>
  <p>Another form of external authentication provided by the Keystone service is via integration
    with SAML-based Identity Providers (IdP) such as Ping Identity, IBM Tivoli, and Microsoft Active
    Directory Federation Server. A SAML-based IdP provides an authentication often called “single
    sign on”. The IdP server is configured to authenticate against identity sources like Active
    Directory and provides a single authentication API against multiple types of downstream identity
    sources. This means that an organization could have multiple identity storage sources but a
    single authentication source. In addition, if a user has “logged in” one during a defined
    session timeframe they do not need to re-authenticate within the defined session. The IdP will
    automatically validate the user to requesting applications and services. A SAML-based IdP
    authentication source is configured with Keystone on a per-domain basis similar to how native
    LDAP directories are configured. Extra mapping rules are required in the configuration that
    define which Keystone group an incoming UID is automatically assigned to. This means that groups
    needs to be defined in Keystone firstly but it also removes the requirement for a domain or
    project admin to have to assign user roles and project membership on a per user basis. Instead,
    groups are used to define project membership and roles and incoming users are automatically
    mapped to Keystone groups based on their upstream group membership. This provides a very
    consistent RBAC model based on the upstream identity source. The configuration of this option is
    fairly straight forward. IdP vendors like Ping and IBM are contributing to the maintenance of
    this function and have also produced their own integration documentation. HP is using the
    Microsoft Active Directory Federation Server for functional testing and future documentation.
    Horizon support for web single sign on is also now available in the OpenStack Kilo release but
    not yet validated for Helion OpenStack.</p>
  <p>The 3rd Keystone-supported authentication source is known as Multi Factor Authentication (MFA).
    MFA authentication typically requires an external source of authentication beyond a login name
    and password including options like a SMS text, a temporal token generator, a fingerprint
    scanner, etc. Each of these types of MFA are usually specific to particular MFA vendor. The
    Keystone architecture supports an MFA-based authentication system but this has not yet been
    certified and documented for Helion OpenStack.</p></section>
 <section><p>Authorization</p><p>The 2nd major function provided by the Keystone service is access
        authorization that determines what resources and actions are available based on the UserID,
        the role of the user, and the projects that a User is provided access to. All of this
        information is created, managed, and stored by Keystone. These functions are applied via the
        Horizon web interface, the OpenStack Command Line Interface or CLI client, or the direct
        Keystone API. </p><p>Keystone provides support for organizing users via 3 different entities
        including:</p><p>•Domains – Domains provide the highest level of organization. Domains are
        intended to be used as high level containers for multiple projects. A domain can represent
        different tenants, companies or organizations for an OpenStack cloud deployed for public
        cloud deployments or represent major business units, functions, or any other type of
        top-level organization unit in an OpenStack private cloud deployment. Each domain has at
        least one Domain Admin assigned to it. This domain admin can then create multiple projects
        within the domain and assign the project admin role to specific project owners. Each domain
        created in an OpenStack deployment is unique and the projects assigned to a domain cannot
        exist in another domain.•Projects – Projects are entities within a domain that represent
        groups of users, each user role within that project, and how many underlying infrastructure
        resources can be consumed by members of the project.•Groups – Groups are an optional
        function and provide the means of assigning project roles to multiple users at
        once.</p><p>Keystone also provides the means to create and assign roles to groups of users
        or individual users. The role names are created and user assignments are made within
        Keystone. The actual function of a role is defined currently per each OpenStack service via
        scripts. When a user requests access to an OpenStack service their access token contains
        information about their assigned project membership and role for that project. This role is
        then matched to the service-specific script and the user is allowed to perform functions
        within that service defined by the role mapping.</p><p>Infrastructure resource quotas are
        also defined within OpenStack. Quotas are defined per service but can be assigned via the
        Horizon user interface in the Projects section thus this function is often times associated
        with the Keystone API. This slide shows a screen shot of the Horizon interface used to
        configure upper limit quotas for specific infrastructure-related functions. Quotas are
        assigned per each project.</p><p/><b>Domains, Projects, Users, Groups, and Roles</b><p>Most
        large business organizations use an identity system like Microsoft Active Directory to store
        and manage their internal user information. A variety of applications such as HR systems in
        turn are used to manage the data inside of Active Directory. These same organizations often
        times deploy a separate user management system for external users such as contractors,
        partners, and customers. Multiple authentication systems are then deployed to support
        multiple types of users.</p><p>An LDAP-compatible directory like Active Directory provide a
        top level organization or domain component. In this example, the organization is called
        Acme. The domain component (DC) is defined as acme.com. Underneath the top level domain
        component are entities referred to as organizational units (OU). Organizational units are
        typically designed to reflect the entity structure of the organization. For example, this
        particular schema has 3 different organizational units for the Marketing, IT, and
        Contractors units or departments of the Acme organization. Users (and other types of
        entities like printers) are then defined appropriately underneath each organizational
        entity. The Keystone domain entity can be used to match the LDAP OU entity; each LDAP OU can
        have a corresponding Keystone domain created. In this example, both the Marketing and IT
        domains represent internal employees of Acme and use the same authentication source. The
        Contractors domain contains all external people associated with Acme. UserIDs associated
        with the Contractor domain are maintained in a separate user directory and thus have a
        different authentication source assigned to the corresponding Keystone-defined Contractors
        domain.</p><p>A public cloud deployment usually supports multiple, separate organizations.
        Keystone domains can be created to provide a domain per organization with each domain
        configured to the underlying organization’s authentication source. For example, the ABC
        company would have a Keystone domain created called “abc”. All users authenticating to the
        “abc” domain would be authenticated against the authentication system provided by the ABC
        organization; in this case <xref href="ldap">ldap://ad.abc.com</xref>. </p><b>Domains</b>•A
      domain is a top-level container targeted at defining major organizational entities.•Domains
      can be used in a multi-tenant Openstack deployment to segregate projects and users from
      different companies in a public cloud deployment or different organizational units in a
      private cloud setting.•Domains provide the means to identify multiple authentication
      sources.•Each domain is unique within an OpenStack implementation. •Multiple projects can be
      assigned to a domain but each project can only belong to a single domain. •Each domain and
      project have an assigned admin. •Domains are created by the “admin” service account and domain
      admins are assigned by the “admin” user.•The “admin” UserID (UID) is pre-created by the
      Keystone installation, has the “admin” role assigned to it, and is defined as the “Cloud
      Admin”. This UID is created using the “magic” or “secret” admin token found in the default
      ‘keystone.conf’ file installed during HOS keystone installation after the Keystone service has
      been installed. This secret token should be removed after installation and the “admin”
      password changed.•The “default” domain is created automatically during the HOS Keystone
      installation.•The “default” domain contains all OpenStack service accounts that are installed
      during the HOS keystone installation process.<ul id="ul_crr_fpd_bt">
        <li>No users but the OpenStack service accounts should be assigned to the "default"
          domain.</li>
      </ul>•Domain admins can be any UserID inside or outside of the domain<b>Domain
        Administrator</b>•A UID is a domain administrator for a given domain if that UID has a
      domain-scoped token scoped for the given domain. This means that the UID has the “admin” role
      assigned to it for the selected domain.•The Cloud Admin UID assigns the domain administrator
      role for a domain to a selected UID.•A domain administrator can create/delete local
      (authenticated against Keystone) users. These users will be assigned to the domain assigned to
      the domain administrator that creates the UserID.•A domain administrator can only create users
      and projects within their assigned domains.•A domain administrator can assign or revoke the
      “admin” role to their domains to another UID; each UID with the “admin” role for a specified
      domain will be co-administrators for that domain.•A UID can be assigned to be the domain admin
      of multiple domains.•A domain administrator can assign non-admin roles to any users and groups
      within their assigned domain including projects owned by their assigned domain.•A domain admin
      UID can belong to projects within their administered domains.•Each domain can have a different
      authentication source.•The domain field is used during the initial login to define the source
      of authentication.•The “List Users” function can only be executed by a UID with the domain
      admin role.•A domain administrator can assign a UID from outside of their domain the “domain
      admin” role but it is assumed that the domain admin would know the specific UID and would not
      need to List Users from an external domain.•A domain administrator can assign a UID from
      outside of their domain the “project admin” role for a specific project within their domain
      but it is assumed that the domain admin would know the specific UID and would not need to List
      Users from an external domain.<b>Projects</b>•The domain administrator creates projects within
      their assigned domain and assigns the project admin role to each project to a selected UID.•A
      UID is a project administrator for a given project if that UID has a project-scoped token
      scoped for the given project.•There can be multiple projects per domain.•The project admin
      sets the project quota settings, adds/deletes users and groups to the project, and defines the
      user/group roles for the assigned project.•Users can be belong to multiple projects and have
      different roles assigned per project•Users are assigned to a specific domain and a default
      project. Users can belong to multiple projects. Roles are assigned per project.<b>Users and
        Groups</b>•Each user belongs to one domain only.•Domain assignments are defined either by
      the domain configuration files or by a domain administrator when creating a new, local (user
      authenticated against Keystone) user.•There is no current method for “moving” a user from one
      domain to another.•A user can belong to multiple projects within a domain with a different
      role assignment per project.•A group is a collection of users.•Users can be assigned to groups
      either by the project admin or automatically via mappings if an external authentication source
      is defined for the assigned domain. •Groups can be assigned to multiple projects within a
      domain and have different roles assigned to the group per project.•A group can be assigned the
      “admin” role for a domain or project. All members of the group will be an “admin” for the
      selected domain or project.<b>Roles</b><p>Service roles represent the function used to
        implement the OpenStack role based access control, or RBAC, model used to manage access to
        each OpenStack service. Roles are named and assigned per user or group for each project by
        the Keystone service. Role definition and policy enforcement are defined outside of Keystone
        independently by each OpenStack service. The token generated by Keystone for each user
        authentication contains the role assigned to that user for a particular project. When a user
        attempts to access a specific OpenStack service the role is parsed by the service, compared
        to the service-specific policy file, and then granted the resource access defined for that
        role by the service policy file.</p><p>Each service has it’s own service policy file with
        the /etc/[SERVICE_CODENAME]/policy.json file name format where [SERVICE_CODENAME] represents
        a specific OpenStack service name. For example, the OpenStack Nova service would have a
        policy file called /etc/nova/policy.json.</p><p>Helion OpenStack is deployed with 3
        redundant control plane servers. If modified, the policy files for each service need to be
        replicated in each control plane server. Service restarts are NOT required for policy file
        changes.</p><p/><b>Current Limitations</b><b>Domains</b><ul id="ul_ks2_jpd_bt">
        <li>Domains can be created and managed by the Keystone API and OpenStackClient CLI.</li>
        <li>End users can authenticate to a particular project and domain via the Keystone API and
          OpenStackClient CLI.</li>
        <li>No Horizon web portal support currently exists for Domains. <ul id="ul_p52_jpd_bt">
            <li>Users cannot currently select a Domain when logging into Horizon</li>
            <li>No domains created by API or CLI will be visible in Horizon</li>
          </ul></li>
      </ul><b>Authentication with external authentication systems (LDAP, AD or Identity
        Providers)</b><ul id="ul_u52_jpd_bt">
        <li>The configuration of external authentication systems requires the creation and usage of
          Domains.</li>
        <li>All configurations are managed by creating and editing specific configuration files. </li>
        <li>No Horizon web portal support currently exists for the creation and management of
          external authentication system configurations.</li>
        <li>End users can authenticate to a particular project and domain via the Keystone API and
          OpenStackClient CLI.</li>
        <li>A new Domain Admin API has been included in the Kilo release of OpenStack but is
          currently an "experimental" function and is not recommended for production use until a
          future OpenStack release.</li>
      </ul><b>Keystone-to-Keystone Federation</b><ul id="ul_xw2_jpd_bt">
        <li>Keystone-to-Keystone (K2K) Federation provides the ability to authenticate once with one
          cloud and then use these credentials to access resources on other federated clouds.</li>
        <li>All configurations are managed by creating and editing specific configuration files. </li>
        <li>No Horizon web portal support currently exists for the creation and management of
          federation configurations.</li>
        <li>All end users authentication is available only via the Keystone API and OpenStackClient
          CLI.</li>
        <li>No current HP documentation is available for this function.</li>
        <li>Additional information can be found at <xref
            href="http://docs.openstack.org/developer/keystone/configure_federation.html"
            format="html" scope="external"
            >http://docs.openstack.org/developer/keystone/configure_federation.html</xref></li>
      </ul><b>Multi-Factor Authentication (MFA)</b><ul id="ul_az2_jpd_bt">
        <li>MFA provides the ability to deploy non-password based authentication; for example: token
          providing hardware and text messages.</li>
        <li>The Keystone architecture provides support for MFA deployments.</li>
        <li>Helion OpenStack MFA support is a custom configuration requiring HP Professional
          Services support.</li>
        <li>MFA drivers are not included with Helion OpenStack and need to be provided by a specific
          MFA vendor.</li>
        <li>Additional information can be found at <xref
            href="http://docs.openstack.org/security-guide/content/identity-authentication-methods.html#identity-authentication-methods-external-authentication-methods"
            format="html" scope="external"
            >http://docs.openstack.org/security-guide/content/identity-authentication-methods.html#identity-authentication-methods-external-authentication-methods</xref></li>
      </ul><b>Hierarchical Multitenancy</b><ul id="ul_tbf_jpd_bt">
        <li>Provides the ability to create sub-projects within a Domain-Project hierarchy.</li>
        <li>Requires additional OpenStack service support prior to being used for general use.</li>
        <li>Recommended currently only for test deployments.</li>
        <li>Additional information can be found at <xref
            href="http://specs.openstack.org/openstack/keystone-specs/specs/juno/hierarchical_multitenancy.html"
            format="html" scope="external"
            >http://specs.openstack.org/openstack/keystone-specs/specs/juno/hierarchical_multitenancy.html</xref>.</li>
      </ul><b>Installing Keystone</b><p>Keystone is a vital part of OpenStack, so it is installed
        automatically among the first services engaged by the Helion OpenStack installer (just after
        MySQL and RabbitMQ). Recommended way of installing Keystone is to let the installer install
        the default configuration. Once Helion OpenStack is up and running, you can add any
        customization to Keystone (like LDAP server integration). Please refer to "Updating
        Keystone" section below.</p><p/><p>Keystone" section below.</p><b>Default
        Settings</b><b>Keystone Configuration Settings</b><p>&lt;&lt;&lt;insert default settings of
        the keystone.conf file here&gt;&gt;&gt;</p><b>Default Domain and Service Accounts</b><p>The
        "default" domain is automatically created during the Keystone installation to contain the
        various, required OpenStack service accounts including the following:</p><ul
        id="ul_tzb_lpd_bt">
        <li>neutron</li>
        <li>glance</li>
        <li>swift-monitor</li>
        <li>ceilometer</li>
        <li>swift</li>
        <li>monasca-agent</li>
        <li>glance-swift</li>
        <li>swift-demo</li>
        <li>nova</li>
        <li>monascal</li>
        <li>logging</li>
        <li>demo &lt;&lt;&lt;why is this account auto-created??&gt;&gt;</li>
        <li>heat</li>
        <li>cinder</li>
        <li>admin</li>
      </ul><p>These are required accounts and are used by the underlying OpenStack services. These
        accounts should not be removed or reassigned to a different domain. The "default" domain
        should only be used for these service accounts.</p><p>&lt;&lt;&lt; insert instructions on
        how to change the service account passwords &gt;&gt;&gt;</p><p/><b>Post-Install Verification
        and Administration</b><p>Keystone query and administration tasks can be performed using
        openstack command line utility. The utility is installed by HLM onto deployer node. Also,
        HLM installs convenient *.osrc files which contain exports of environment variables used by
        openstack CLI.</p><p>
       <note></note>Keystone administration tasks should be performed by <i>admin</i> user with a
                  token scoped with <i>default</i> domain via v3 identity API. These settings are
                  pre-configured in the <i>keystone.osrc</i> file.
      </p></section>
  
  
  
  
  </body>
</topic>
<!---->
