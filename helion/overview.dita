<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="tech_overview">
  <title>HP Helion <tm tmtype="reg">OpenStack</tm> 2.0: Overview</title>
  <body>
    <!--Needs Edit-->
    <p>HP Helion OpenStack 2.0 is the latest OpenStack-based infrastructure-as-a-service cloud
      platform release from HP. It is based on the OpenStack Kilo release and implements core
      services and features of Kilo while providing new installation and management features.</p>

    <section><title>Installation, Configuration, and Management</title>
      <p>With the release of HP Helion OpenStack 2.0 comes an easy installation and configuration
        workflow. Installation of the basic cloud requires that you run approximately 14 commands,
        or use the new installation GUI to step through installation in a wizard-like fashion.</p>
      <p>OpenStack services are installed during the installation process, so there is no need to
        install and configure them individually. Instead, in HP Helion OpenStack 2.0, configuration,
        including which services to install, how many servers or nodes, what their individual roles
        will be, what storage will be used, which networks will hadle which traffic, and
        installation and configuration of the underlying operating system on each node is declared
        in configuration objects stored in YAML files. </p>
      <p>These files allow customization, and HP Helion OpenStack 2.0 ships with complete sets
        describing a few common configurations so that you may base your deployment on a template
        and customize from there if you wish.</p>
      <p>This installation and configuration is made possible by a new feature in HP Helion
        OpenStack 2.0, the configuration processor, a set of Python scripts that consume the data
        stored in the configuration YAML files and output Ansible variables used to configure
        networks, services, servers, and the other applications upon which the cloud runs.</p>
      <p>As you will read in the HP Helion OpenStack 2.0 <xref
          href="input_model.dita#input_model/toc">Input Model</xref> topic, the Configuration
        Processor reads and validates the input model described in the YAML files discussed above,
        combines it with the service definitions provided by HP Helion OpenStack and any persisted
        state information about the current deployment to produce a set of Ansible variables that
        can be used to deploy the cloud. It also produces a set of information files that provide
        details about the configuration. Reading this document you will gain a thorough
        understanding of how HP Helion OpenStack 2.0 allows you to deploy and manage your cloud via
        this comprehensive "wrapper" around cloud configuration.</p>
      <p>The example configurations that ship with HP Helion OpenStack 2.0 are described in <xref
          href="example_configurations.dita#example_configurations/contents">HP Helion OpenStack
          2.0: Example Configurations</xref></p>
      <p>
        <ul id="ul_ykn_41q_5t">
          <li><xref
              href="http://docs-staging.hpcloud.com/bundle-2015-may/helion/example_configurations.html#example_configurations__entryscale_kvm_vsa"
              format="html" scope="external">Entry-scale KVM with VSA model</xref></li>
          <li><xref
              href="http://docs-staging.hpcloud.com/bundle-2015-may/helion/example_configurations.html#example_configurations__entryscale_esx"
              format="html" scope="external">Entry-scale ESX model</xref></li>
          <li><xref
              href="http://docs-staging.hpcloud.com/bundle-2015-may/helion/example_configurations.html#example_configurations__entryscale_swift"
              format="html" scope="external">Entry-scale Swift model</xref></li>
          <li><xref
              href="http://docs-staging.hpcloud.com/bundle-2015-may/helion/example_configurations.html#example_configurations__entryscale_ceph"
              format="html" scope="external">Entry-scale KVM with Ceph model</xref></li>
          <li><xref
              href="http://docs-staging.hpcloud.com/bundle-2015-may/helion/example_configurations.html#example_configurations__midscale_kvm_vsa"
              format="html" scope="external">Mid-scale KVM with VSA model</xref></li>
        </ul>
      </p>
    </section>
    <section><title>Post-deployment Configuration</title>
      <p>In addition to initial installation and deployment, the addition of the configuration
        processor means that you can reconfigure your cloud easily after deployment.</p>
      <p>By executing pre-written, supplied Ansible playbooks you may perform management tasks such as those below, along with many others.
        <ul>
          <li>start, stop, and get the satus of OpenStack services</li>
          <li>add and remove controller, compute, and storage nodes </li>
          <li>back up or restore control plane nodes </li>
          <li>migrate Cinder volumes</li>
          <li>get Ceph status</li>
          <li>start and stop logging</li>
          <li>erase nodes to baremetal</li>
          <li>reimage nodes</li>
          <li>reconfigure Swift to add or replace drives</li>
          <li>validate Swift drives against the storage model declared</li>
          <li>create networks</li>
        </ul>
      </p>
      
      While the internal management of OpenStack services and the configuration of their functionality still occurs via the service APIs and follows the
      methodology outlined by OpenStack, the high-level management of the services themselves and their interaction with the cloud is accomplshed 
      via the Ansibe playbooks mentioned here.
    </section>

    <section><title>What's New in Documentation</title>
    </section>
  </body>
</topic>
