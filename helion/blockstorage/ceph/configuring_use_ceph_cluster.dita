<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_i2z_zc3_pt">
  <title>HP Helion <tm tmtype="reg">OpenStack</tm> 2.0: Configuring Ceph to use OpenStack Services (Cinder) </title>
  <body><!--Needs Edit-->
    <p>This page contains the following topics :<ul id="ul_vrf_jf3_pt">
        <li><xref href="#topic_i2z_zc3_pt/configure-ceph-as-cinder-backend" format="dita">Configure
            Ceph as a Cinder Backend</xref></li>
        <li><xref href="#topic_i2z_zc3_pt/configure-ceph-cinder-backup" format="dita">Configure Ceph
            as a Cinder Backup</xref></li>
        <li><xref href="#topic_i2z_zc3_pt/attach-ceph-volume-instance" format="dita">Attach Ceph
            Volume to an Instance</xref></li>
      </ul></p>
    <section id="configure-ceph-as-cinder-backend">
      <title>Configure Ceph as Cinder Backend</title>
      <p>Perform the following procedure on the Deployer node to configure Ceph as a Cinder
        backend:</p>
      <p><?oxy_custom_start type="oxy_content_highlight" color="140,255,140"?>If you have ceph
        cluster after your workload OpenStack VM is created and want to attach volume carved from
        storage backend then you need to reboot your OpenStack VM before attaching cinder volume
        (carved from ceph) to it. <?oxy_custom_end?> If the ceph cluster exist after the deployment
        of opnstack vm and you want to attach volume from storage backend then you need to reboot </p>
      <p>
        <ol id="ol_u12_kd3_pt">
          <li>Edit <codeph>~/helion/my_cloud/config/cinder/cinder.conf.j2</codeph> to add ceph
            configuration data as shown below:<codeblock>enabled_backends=ceph1</codeblock></li>
          <li>Copy the following
              configurations:<codeblock id="ceph-cinder-conf">[ceph1]
rbd_max_clone_depth = 5
rbd_flatten_volume_from_snapshot = False
rbd_uuid = 457eb676-33da-42ec-9a8c-9293d545c337
rbd_user = cinder
rbd_pool = volumes
rbd_ceph_conf = /etc/ceph/ceph.conf
volume_driver = cinder.volume.drivers.rbd.RBDDriver
volume_backend_name = ceph</codeblock><note>The
                <b>rbd_uuid </b>is same as <b>secret_id </b> available at
                <codeph>~/helion/my_cloud/config/ceph/user_model.yml</codeph>.<?oxy_custom_start type="oxy_content_highlight" color="255,255,0"?></note></li>
          <?oxy_custom_end?>
          <li> Copy <codeph>ceph.client.cinder.keyring</codeph> to the controller nodes:<ol
              id="ol_m5r_k23_pt">
              <li>Login to controller node as a root user and execute the following
                    command.<codeblock>ceph auth get-or-create client.cinder | tee /etc/ceph/ceph.client.cinder.keyring</codeblock><p><b>OR</b></p><p>You
                  can copy the keyring from the deployer
                  node<codeblock>scp /etc/ceph/ceph.client.cinder.keyring</codeblock> to
                    <codeph>/etc/ceph</codeph> folder on all the controller nodes.</p></li>
            </ol></li>
          <li>Commit your configuration to the local repository to configure cinder on the deployer node.<p>
              <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "&lt;commit message>"</codeblock>
            </p><note> Enter your commit message &lt;commit message></note></li>
          <li>Run the following command to create a deployment
            directory.<codeblock>cd ~/helion/hos/ansible
<codeph>ansible-playbook -i hosts/localhost ready-deployment.yml</codeph></codeblock></li>
          <li>Run the following ansible
            playbook:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cinder-reconfigure.yml</codeblock></li>
        </ol>
      </p>
    </section>
    <p>Once cinder is configured, launch the Horizon dashboard to create a cinder volume type to
      verify the ceph configuration as backend . Once you are able to create the volume, you can
      delete the created volume. For more information on verify the ceph configuration, refer to
        <xref href="../verify_backend_configuration.dita#topic_q5q_trz_jt">Verify Backend
        Configuration</xref>.</p>
    <p>The volumes are created on the ceph pool -volumes.</p>
    <section id="configure-ceph-cinder-backup">
      <title>Configure Ceph as a Cinder Backup</title>
      <p>Perform the following procedure on the Deployer node to configure Ceph as a Cinder
        backup:</p>
      <p>
        <ol id="ol_pvb_pf3_pt">
          <li>To enable cinder backup to Ceph, modify <codeph>cinder.conf.j2</codeph> at
              <codeph>~/helion/my_cloud/config/cinder</codeph> in the [<b>Default</b>] section with
            the following values:
              <codeblock># Ceph backup
backup_driver = cinder.backup.drivers.ceph
backup_ceph_conf = /etc/ceph/ceph.conf
backup_ceph_user = cinder-backup
backup_ceph_chunk_size = 134217728
backup_ceph_pool = backups
backup_ceph_stripe_unit = 0
backup_ceph_stripe_count = 0
restore_discard_excess_bytes = true</codeblock><note>You
              can add a comment (<b># Ceph backup </b>) as shown above so that the ceph backup
              content can be easily identified in the<codeph> cinder.conf.j2</codeph>
            file.</note></li>
          <li> Copy <codeph>client.cinder-backup.keyring</codeph> to the controller nodes:<ol
              id="ol_xx5_51x_gt">
              <li>Login to controller node as a root user and execute the following
                    command.<codeblock>ceph auth get-or-create client.cinder-backup | tee /etc/ceph/ceph.client.cinder-backup.keyring</codeblock><p><b>OR</b></p><p>You
                  can copy the keyring from the deployer
                  node<codeblock>scp /etc/ceph/ceph.client.cinder-backup.keyring</codeblock> to
                    <codeph>/etc/ceph</codeph> folder on all the controller nodes.</p></li>
            </ol></li>
          <li>Commit your configuration to the local repository to configure cinder on the deployer node.<p>
              <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "&lt;commit message>"</codeblock>
            </p><note> Enter your commit message &lt;commit message></note></li>
          <li>Run the following command to create a deployment
            directory.<codeblock>cd ~/helion/hos/ansible
<codeph>ansible-playbook -i hosts/localhost ready-deployment.yml</codeph></codeblock></li>
          <li>Run the following ansible
              playbook:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cinder-reconfigure.yml</codeblock><p>Once
              cinder is configured, launch the Horizon dashboard to create a cinder volume type and
              take a backup of the same to Ceph.
              <?oxy_custom_start type="oxy_content_highlight" color="255,255,0"?>For more
              information on verify the ceph configuration, refer to <xref
                href="../verify_backend_configuration.dita#topic_q5q_trz_jt">Verify Backend
                Configuration</xref>.<?oxy_custom_end?></p><p>This backup volume is stored in the
              Ceph pool backups.</p></li>
        </ol>
      </p>
    </section>
    <section id="attach-ceph-volume-instance">
      <title>Attach Ceph Volume to an Instance</title>
      <p>Perform the following steps to attach Ceph volume to an instance: <ol id="ol_vx4_4gv_kt">
          <li>On the deployer node, edit <codeph>kvm-hypervisor.conf.j2</codeph> at
              <codeph>~/helion/my_cloud/config/nova/kvm-hypervisor.conf.j2</codeph> to add the
            following for RBD volume
              attach:<codeblock>[libvirt]
rbd_user = cinder
rbd_secret_uuid = 457eb676-33da-42ec-9a8c-9293d545c337</codeblock><note>The
                <b>rbd_secret_uuid </b>is same as <b>secret_id </b> available at
                <codeph>~/helion/my_cloud/config/ceph/user_model.yml</codeph>.</note></li>
          <li>Commit your configuration to the local repository to configure cinder on the deployer node.<p>
              <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "&lt;commit message>"</codeblock>
            </p><note> Enter your commit message &lt;commit message></note></li>
          <li>Run the following command to create a deployment
            directory.<codeblock>cd ~/helion/hos/ansible
<codeph>ansible-playbook -i hosts/localhost ready-deployment.yml</codeph></codeblock></li>
          <li>Run the following ansible
            playbook:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts run nova-reconfigure.yml</codeblock></li>
        </ol></p>
    </section>
  </body>
</topic>
