<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" >
<topic xml:lang="en-us" id="topic12031">
  <title>HP Helion <tm tmtype="reg">OpenStack</tm> 2.0: Monitoring Guide</title>
  <body>
    <section id="about">
      <p>The HP Helion OpenStack Monitoring service leverages Monasca, which is a multi-tenant,
        scalable, fault-tolerant monitoring service. The name "Monasca" is short for "monitoring at
        scale".</p>
      <p>For details on OpenStack Monasca, see <xref href="https://wiki.openstack.org/wiki/Monasca"
          format="html" scope="external">https://wiki.openstack.org/wiki/Monasca</xref></p>
    </section>
    <section id="differences"><title>Differences Between Upstream and Helion OpenStack
        Implementations</title>
      <p>In the Helion OpenStack 2.0 release, the OpenStack monitoring standard, Monasca, is
        supported as the Helion OpenStack monitoring solution with the following exceptions (which
        are not implemented):</p>
      <ul>
        <li>Transform Engine</li>
        <li>Events Engine </li>
        <li>Anomaly and Prediction Engine</li>
      </ul>
      <note>Icinga, which was the supported monitor service in previous releases of Helion
        OpenStack, is not supported in Helion OpenStack 2.0.</note>
    </section>
    <section id="diagram">
      <title>Diagram of Monasca Service</title>
      <p><image placement="break" href="../images/monasca_diagram.png"/></p>
    </section>
    <section id="configuration"><title>Configuring Monasca</title>
      <p>In Beta 1 you will have the option to specify which database platform you want to use for
        the Metrics Database</p>
      <p>Monasca supports two different database options. The primary metrics database is <b>Vertica</b>, which
        is an HP analytics database with many features and impressive speed. This the default and
        recommended database to use for Helion OpenStack.</p>
      <p>The alternative database is <b>InfluxDB</b>. Though InfluxDB works, it does not handle failure
        recoveries in a high availability cluster very well, which is a known issue.</p>
      <p>To use InfluxDB there are two steps that must be completed during your cloud
        deployment:</p>
      <ul>
        <li>Edit the <codeph>data/ccp.yml</codeph> file, replacing 'vertica' with 'influxdb'</li>
        <li>Then when running the <codeph>hlm-deploy.yml</codeph> Ansible playbook, add the argument
            <codeph>-e database_type=influxdb</codeph></li>
      </ul>
      <p>Example:</p>
      <codeblock>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml -e tuning_selector=medium -e database_type=influxdb </codeblock>
    </section>
    <section id="working"><title>Working with Monasca</title>
      <p>Access to Monasca is available through the Web UI (<xref
          href="https://github.com/stackforge/python-monascaclient/blob/master/README.rst"
          format="html" scope="external">Operations Console</xref>), command-line interface (<xref
          href="#topic12031/cli">CLI</xref>), or the low-level <xref
          href="https://github.com/stackforge/monasca-api/blob/master/docs/monasca-api-spec.md"
          format="html" scope="external">REST API</xref>.</p>
    </section>
    <section id="opsconsole"><title>Operations Console</title>
      <p>The Operations Console (Ops Console) is designed for Helion OpenStack Administrators to
        have a web-based UI that they can use to view data about their Helion OpenStack
        infrastructure. The Ops Console offers the user access to data such as the alarms data by
        service, performance data, compute nodes and instances lists, and a drilldown to Kibana for
        a deep look into logs. The Business Logic Layer is a middleware component that serves as a
        single point of contact for the UI to communicate with OpenStack services such as Monasca,
        Nova, and others.</p>
    </section>
  </body>
</topic>
