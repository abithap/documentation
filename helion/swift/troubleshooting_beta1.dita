<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_sl2_nht_dt">
  <title>Swift- Troubleshooting </title>
  <body>
    <p>This page describes the troubleshooting scenarios for Swift service.<ul id="ul_ac4_s5d_ft">
        <li><xref href="#topic_sl2_nht_dt/interpreting-swift-validate-input-model" format="dita"
            >Interpreting _swift-validate-input-model.yml Errors</xref></li>
        <li><xref href="#topic_sl2_nht_dt/deploy-fails" format="dita">Deploy fails with: msdos disks
            labels do not support partition names</xref></li>
        <li><xref href="#topic_sl2_nht_dt/failure-ring" format="dita">Repeated Failure of Ring
            Creation</xref></li>
      </ul></p>
    <section id="interpreting-swift-validate-input-model">
      <title>Interpreting _swift-validate-input-model.yml Errors</title>
    </section>
    <p>When you execute the <codeph>_swift-validate-input-model.yml</codeph> playbook it can be hard
      to pick out the errors being reported. If so, you view the error messages as follows:<ol
        id="ol_szd_tht_dt">
        <li>Log onto the first node in the system that is running the swift-proxy-server process.
            <note> You must run the <codeph>_swift-validate-input-model.yml</codeph> playbook as
            mentioned in step <b>2</b> in <xref
              href="../installation.dita#topic_flx_j2b_ws/CloudDeploy"/> or run the
              <codeph>hlm-deploy.yml</codeph> playbook as described in step <b>4</b> in <xref
              href="../installation.dita#topic_flx_j2b_ws/CloudDeploy"/> otherwise the files needed
            to run the <codeph>swiftlm-ring-supervisor</codeph> will not be in place on the node.
          </note></li>
        <li>Execute the following
            command:<codeblock>sudo swiftlm-ring-supervisor --make-delta --report </codeblock><p>
            The command will report any errors or problems (see List of errors) with the input
            model. It also prints a summary of the ring create actions that are planned (i.e., that
            will occur) for the deploy phase of the process.</p></li>
      </ol></p>
    <section><b>List of errors</b></section>
    <p>The following example provides an error message, description, and the resolution.<note>To
        resolve an error, you must first modify the cloud model and re-run the configuration
        processor as described in <xref
          href="../installation.dita#topic_flx_j2b_ws/run-config-processor">Run the Configuration
          Processor</xref> and continue with the deploy.</note></p>
    <p>
      <ol>
        <li><b>Example Message - Model Missmatch: Cannot find drive /dev/sdt on padawan-ccp-c1-m2
            (192.168.245.3))</b><simpletable id="simpletable_crn_x2j_2t">
            <strow>
              <stentry><b>Description</b>
              </stentry>
              <stentry>The disk model used for node <b>padawan-ccp-c1-m2</b> has drive
                  <codeph>/dev/sdt</codeph> listed in the devices list of a device-group where Swift
                is the consumer. However, the <codeph>dev/sdt</codeph> device does not exist on that
                node.</stentry>
            </strow>
            <strow>
              <stentry><b>Resolution</b></stentry>
              <stentry>If a drive or controller is failed on a node, the operating system does not
                see the drive and hence the corresponding block device may not exist. Sometimes this
                is transitory and a reboot may resolve the problem. The problem may not be with
                  <codeph>/dev/sdt</codeph>, but with another drive. For example, if
                  <codeph>/dev/sds</codeph> is failed, when you boot the node, the drive that you
                expect to be called <codeph>/dev/sdt</codeph> is actually called
                  <codeph>/dev/sds</codeph>. <p>Alternatively, there may not be enough drives
                  installed in the server. You can add drives. Another option is to remove
                    <codeph>/dev/sdt</codeph> from the appropriate disk model. However, this removes
                  the drive for all servers using the disk model .</p></stentry>
            </strow>
          </simpletable></li>
        <li><b>Example Message - Model Missmatch: Cannot find drive /dev/sdd2 on padawan-ccp-c1-m2
            (192.168.245.3)</b><simpletable id="simpletable_wz4_jgj_2t">
            <strow>
              <stentry><b>Description</b>
              </stentry>
              <stentry>The disk model used for node<b> padawan-ccp-c1-m2</b> has drive
                  <codeph>/dev/sdt</codeph> listed in the devices list of a device-group where Swift
                is the consumer. However, the partition number (2) has been specified in the model.
                This is not supported – only specify the block device name (for example
                  <codeph>/dev/sdd</codeph>), not partition names in disk models.</stentry>
            </strow>
            <strow>
              <stentry><b>Resolution</b></stentry>
              <stentry>Remove the partition number from the disk model.</stentry>
            </strow>
          </simpletable></li>
        <li><b>Example Message - Cannot find IP address of padawan-ccp-c1-m3-swift for ring: account
            host: padawan-ccp-c1-m3-mgmt</b><simpletable id="simpletable_j3n_lfj_2t">
            <strow>
              <stentry><b>Description</b></stentry>
              <stentry>The service (in this example, swift-account) is running on the node
                  <b>padawan-ccp-c1-m3</b>. However, this node does not have a connection to the
                network designated for the swift-account service (i.e., the SWIFT
                network).</stentry>
            </strow>
            <strow>
              <stentry><b>Resolution</b></stentry>
              <stentry>Check the input model for which networks are configured for each node
                type.</stentry>
            </strow>
          </simpletable></li>
        <li>
          <b>Example Message - Ring: object-2 has specified replication_policy and
            erasure_coding_policy. Only one may be specified. </b><simpletable
            id="simpletable_jxv_lfj_2t">
            <strow>
              <stentry><b>Description</b>
              </stentry>
              <stentry>Only one of replication-policy or erasure-coding-policy may be used in a
                ring-specification.</stentry>
            </strow>
            <strow>
              <stentry><b>Resolution</b></stentry>
              <stentry>Remove one of the policy types.</stentry>
            </strow>
          </simpletable></li>
        <li><b>Example Message - Ring: object-3 is missing a policy type (replication-policy or
            erasure-coding-policy) </b><simpletable id="simpletable_e3b_mfj_2t">
            <strow>
              <stentry><b>Description</b>
              </stentry>
              <stentry>There is no replication-policy or erasure-coding-policy section in the
                ring-specifications for the object-0 ring.</stentry>
            </strow>
            <strow>
              <stentry><b>Resolution</b></stentry>
              <stentry>Add a policy type to the input model file. </stentry>
            </strow>
          </simpletable></li>
      </ol>
    </p>
    <section id="deploy-fails">
      <title>Deploy fails with - msdos disks labels do not support partition names</title>
      <note>This process only applies to Swift drives. It does not apply to the operating system or
        boot drive.</note>
      <simpletable id="simpletable_nh3_ptd_ft">
        <strow>
          <stentry><b>Description</b>
          </stentry>
          <stentry>If a disk drive allocated to Swift uses the MBR partition table type, the deploy
            process refuses to label and format the drive. This is to prevent potential data loss as
            explained in <xref
              href="allocating_disk_drives.dita#allocating-disk-drives/requirement-disk-device"
              >Requirements for a Disk Drive</xref>. If you intend to use the disk drive for Swift,
            you must convert the MBR partition table to GPT on the drive using
              <codeph>/sbin/sgdisk</codeph>.</stentry>
        </strow>
        <strow>
          <stentry><b>Resolution</b></stentry>
          <stentry>You must install <codeph>gdisk</codeph>, before using <codeph>sgdisk</codeph>.
              <ul id="ul_fqc_1hf_ft">
              <li>Execute the following command to install
                <codeph>gdisk</codeph>,<codeblock>sudo apt-get install gdisk</codeblock></li>
              <li>Convert to GPT partition type. This is an example for converting
                  <codeph>/dev/sdd</codeph> to the GPT partition
                type.<codeblock>sudo sgdisk –g /dev/sdd</codeblock></li>
              <li> Reboot the node to take effect. You may then resume the deploy (repeat the
                playbook that reported the error). </li>
            </ul></stentry>
        </strow>
      </simpletable>
    </section>
    <section id="failure-ring"><p><b>Repeated Failure of Ring Creation</b></p><p><b>Description</b>:
        Ansible playbook fails in swiftlm-ring-supervisor | build-rings</p><p>An ansible playbook
        fails as follows:
        <codeblock>TASK: [swiftlm-ring-supervisor | build-rings | Build ring (make-delta, rebalance)] *** 
failed: [hlm002-ccp-c1-m1-mgmt] =&gt; {"changed": true, "cmd": ["swiftlm-ring-supervisor", "--make-delta", "--rebalance", ....</codeblock></p>Examine
      the output and see if the output generated in your environment contains one of the following
      example messages:<p><b>Example Message
          1</b></p><codeblock>-------------------------------------------------------------------------------
NOTE: Dispersion of 11.718750 indicates some parts are not
      optimally dispersed.

      You may want to adjust some device weights, increase
      the overload or review the dispersion report.
-------------------------------------------------------------------------------</codeblock><p><b>Example
          Message 2</b><codeblock>No partitions could be reassigned.</codeblock></p><p><b>Example
          Message
        3</b><codeblock>Cowardly refusing to save rebalance as it did not change at least 1%</codeblock></p><p>
        <b>Example Message
        4</b><codeblock>NOTE: Balance of %.02f indicates you should push this ring, wait at least 16 hours, and rebalance/repush.</codeblock></p><p><b>Example
          Message 5</b><codeblock>Worst tier is 3.0 (2.4)</codeblock></p><p>If any one of the above
        message is displayed in your environment then it is certain that the Swift ring was created.
          </p><p><b> Resolution</b></p><p>Run the following command at least
        twice:<codeblock>ansible-playbook -i hosts/verb_hosts _swift-make-delta-rebalance.yml</codeblock></p><p>
        Each may fail with similar messages but each fails with a different ring.</p><p> Once the
        account, container, and object-O rings have failed, you can re-run the folllowing
        command:<codeblock>ansible-playbook -i hosts/verb_hosts site.yml</codeblock></p><p>Now, the
        ansible playbook will not stop at the "swiftlm-ring-supervisor | build-rings" task and the
        rings will be created successfully.</p><p> </p><p> </p></section>
  </body>
</topic>
