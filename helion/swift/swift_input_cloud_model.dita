<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="modify-input-model">
  <title>Overview of the Cloud Model : entry-scale-with-vsa </title>
  <body>
    <p>This page describes the configuration of Swift services with the various types of input
      models supported in this release. </p>
    <section><title>Types of Input Model(s)</title>
      <ul>
        <li><b>
            <xref href="#modify-input-model/entry-scale-with-vsa" format="dita"
              >entry-scale-with-vsa</xref></b>: This has a single control plane cluster which runs
          all services (Nova, Swift, Glance, etc) with an additional 3 resource nodes used as Nova
          compute servers.
            <p><!--<b><xref href="#topic_qkg_l4v_bt/mid-size" format="dita">mid size cloud</xref> </b>: This example cloud model describes a system using multiple servers and networks. It provides an example for the configuration of the mid sized cloud. --></p></li>
      </ul></section>
    <section id="entry-scale-with-vsa"><title>Entry-scale-with-vsa</title><p>The
          <codeph>entry-scale-with-vsa</codeph> input model is relatively simple and constrained.
        You must ensure that the disk drives exists and are correctly assigned to Swift nodes.
        Therefore, no Swift-specific modification is required for this model while deploying
        Swift.</p><p>Before starting the deployment, you must validate, and possibly update the data
        in the example cloud model files as follows:<ul>
          <li>Examine the <codeph>data/disks_controller.yml</codeph> file and validate that the
            drives exist and have the appropriate preconditions as described in <xref
              href="allocating_disk_drives.dita#allocating-disk-drives/requirement-disk-device"
              >Requirements for a disk device</xref>.</li>
          <li>If you plan to add more Swift storage nodes or drives, you should read the information
            about partition power in <xref
              href="ring_specifications.dita#ring-specification/selecting-partition-power"
              type="section">Specifying the rings (ring specifications)</xref>. However, in most
            cases you do not need to change the <codeph>data/swift/rings.yml</codeph> file.</li>
        </ul></p><sectiondiv><b>Node Type</b></sectiondiv><p><b>Proxy, Container, Account, Object
          (PACO) Node</b>: The Swift-proxy, Account, Container and Object services run on the same
        (PACO) node type in the control plane. All other control services also run in this node
        type.
        <!--This is used for smaller clouds or where Swift is a minor element in a larger cloud.--></p><sectiondiv><b>YML
          files associated with Swift Services</b></sectiondiv><p>The following <codeph>yml</codeph>
        files are configured for <b>entry-scale-with-vsa</b> model:</p><simpletable
        id="simpletable_mtc_yb1_kt">
        <strow>
          <stentry><codeph>data/control_plane.yml</codeph></stentry>
          <stentry>This<b> ROLE-CONTROLLER</b> node type runs on the <b>c1</b> cluster as specified
            in this file.</stentry>
        </strow>
        <strow>
          <stentry><codeph>data/disk_controller.yml</codeph></stentry>
          <stentry>The controller node type allocates two disk drives for use by Swift. </stentry>
        </strow>
        <strow>
          <stentry><codeph>data/swift/rings.yml</codeph></stentry>
          <stentry>Swift account, container, and object storage are managed by Swift using a data
            structure known as a <i>ring</i>. This <codeph>yml</codeph> file provides the
            specification of the rings. For more information on ring specification, refer to <xref
              href="ring_specifications.dita#ring-specification">ring
            specification</xref>.</stentry>
        </strow>
      </simpletable></section>
    <section id="mid-size"><title>Mid Size Cloud Model</title><p>This section describes configuration of Swift services in the mid size cloud model.</p><p>This example model allows you to modify the YAML files based on your environment. Use this example model as the basis for building a cloud model for your environment by configuring the servers and networks that you plan to deploy. Therefore, Swift -specific changes are required to the provided example while deploying Swift.</p><p><b>Pre-Deployment</b></p><p> You must <b>validate</b> and <b>update</b> the data in the cloud model files before starting the deployment.</p><p><ul id="ul_i1s_rbj_2t"><li>Assign servers for Swift - You must assign servers before you start to deploy Swift. Refer to the <xref href="allocating_server.dita#topic_tq1_xt5_dt">Allocating Servers</xref> for details.</li><li>Allocate disk drives - You must allocate disk drives to the server. Refer to the <xref href="allocating_disk_drives.dita#allocating-disk-drives">Allocating disk drives</xref> for details.</li><li>Specify the rings - You must assign rings for your system. Refer to <xref href="ring_specifications.dita#ring-specification"> Specifying the rings (ring specifications)</xref> for details.</li></ul></p></section><section><title>Node Type</title><p>There are two type of nodes that is associated with Swift services. They are as follows:<ul id="ul_fct_2ps_ht"><li><b>Proxy, Container, Account (PAC) Node</b>: This node runs the Swift-proxy, Swift-account, and Swift-container services. The Swift-proxy service processes API requests and directs them to the Swift-account, Swift-container or Swift-object services for processing. The Swift-account and Swift-container handle requests to accounts and containers respectively.</li><li><b>Object (OBJ) Node</b>: This node runs the Swift-object service. The Swift-object service handles requests for objects. </li></ul></p></section>
    <section>
      <title>YAML files associated with Swift Services </title><p>In the example mid sized cloud model, the Swift services are configured using the following <codeph>yml</codeph> files: <simpletable id="simpletable_ww1_kss_ht"><strow><stentry><codeph>data/control_plane.yml</codeph></stentry><stentry><p>The Proxy, Container, and Account node types are assigned to a dedicated <i>cluster of nodes</i> as specified in the <b>swpac</b> cluster in <codeph>yml</codeph> file. These nodes are dedicated only to Swift services. </p><p>The Object node type is assigned to a dedicated <i>resource nodes</i> group as specified in the <b>swobj</b> group in <codeph>yml</codeph> file. Requests to Swift are directed to a virtual IP address (VIP) that is managed by a cluster as specified in the <b>core</b> cluster in <codeph>data/control_plane.yml</codeph> file. The requests are then directed on the MGMT network to the Swift-proxy service on one of the Proxy, Container, Account nodes.</p></stentry></strow><strow><stentry><codeph>data/disks_swpac.yml</codeph></stentry><stentry>The Proxy, Container, Account node type uses two disk drives to store account and container databases which is specified in this file. For more information about allocating a disk drives, refer to <xref href="allocating_disk_drives.dita#allocating-disk-drives">Allocate disk drives</xref>.</stentry></strow><strow><stentry><codeph>data/swobj-disks.yml</codeph></stentry><stentry>The Object node type uses two disk drives to store account and container databases which is specified in this file. For more information about allocating a disk drives, refer to <xref href="allocating_disk_drives.dita#allocating-disk-drives">Allocate disk drives</xref>.</stentry></strow><strow><stentry><codeph>data/swift/rings.yml</codeph></stentry><stentry>Swift account, container, and object storage are managed by Swift using a data structure known as a <i>ring</i>. This <codeph>yml</codeph> file provides the specification of the rings. For more information on ring specification, refer to <xref href="ring_parameters.dita#topic_efw_k55_dt">ring specification</xref>.</stentry></strow></simpletable></p>
      <p>The Swift-proxy service uses two other cloud services. Both of these are configured in the example to run on the <b>core</b> cluster: <ul id="ul_iyr_gps_ht"><li>Swift validates tokens by making requests to the Keystone service</li><li>Swift caches tokens and other data using the memcached service</li></ul></p>
      <p>In the entry-scale-with-vsa cloud model, you can perform the following swift operations:<ul
          id="ul_hck_4c1_kt">
          <li><xref href="allocate-pac.dita"/></li>
          <li><xref href="allocating_server.dita"/></li>
          <li><xref href="creating_roles_swift_nodes.dita#topic_uh2_td1_kt"/></li>
          <li><xref href="allocating_network.dita#topic_pcj_hzv_dt"/></li>
          <li><xref href="allocating_disk_drives.dita"/></li>
          <li><xref href="creating-pac-cluster.dita"/></li>
          <li><xref href="creating-object-server-resource.dita"/></li>
          <li><xref href="ring_specifications.dita"/></li>
          <li><xref href="storage-policies.dita"/><p>You can not only perform the above operartion
              but you can check the <xref href="check-swift-operation.dita#topic_bvm_yg2_jt">swift
                operation</xref> in your environment.</p></li>
        </ul></p>
    </section>
  </body>
</topic>
