<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_evl_wln_pt">
  <title>Adding a New Storage Policy</title>
  <body>
    <p>This page describes the procedure to add an additional Storage Policy to an existing system.
      For an overview of Storage Policies see <xref href="storage_policies.dita"/>. </p>
    <p><b>Procedure to add a Storage Policy</b></p>
    <p>Perform the following steps to add the storage policy to an existing system.</p>
    <p>
      <ol id="ol_rxn_3qn_pt">
        <li>Select a storage policy index and ring name. <p>For example, if you already have
            object-0 and object-1 rings in your ring-specifications (usually in
              <codeph>data/swift/rings.yml</codeph> file), the next index is 2 and the ring name is
            object-2.</p></li>
        <li>Select a user-visible name so that you can see when you examine container metadata or
          when you want to specify the Storage Policy used when you create a container. The name
          should be a single word (hyphen and dashes are allowed).</li>
        <li>Decide if this new policy is to be the default for all new containers.</li>
        <li>Decide on other attributes such as partition-power and replica-count. See <xref
            href="ring_specifications.dita#ring-specification">Ring Specifications</xref> for more
          details on the required attributes.</li>
        <li>Edit the ring-specifications (usually in <codeph>data/swift/rings.yml</codeph> file) and
          add the new ring specification. If this policy is to be the default Storage Policy for new
          containers, set the default attribute to <b>yes</b>.<note>
            <ul id="ul_fgw_xqn_pt">
              <li>Ensure that only one object ring has the default attribute set to <b>yes</b>. If
                you make two rings as default, Swift processes will not start.</li>
              <li>Do not specify the weight-step attribute for the new object ring. Since this is a
                new ring there is no need to gradually increase device weights.</li>
            </ul>
          </note></li>
        <li>Update the appropriate disk model to use the new storage policy (for example:
            <codeph>data/disks_swobj.yml</codeph> file). The following sample shows that the
            <b>object-2</b> has been added to the list of existing rings that use the
            drives:<codeblock>disk-models:
- name: SWOBJ-DISKS
  ...
  device-groups:
  - name: swobj
    devices:
       ...
    consumer:
        name: swift
        attrs:
            rings:
            - object-0
            - object-1
            - <b>object-2</b>
  ...</codeblock><note>You
            must use the new object ring on at least one node that runs the <b>swift-object
              service.</b> If you skip this step and continue to run the
              <codeph>_swift-validate-input-model.yml</codeph> and<codeph> swift-deploy.yml</codeph>
            playbooks then it will fail with an error ,"There are no devices in this ring, or all
            devices have been deleted", as shown
            below:<codeblock>TASK: [swiftlm-ring-supervisor | build-rings | Build ring (make-delta, rebalance)] *** 
failed: [padawan-ccp-c1-m1-mgmt] => {"changed": true, "cmd": ["swiftlm-ring-supervisor", "--make-delta", "--rebalance"], "delta": "0:00:03.511929", "end": "2015-10-07 14:02:03.610226", "rc": 2, "start": "2015-10-07 14:02:00.098297", "warnings": []}
...
Running: swift-ring-builder /etc/swiftlm/builder_dir/region-region1/object-2.builder rebalance 999
ERROR: -------------------------------------------------------------------------------
An error has occurred during ring validation. Common
causes of failure are rings that are empty or do not
have enough devices to accommodate the replica count.
Original exception message:
There are no devices in this ring, or all devices have been deleted
-------------------------------------------------------------------------------</codeblock></note></li>
        <li>Commit your configuration as
            follows:<codeblock>git add -A
git commit -m "commit message"</codeblock><p>For
            example:<codeblock>cd ~/helion
git commit -a -m "added object-2 Storage Policy and updated SWOBJ disk model"</codeblock></p></li>
        <li>Re-run the configuration
          processor:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>Run the following command to create a deployment
          directory.<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>Validate the changes by running the <codeph>_swift-validate-input-model.yml</codeph>
          playbook as
          follows.<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts _swift-validate-input-model.yml</codeblock>If
          any errors occur, see <xref href="interpreting_swift_validate_input_model.dita"/> and
          correct them. Once the error is rectified, you must run the steps <b>5 -10.</b></li>
        <li>Create the new ring (for example; object-2) and reconfigure Swift node to use a new
          Storage Policy by running the <codeph>swift-deploy.yml</codeph> playbook as follows.
            <note>Before using <codeph>swift-deploy.yml</codeph>, check that Swift is running
            normally.</note><codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-status.yml
ansible-playbook -i hosts/verb_hosts swift-deploy.yml</codeblock></li>
      </ol>
    </p>
    <p>After adding a storage policy, there is no need to rebalance the ring.</p>
  </body>
</topic>
