<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_j2p_d1r_4t">
  <title>Adding Proxy, Account, Container (PAC) Node</title>
  <body>
    <p>This page describes the procedure to add new node(s)/Swift  Proxy, Account, Container (PAC)
      server to an existing system.</p>
    <section>
      <title>Procedure to add a new node</title>
      <p>To add a new node to your cloud, you will need to add it to <codeph>servers.yml</codeph>,
        and then run the scripts that update your cloud configuration. To begin, access the
          <codeph>servers.yml file</codeph> by checking out the git branch where you are required to
        make the changes:
        <!--You must add a new node details in the <codeph>server.yml</codeph> file. --></p>
      <p>Perform the following steps to add a new node:<ol id="ol_p4w_gbr_4t">
          <li><!--Log in to the deployer node.--> Get the <codeph>server.yml</codeph> file stored in
            git:<codeblock>cd ~/helion/my_cloud/definition/data
git checkout site</codeblock></li>
          <li>If not already done, set the weight-step attribute. See <xref
              href="preparing_ring_changes.dita#topic_t1y_vjs_4t/setting-weight-step-attribute"
              >Setting the weight-step attribute </xref>.</li>
          <li>Add details of new node(s) to <codeph>servers.yml</codeph> file as
              follows.<codeblock>servers:
...
- id: swpac4 
  role: SWPAC_ROLE
  server-group: &lt;server-group-name>
  mac-addr: &lt;mac-address>
  nic-mapping: &lt;nic-mapping-name>
  ip-addr: &lt;ip-address>
  ilo-ip: &lt;ilo-ip-address>
  ilo-user: &lt;ilo-username> 
  ilo-password: &lt;ilo-password></codeblock><p>
              In the above example only one new server <b>swpac4 </b> is added. However, you can add
              multiple servers by providing the server details in the <codeph>servers.yml</codeph>
              file.</p><p>In the entry-scale configurations, the Swift PAC servers are co-located
              with other services on the first control plane cluster. If you want to extend the
              Swift PAC servers, i.e, more than 3 Swift PAC, then you need to add dedicated servers
              for the Swift PAC service. You have an option to leave the first 3 Swift PAC servers
              on the first control plane cluster and add a new dedicated Swift PAC server; or you
              can have all the Swift PAC servers on the dedicated servers.</p><p>If you want to move
              the Swift PAC services from the first control plane cluster onto dedicated servers
              then remove all Swift services from the first control plane cluster. For example
              remove the following services from the first control plane cluster in
                <codeph>data/control_plane.yml</codeph>:<?oxy_custom_start type="oxy_content_highlight" color="153,255,255"?></p><p>
              <?oxy_custom_end?>
              <codeblock>- swift-ring-builder
- swift-proxy
- swift-account
- swift-container
- swift-client</codeblock>
            </p><p>To create a new control plane cluster for the 3 existing Swift PAC servers and
              the new Swift PAC server, refer to <xref
                href="creating_pac_cluster.dita#topic_rvj_21c_jt">creating PAC cluster</xref>. If
              there are 4 Swift PAC servers in the cluster, remember to set the
                <codeph>member-count</codeph> for the cluster in
                <codeph>data/control_plane.yml</codeph> file to <b>4</b> as shown
              below.<codeblock>control-planes:
- name: ccp
  region: region1
  . . .
  clusters:
  . . .
     - name: swpac
       cluster-prefix: c2
       server-role: SWPAC-ROLE
       member-count: <b>4</b>
       allocation-policy: strict
       service-components:
         - swift-ring-builder
         - swift-proxy
         - swift-account
         - swift-container
         - swift-client</codeblock></p></li>
          <li>Commit your
            changes.<codeblock>git add -A
git commit -m "Add Node &lt;name>"</codeblock></li>
          <li>Run the configuration
            processor:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
          <li>Run the following command to create a deployment
            directory.<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
          <li>Configure cobbler to include the new node and reimage the node as follows. If you are
            adding several nodes, use a comma separated list the nodelist
              argument:<codeblock>ansible-playbook -i hosts/localhost cobbler-deploy.yml
ansible-playbook -i hosts/localhost bm-reimage.yml -e nodelist=&lt;extra_vars></codeblock><p>In
              the following example we have used server id as <b>swpac4</b> (mentioned in step
              3).<codeblock>ansible-playbook -i hosts/localhost cobbler-deploy.yml
ansible-playbook -i hosts/localhost bm-reimage.yml -e nodelist=swpac4</codeblock></p><note>You
              must use the server id as it appears in the <codeph>servers.yml</codeph> file in the
              field &lt;extra_vars></note></li>
          <li>Examine the <codeph>cloudConfig.yml</codeph> and<codeph>
              data/control_plane.yml</codeph> files to get the host prefix (for example, helion) and
            the control plane name (for example, ccp). This gives you the hostname of the node.
            Configure the operating system as
              follows.<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts osconfig-run.yml –limit &lt;hostname></codeblock><p>For
              example, for <b>swpac4</b>, the hostname is <b>helion-ccp-swpac4-mgmt</b>.
              <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts osconfig-run.yml –limit helion-ccp-swpac4-mgmt</codeblock></p></li>
          <li>Validate that the disk drives of the new node are compatible with the disk model used
            by the node as
            follows.<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts _swift-validate-input-model.yml</codeblock>If
            any errors occur, review <xref
              href="interpreting_swift_validate_input_model.dita#topic_avw_22b_kt">Interpreting
              _swift-validate-input-model.yml Errors</xref>.</li>
          <li>Run the <codeph>hlm-deploy.yml</codeph> playbook to rebalance the rings to include the
            node, deploy the rings and to configure the new node. Do not limit to just the node
              (<b>swpac4</b>) that you are
            adding.<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts hlm-deploy.yml --limit SWF*</codeblock></li>
          <li>Further rebalances of the rings may be necessary. Use the process described in weight
            change phase of ring rebalance and final Rebalance phase at <xref
              href="input_model_change_existing_rings.dita#topic_vyp_cft_4t">Applying Input Model
              Changes to Existing
              Rings</xref>.<p><!--Once you have added a new node/server to the system, you must enure that the Swift rings are updated with the new node/server(s) details and the rings are distributed to all Swift servers.-->
              Run the following
              command:<codeblock>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml --limit SWF* </codeblock></p></li>
        </ol></p>
    </section>
  </body>
</topic>
