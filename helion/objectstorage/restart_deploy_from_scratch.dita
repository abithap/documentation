<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_enj_cms_mt">
  <title>HP Helion <tm tmtype="reg">OpenStack</tm> 2.0: Restarting the Object Storage Deployment</title>
  <body><!--Needs Edit-->
    <p>This page describes the various operational procedures performed by Swift.</p>
    <section>
      <title>Restart the Swift Object Storage Deployment </title>
      <p>The structure of ring is built in an incremental stages. When you modify a ring, the new
        ring uses the state of the old ring as a basis for the new ring. Rings are stored in the
        builder file. The <b>swiftlm-ring-supervisor</b> stores builder files in the
          <codeph>/etc/swiftlm/builder_dir directory/</codeph> on the Ring-Builder node. The builder
        files are named &lt;ring-name> builder. Prior versions of the builder files are stored in
        the <codeph>/etc/swiftlm/builder_dir/backups</codeph> directory.</p>
      <p>Generally, you use an existing builder file as the basis for changes to a ring. However, at
        initial deployment, when you create a ring there will be no builder file. Instead, the first
        step in the process is to build a builder file. The deploy playbooks does this as a part of
        the deployment process. If you have successfully deployed some of the system, the ring
        builder files will exist. </p>
      <p>Suppose you change your input model (for example, adding servers) now, the process assumes
        you are <i>modifying</i> a ring and behaves differently than while creating a ring from the
        scratch. In such case the ring is not balanced. So, if the cloud model contains an error or
        you decide to make substantive changes, it is always advised to start from scratch and build
        rings from the scratch using procedure described in resetting builder files below.</p>
      <?oxy_custom_start type="oxy_content_highlight" color="255,60,255"?>
    </section>
    <?oxy_custom_end?>
    <section>
      <title>Resetting Builder Files</title>
      <note>You must reset the builder files during the initial deployment process (only). This
        process should be used only when you want to restart a deploy from the scratch. If you reset
        the builder files after completing your initial deployment then you are at a risk of loosing
        critical system data.<p>To reset the builder files from scratch, do the following:<ul
            id="ul_otm_stz_4t">
            <li>You must know your Keystone region name. Each distinct Swift system uses a different
              Keystone region. If you have several Keystone regions and you are trying to return to
              the start state for region2, you do not want to delete the builder files of region1 as
              this is presumably running normally.</li>
            <li>Delete the builder files in the
                <codeph>/etc/swiftlm/builder-dir/region-&lt;region-name>/</codeph> directory. For
              example, for the region2 Keystone region, use this
                command:<codeblock>sudo rm /etc/swiftlm/builder_dir/region-region2/*.builder</codeblock><note>If
                you have successfully deployed a system and accidentally delete the builder files,
                you can recover to the correct state using <xref
                  href="recovering_builder_file.dita#topic_gbz_13t_mt">Recovering Builder Files
                  process</xref>.</note></li>
          </ul></p></note>
    </section>
  </body>
</topic>
