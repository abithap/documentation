<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Users\sharmabi\git\documentation\helion\temp\topic-pdf\helion\keystone?><?workdir-uri file:/C:/Users/sharmabi/git/documentation/helion/temp/topic-pdf/helion/keystone/?><?path2project ..\?><?path2project-uri ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="topic_iq3_nl3_bt" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="topic:1;3:30">
  <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="title:1;4:10">Domains, Projects, Users, Groups, and Roles</title>
  <body class="- topic/body " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="body:1;5:9">
    <section id="domains_projects_roles" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="section:1;6:42">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="title:2;7:14">Domains, Projects, Users, Groups, and Roles</title>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="p:1;8:10">Most large business organizations use an identity system such as Microsoft Active Directory
        to store and manage their internal user information. A variety of applications such as HR
        systems are, in turn, used to manage the data inside of Active Directory. These same
        organizations often deploy a separate user management system for external users such as
        contractors, partners, and customers. Multiple authentication systems are then deployed to
        support multiple types of users.</p><p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="p:2;13:48">An LDAP-compatible directory such as Active Directory
        provides a top-level organization or domain component. In this example, the organization is
        called Acme. The domain component (DC) is defined as acme.com. Underneath the top level
        domain component are entities referred to as organizational units (OU). Organizational units
        are typically designed to reflect the entity structure of the organization. For example,
        this particular schema has 3 different organizational units for the Marketing, IT, and
        Contractors units or departments of the Acme organization. Users (and other types of
        entities like printers) are then defined appropriately underneath each organizational
        entity. The Keystone domain entity can be used to match the LDAP OU entity; each LDAP OU can
        have a corresponding Keystone domain created. In this example, both the Marketing and IT
        domains represent internal employees of Acme and use the same authentication source. The
        Contractors domain contains all external people associated with Acme. UserIDs associated
        with the Contractor domain are maintained in a separate user directory and thus have a
        different authentication source assigned to the corresponding Keystone-defined Contractors
        domain.</p><p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="p:3;27:23">A public cloud deployment usually supports multiple, separate organizations.
        Keystone domains can be created to provide a domain per organization with each domain
        configured to the underlying organization's authentication source. For example, the ABC
        company would have a Keystone domain created called "abc". All users authenticating to the
        "abc" domain would be authenticated against the authentication system provided by the ABC
        organization; in this case ldap://ad.abc.com </p>
    </section>
    <section id="domains" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="section:2;34:27">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="title:3;35:14">Domains</title> A domain is a top-level container targeted at defining major
      organizational entities. <ul class="- topic/ul " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="ul:1;36:36">
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:1;37:13"> Domains can be used in a multi-tenant OpenStack deployment to segregate projects and
          users from different companies in a public cloud deployment or different organizational
          units in a private cloud setting.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:2;40:13">Domains provide the means to identify multiple authentication sources.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:3;41:13">Each domain is unique within an OpenStack implementation. </li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:4;42:13">Multiple projects can be assigned to a domain but each project can only belong to a
          single domain. </li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:5;44:13">Each domain and project have an assigned admin.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:6;45:13">Domains are created by the "admin" service account and domain admins are assigned by the
          "admin" user.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:7;47:13">The "admin" UserID (UID) is pre-created by the Keystone installation, has the "admin"
          role assigned to it, and is defined as the "Cloud Admin". This UID is created using the
          "magic" or "secret" admin token found in the default 'keystone.conf' file installed during
          HOS keystone installation after the Keystone service has been installed. This secret token
          should be removed after installation and the "admin" password changed.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:8;52:13">The "default" domain is created automatically during the HOS Keystone installation.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:9;53:13">The "default" domain contains all OpenStack service accounts that are installed during
          the HOS keystone installation process.</li>

        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:10;56:13">No users but the OpenStack service accounts should be assigned to the "default"
          domain.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:11;58:13">Domain admins can be any UserID inside or outside of the domain.</li>
      </ul>
    </section>
    <section id="domain_admin" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="section:3;61:32">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="title:4;62:14">Domain Administrator</title> A UID is a domain administrator for a given domain if that
      UID has a domain-scoped token scoped for the given domain. This means that the UID has the
      "admin" role assigned to it for the selected domain. <ul class="- topic/ul " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="ul:2;64:64">
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:12;65:13">The Cloud Admin UID assigns the domain administrator role for a domain to a selected
          UID.</li>

        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:13;68:13">A domain administrator can create and delete local users who have authenticated against
          Keystone. These users will be assigned to the domain belonging to the domain administrator
          who creates the UserID.</li>

        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:14;72:13">A domain administrator can only create users and projects within her assigned
          domains.</li>

        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:15;75:13">A domain administrator can assign the "admin" role of their domains to another UID or
          revoke it; each UID with the "admin" role for a specified domain will be a
          co-administrator for that domain.</li>

        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:16;79:13">A UID can be assigned to be the domain admin of multiple domains.</li>

        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:17;81:13">A domain administrator can assign non-admin roles to any users and groups within their
          assigned domain, including projects owned by their assigned domain.</li>

        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:18;84:13">A domain admin UID can belong to projects within their administered domains.</li>

        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:19;86:13">Each domain can have a different authentication source.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:20;87:13">The domain field is used during the initial login to define the source of
          authentication.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:21;89:13">The "List Users" function can only be executed by a UID with the domain admin role.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:22;90:13">A domain administrator can assign a UID from outside of their domain the "domain admin"
          role but it is assumed that the domain admin would know the specific UID and would not
          need to list users from an external domain.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="li:23;93:13">A domain administrator can assign a UID from outside of their domain the "project admin"
          role for a specific project within their domain but it is assumed that the domain admin
          would know the specific UID and would not need to list users from an external domain.</li>
      </ul>
    </section>
    <section id="projects" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="section:4;98:28">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="title:5;99:14">Projects</title> The domain administrator creates projects within his assigned domain
      and assigns the project admin role to each project to a selected UID. A UID is a project
      administrator for a given project if that UID has a project-scoped token scoped for the given
      project. There can be multiple projects per domain. The project admin sets the project quota
      settings, adds/deletes users and groups to and from the project, and defines the user/group roles for
      the assigned project. 
      Users can be belong to multiple projects and have different roles on each project. 
      Users are assigned to a specific domain and a default project. Roles are assigned per project. </section>
    <section id="users_groups" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="section:5;107:32">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="title:6;108:14">Users and Groups</title> Each user belongs to one domain only. Domain assignments are
      defined either by the domain configuration files or by a domain administrator when creating a
      new, local (user authenticated against Keystone) user. There is no current method for "moving"
      a user from one domain to another. A user can belong to multiple projects within a domain with
      a different role assignment per project. A group is a collection of users. Users can be
      assigned to groups either by the project admin or automatically via mappings if an external
      authentication source is defined for the assigned domain. Groups can be assigned to multiple
      projects within a domain and have different roles assigned to the group per project. A group
      can be assigned the "admin" role for a domain or project. All members of the group will be an
      "admin" for the selected domain or project. </section>
    <section id="roles" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="section:6;118:25">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="title:7;119:14">Roles</title>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="p:4;120:10">Service roles represent the function used to implement the OpenStack role based access
        control, or RBAC, model used to manage access to each OpenStack service. Roles are named and
        assigned per user or group for each project by the Keystone service. Role definition and
        policy enforcement are defined outside of Keystone independently by each OpenStack service.
        The token generated by Keystone for each user authentication contains the role assigned to
        that user for a particular project. When a user attempts to access a specific OpenStack
        service the role is parsed by the service, compared to the service-specific policy file, and
        then granted the resource access defined for that role by the service policy
        file.</p><p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="p:5;128:21">Each service has its own service policy file with the <b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="b:1;128:78">/etc/[SERVICE_CODENAME]/policy.json</b>
        file name format where [SERVICE_CODENAME] represents a specific OpenStack service name. For
        example, the OpenStack Nova service would have a policy file called
          <b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="b:2;131:14">/etc/nova/policy.json</b>.</p><p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\keystone\keystone_roles.dita" xtrc="p:6;131:47">Helion OpenStack is deployed with 3 redundant
        control plane servers. If modified, the policy files for each service need to be replicated
        in each control plane server. Service restarts are NOT required for policy file changes.</p>
    </section>

  </body>
</topic>