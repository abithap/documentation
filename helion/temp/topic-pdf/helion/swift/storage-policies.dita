<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Users\sharmabi\git\documentation\helion\temp\topic-pdf\helion\swift?><?workdir-uri file:/C:/Users/sharmabi/git/documentation/helion/temp/topic-pdf/helion/swift/?><?path2project ..\?><?path2project-uri ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="topic_gm1_4bc_jt" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="topic:1;3:30">
  <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="title:1;4:10">Designing Storage Policies</title>
  <body class="- topic/body " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="body:1;5:9">
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:1;6:8">Storage policies allow you to differentiate the way objects are stored. </p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:2;7:8"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="b:1;7:11">Reason to use storage policies</b></p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:3;8:8">They are as follows:<ul id="ul_q4t_cxd_jt" class="- topic/ul " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="ul:1;8:51">
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:1;9:13">Different types or classes of disk drive <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:4;9:57">You can use different drives to store
            various type of data. For example: You can use 7.5K RPM high-capacity drives for one
            type of data and fast SSD drives for another type of data.</p></li>
      </ul></p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:5;13:8">
      <ul id="ul_wtd_zbc_jt" class="- topic/ul " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="ul:2;14:30">
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:2;15:13">Different redundancy or availability needs<p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:6;15:58">You can define the redundancy and
            availability based on your requirement. You can use a replica count of 3 for "normal"
            data and a replica count of 4 for "critical" data. </p><p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:7;17:71">If you have several different
            types or classes of disk drive. For example, you could use 7.5K RPM high-capacity drives
            for one type of data and fast SSD drives for another type of data.</p></li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:3;20:13">Growing of cluster capacity<p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:8;20:43">If the storage cluster capacity grows beyond the
            recommended partition power as described in <xref href="ring_specifications.dita#ring-specification/selecting-partition-power" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="xref:1;22:92" type="section"><?ditaot usertext?>selecting
              partition power</xref>.</p></li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:4;24:13">Erasure-coded storage and replicated storage (This is not supported in this
            release.)<p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:9;25:25">If you use erasure-coded storage for some objects and replicated storage for
            other objects. </p></li>
      </ul>
    </p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:10;29:8">Storage policies are implemented on per-container basis. Usually storage policy is not
      specified but you can specify which storage policy is used by using the <b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="b:2;30:82">default</b>
      attribute. You can change which storage policy is the default. However, this does not affect
      existing containers. Once the storage policy of a container is set, the policy for that
      container cannot be changed.</p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:11;34:8"><!--Once you create and assign the storage policy to a container that remains intact, i.e., you cannot change the policy for that container but you can always create additional policies and move data from one container to another, if you choose to assign a different policy to a new container.-->
    </p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:12;36:8">The disk drives used by storage policies can overlap or be distinct. If the storage policies
      overlap (i.e., have disks in common between two storage policies), it is recommended to use
      the same set of disk drives for both policies. But in case there is a partial overlap in disk
      drives, as one storage policy receives many objects, the drives that are common to both
      policies must store more objects than drives that are only allocated to one storage policy.
      This can be appropriate for a situation where the "overlapped" disk drives are larger than the
      non-overlapped drives.
      <!--However, in general this situation is harder to balance then a simple topology.--></p>
    <section class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="section:1;44:14">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="title:2;45:14">Specifying Storage Policies</title>
    </section>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:13;47:8">There are two places where storage policies are specified in the input model:<ul id="ul_psf_lg2_jt" class="- topic/ul " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="ul:3;48:28">
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:5;49:13">The attribute of the storage policy is specified in ring-specification in
            <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="codeph:1;50:21">config/swift/rings.yml</codeph> file for a given region. </li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:6;51:13">When associating disk drives with specific rings. This specifies which drives use the
          storage policy. In other word words, where data associated with a storage policy is
          stored.</li>
      </ul></p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:14;55:8">A storage policy is specified similar to other rings. However, the following features are
      unique to storage policies:<ul id="ul_k3j_ng2_jt" class="- topic/ul " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="ul:4;56:57">
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:7;57:13">Storage policies is applicable to object rings only. The account or container rings
          cannot have storage policies.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:8;59:13">There is a format for the ring name. object-&lt;index&gt;, where index is a number in
          the range 0 to 9 (in this release). For example: object-0.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:9;61:13">The object-0 ring must always be specified.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:10;62:13">Once a storage policy is deployed, it should never be deleted. You can remove all disk
          drives for the storage policy, however the ring specification itself cannot be
          deleted.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:11;65:13">You can use the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="codeph:2;65:37">display-name</codeph> attribute when creating a container to
          indicate which storage policy you want to use for that container.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:12;67:13">One of the storage policies can be the default policy. If you do not specify the storage
          policy then the <!--object created in-->  new container uses the default storage
          policy.</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="li:13;70:13">If you change the default, only containers created later will have that changed default
          policy.</li>
      </ul></p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="p:15;73:8">The following examples shows three storage policies in
      use.<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\swift\storage-policies.dita" xtrc="codeblock:1;74:22">rings:
. . . 
- name: object-0
  display-name: General
  default:no
  min-part-time: 16
  partition-power: 12
  replication-policy:
      replica-count: 3
- name: object-1
  default: yes
  min-part-time: 16
  partition-power: 20
  replication-policy:
      replica-count: 3
- name: object-2
  default: no
  min-part-time: 16
  partition-power: 20
  replication-policy:
      replica-count: 4</codeblock></p>
  </body>
</topic>