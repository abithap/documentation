<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Users\sharmabi\git\documentation\helion\temp\topic-pdf\helion?><?workdir-uri file:/C:/Users/sharmabi/git/documentation/helion/temp/topic-pdf/helion/?><?path2project?><?path2project-uri ./?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="troubleshooting_installation" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="topic:1;3:42">
  <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="title:1;4:10">Troubleshooting the Installation</title>
  <body class="- topic/body " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="body:1;5:9">
    <section id="troubleshooting" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="section:1;6:35">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="title:2;7:14">Troubleshooting Tips</title>
      <p id="hosinit" class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:1;8:23"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:1;8:26">Running the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:1;8:46">hos-init.bash</codeph> script when configuring your
          deployer does not complete</b></p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:2;10:10">Part of what the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:2;10:35">hos-init.bash</codeph> script does in <xref href="bare_installation_kvm.dita#install_kvm/HLM_Node_Personalization" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="xref:1;11:82" type="section"><?ditaot usertext?>step 3 of
          configuring the Deployer</xref> is install git and so if your DNS nameserver is not
        configured or is not functioning properly in your <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:3;13:67">/etc/resolv.conf</codeph> file of
        your deployer node then it won't be able to complete.</p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:3;15:10">To resolve this issue, double check your nameserver in your
          <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:4;16:19">/etc/resolv.conf</codeph> file on your deployer.</p>
      <p id="configproc" class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:4;17:26"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:2;17:29">Change needed to configuration files after you've run the
            <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:5;18:21">config-processor-run.yml</codeph> playbook</b></p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:5;19:10">If you've run the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:6;19:36">config-processor-run.yml</codeph> playbook during the
        installation and have to go back to re-do your steps, ensure that you run the
          <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:7;21:19">config-processor-clean.yml</codeph> playbook to clear out your previous
        configuration before proceeding.</p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:6;23:10">
        <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:1;24:20">cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-clean.yml</codeblock>
      </p>
      <p id="cobblerchange" class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:7;27:29"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:3;27:32">Configuration changes needed after Cobbler deploy</b></p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:8;28:10">If you've made a mistake or wish to change your <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:8;28:66">baremetalConfig.yml</codeph>
        configuration file after you've already run the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:9;29:65">cobbler-deploy.yml</codeph>
        playbook, follow these steps to ensure Cobbler gets updated with the new server
        information:</p>
      <ol class="- topic/ol " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="ol:1;32:11">
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="li:1;33:13">Ensure your <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:10;33:33">baremetalConfig.yml</codeph> file is updated</li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="li:2;34:13">Commit your changes to git:
          <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:2;35:22">cd ~/helion/hos/ansible
git add -A
git commit -m "My config or other commit message"</codeblock></li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="li:3;38:13">Determine which nodes you have entered into Cobbler by using:
          <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:3;39:22">sudo cobbler system list</codeblock></li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="li:4;40:13">Remove the nodes that had the old information from Cobbler using:
          <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:4;41:22">sudo cobbler system remove --name &lt;nodename&gt;</codeblock></li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="li:5;42:13">Re-run the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:11;42:32">cobbler-deploy.yml</codeph> and <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:12;42:72">bm-reimage.yml</codeph>
          ansible scripts to upload the new node definitions to Cobbler and image the nodes: <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:5;43:105">cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost cobbler-deploy.yml</codeblock>
          <note class="- topic/note " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="note:1;45:17">If you've also already run the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:13;45:56">bm-reimage.yml</codeph> playbook then read
            the <xref href="#troubleshooting_installation/reimage" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="xref:2;46:68" type="p"><?ditaot usertext?>How to re-image an existing
              node</xref> section below for how to ensure your nodes get re-imaged when re-running
            this playbook.</note>
        </li>
      </ol>
      <p id="install_fail" class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:9;51:28"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:4;51:31">Dealing With Nodes that Fail to Install</b></p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:10;52:10">The <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:14;52:22">bm-reimage.yml</codeph> playbook will take every node as far as it can through
        the baremetal install process. Nodes that fail will not prevent the others from continuing
        to completion. At the end of the run you will get a list of the nodes (if any) that failed
        to install.</p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:11;56:10">If you run <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:15;56:29">bm-reimage.yml</codeph> a second time, by default it will target only
        the failed nodes the second time round (because the others are already marked as
        "completed"). Alternatively you can target specific nodes for reimage using <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:16;58:93">-e
          nodelist</codeph> as described in the section below.</p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:12;60:10">The places where you are most likely to see a node fail is timeout in the "wait for
        shutdown" step, which means that the node did not successfully install an operating system
        (e.g. it could be stuck in POST) or a timeout in "wait for ssh" at the end of the baremetal
        install. This means that the node did not come back up after being powered on. To fix the
        issues you'll need to connect to the nodes' consoles and investigate.</p>
      
      <p id="reimage" class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:13;66:23"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:5;66:26">How to re-image an existing node</b></p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:14;67:10">Once Linux for HP Helion has been successfully installed on a node, that node will be
        marked as "installed" and subsequent runs of <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:17;68:62">bm-reimage.yml</codeph> (and related
        playbooks) will not target it. This is deliberate so that you can't reimage the node by
        accident. If you do need to reimage existing nodes you will need to use the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:18;70:93">-e
          nodelist</codeph> option to target them specifically. For example:</p>
      <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:6;72:18">ansible-playbook -i hosts/localhost bm-reimage.yml -e nodelist=cpn-0044,cpn-0045</codeblock>
      <note class="- topic/note " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="note:2;73:13">You can target all nodes with <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:19;73:51">-e nodelist=all</codeph></note>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:15;74:10">This will power cycle the specified nodes and reinstall the operating system on them, using
        the existing settings stored in Cobbler.</p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:16;76:10">If you want to change settings for a node in the configuration files, see the <xref href="#troubleshooting_installation/cobblerchange" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="xref:3;77:62" type="p"><?ditaot usertext?>Configuration changes needed after
          Cobbler deploy</xref> section above.</p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:17;79:10"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:6;79:13">Wait for SSH phase in bm-reimage.yml hangs </b></p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:18;80:10">This issue has been observed during deployment to systems configured with QLogic based
        BCM578XX network adapters utilizing the bnx2x driver and is currently under investigation.
        The symptom manifests following a cold boot during deployment at the "wait for SSH" phase in
        bm-reimage.yml which will result in a hang and eventually timeout, causing the baremetal
        install to fail. The presence of this particular issue can be further confirmed by
        connecting to the remote console of the server via iLO or by checking the server's dmesg
        output for the presence of bnx2_panic_dump messages, similar to the following:
        <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:7;87:20">
bnx2x: [bnx2x_prev_unload_common:10433(eth%d)]Failed to empty BRB, hope for the best  ...
bnx2x: [bnx2x_stats_update:1268(eth0)]storm stats were not updated for 3 times
bnx2x: [bnx2x_stats_update:1269(eth0)]driver assert
bnx2x: [bnx2x_panic_dump:929(eth0)]begin crash dump -----------------  .....
bnx2x: [bnx2x_panic_dump:1163(eth0)]end crash dump -----------------</codeblock>
        This workaround is completed by rebooting the server.</p>
    </section>
    <section id="imageFailure" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="section:2;95:32">
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:19;96:10"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:7;96:13">Soft lockup at imaging</b></p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:20;97:10">When imaging your nodes, if you see a kernel error of the type "BUG: soft lockup - CPU#10
        stuck...." you should reset the node and make sure it is imaged properly next time. Note
        that depending on when you get the error, you may have to rerun
          <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:20;100:19">cobbler-deploy.yml</codeph>. If the bm-reimage playbook says it failed to image
        the node, then cobbler knows this has occurred and you can reset the node. If not, you can
        follow the instructions above for <xref href="#reimage" format="dita" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="xref:4;102:79"><?ditaot usertext?>reimaging the
          node</xref>.</p>
    </section>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:21;105:8"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:8;105:11">Blank Screen Seen When Monitoring the Imaging Step</b></p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:22;106:8">If you are watching the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:21;106:40">os-install</codeph> process on a node via the console output,
      there can be a pause between 2-3 minutes in length where nothing gets reported to the console
      screen. This is just after the grub menu has been displayed on a UEFI-based system.</p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:23;109:8">This is normal and nothing to be concerned with. The imaging process will continue on after
      this pause.</p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:24;111:8"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:9;111:11">If the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:22;111:26">site.yml</codeph> playbook fails, you can query the log for the
      reason</b></p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:25;113:8">Ansible is good about outputting the errors into the command line output, however if you'd
      like to view the full log for any reason the location is:</p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:26;115:8">
      <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:8;116:18">~/.ansible/ansible.log</codeblock>
    </p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:27;118:8">This log is updated real time as you run ansible playbooks.</p>
    <note type="tip" class="- topic/note " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="note:3;119:22">Use grep to parse through the log. Usage: <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeph:23;119:72">grep &lt;text&gt;
        ~/.ansible/ansible.log</codeph></note>

    <section id="freezer" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="section:3;122:27">
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:28;123:10"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:10;123:13">Freezer installation fails if an independent network is used for the
        External_API.</b></p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:29;125:10"> Currently the Freezer installation fails if an independent network is used for the
        External_API. If you intend to deploy the External API in Beta 2 on an independent network,
        the following changes need to be made: </p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="p:30;128:10">In <b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:11;128:16">roles/freezer-agent/defaults/main.yml</b> add the following line:
        <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:9;129:20">backup_freezer_api_url: "{{ FRE_API | item('advertises.vips.private[0].url', default=' ') }}"</codeblock>
        In <b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="b:12;130:15">roles/freezer-agent/templates/backup.osrc.j2</b> add the following line:
        <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\installation_troubleshooting.dita" xtrc="codeblock:10;131:20">export OS_FREEZER_URL={{ backup_freezer_api_url }}</codeblock>
      </p>
    </section>


  </body>
</topic>