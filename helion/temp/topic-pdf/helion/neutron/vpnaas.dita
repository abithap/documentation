<?xml version="1.0" encoding="utf-8"?><?workdir /C:\Users\sharmabi\git\documentation\helion\temp\topic-pdf\helion\neutron?><?workdir-uri file:/C:/Users/sharmabi/git/documentation/helion/temp/topic-pdf/helion/neutron/?><?path2project ..\?><?path2project-uri ../?><topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="HP2.0VPNaaS" ditaarch:DITAArchVersion="1.2" domains="(topic hi-d)                             (topic ut-d)                             (topic indexing-d)                            (topic hazard-d)                            (topic abbrev-d)                            (topic pr-d)                             (topic sw-d)                            (topic ui-d)    " class="- topic/topic " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="topic:1;3:25">
  <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="title:1;4:10">HP Helion <tm tmtype="reg" class="- topic/tm " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="tm:1;4:37">OpenStack</tm> 2.0 VPNaaS Configuration</title>
  <body class="- topic/body " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="body:1;5:9">
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="p:1;6:8"><b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="b:1;6:11">HP Helion OpenStack 2.0 VPNaaS Configuration</b></p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="p:2;7:8">This document describes the configuration process and requirements for the HP Helion
      OpenStack 2.0 Virtual Private Network (VPN) as a Service module.</p>
    <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="p:3;9:8">
      <ul id="LBaaSlist" class="- topic/ul " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="ul:1;10:26">
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:1;11:13"><xref href="vpnaas.dita#HP2.0VPNaaS/Prerequisites" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="xref:1;11:64" type="section"><?ditaot usertext?>Prerequisites</xref></li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:2;12:13"><xref href="vpnaas.dita#HP2.0VPNaaS/Considerations" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="xref:2;12:65" type="section"><?ditaot usertext?>Considerations</xref></li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:3;13:13"><xref href="vpnaas.dita#HP2.0VPNaaS/Configuration" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="xref:3;13:64" type="section"><?ditaot usertext?>Configuration</xref></li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:4;14:13"><xref href="vpnaas.dita#HP2.0VPNaaS/MoreInfo" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="xref:4;14:59" type="section"><?ditaot usertext?>More Information</xref></li>
      </ul>
    </p>
    <section id="Prerequisites" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="section:1;17:33">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="title:2;18:14">Prerequisites</title>
      <ol class="- topic/ol " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="ol:1;19:11">
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:5;20:13">HP Helion OpenStack must be installed. </li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:6;21:13">Before setting up VPNaaS, you will need to have created an external network and a subnet
          with access to the internet. Information on how to create the external network and subnet
          can be found in the <xref href="vpnaas.dita#HP2.0VPNaaS/MoreInfo" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="xref:5;23:77" type="section"><?ditaot usertext?> More Information</xref>
          section of this document.</li>
      </ol>
    </section>
    <section id="Considerations" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="section:2;27:34">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="title:3;28:14">Considerations</title>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="p:4;29:10">Using the Neutron plugin-based VPNaaS causes additional processes to be run on the Network
        Service Nodes. One of these processes, the ipsec pluto process from OpenSwan, runs as root
        and listens on an external network. A vulnerability in that process can lead to remote root
        compromise of the Network Service Nodes. If this is a concern customers should consider
        using a VPN solution other than the Neutron plugin-based VPNaaS and/or deploying additional
        protection mechanisms.</p>
    </section>
    <section id="Configuration" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="section:3;36:33">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="title:4;37:14">Configuration</title>
      <sectiondiv class="- topic/sectiondiv " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="sectiondiv:1;38:19">
        <b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="b:2;39:12">Setup Networks</b>
        <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="p:5;40:12">You can setup VPN as a Service (VPNaaS) by first creating
          networks, subnets and routers using the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeph:1;41:59">neutron</codeph> command line. </p>
        <note class="- topic/note " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="note:1;42:15">You can execute the included commands from any shell with access to the service APIs.
          In the included examples, the commands are executed from the deployer, however you could
          execute the commands from the controller node or any other shell with aforementioned
          service API access. </note>
        <ol class="- topic/ol " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="ol:2;46:13">
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:7;47:15">From the deployer, create first private network, subnet and router assuming that
              <i class="+ topic/ph hi-d/i " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="i:1;48:18">ext-net</i> is created by
            admin.<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:1;49:30">neutron net-create privateA
neutron subnet-create --name subA privateA 10.1.0.0/24 --gateway 10.1.0.1
neutron router-create router1
neutron router-interface-add router1 subA
neutron router-gateway-set router1 ext-net</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:8;54:15">Create second private network, subnet and router.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:2;55:24">neutron net-create privateB
neutron subnet-create --name subB privateB 10.2.0.0/24 --gateway 10.2.0.1
neutron router-create router2
neutron router-interface-add router2 subB
neutron router-gateway-set router2 ext-net</codeblock></li>
        </ol>
      </sectiondiv>
      
      
      <sectiondiv id="StartVirtualMachines" class="- topic/sectiondiv " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="sectiondiv:2;64:45">
        <b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="b:3;65:12">Start Virtual Machines</b>
        <ol class="- topic/ol " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="ol:3;66:13">
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:9;67:15">From the deployer run the following to start the virtual machines. Begin with adding
            secgroup rules for SSH and ICMP.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:3;69:24">neutron security-group-rule-create default --protocol icmp
neutron security-group-rule-create default --protocol tcp --port-range-min 22 --port-range-max 22</codeblock></li>
        <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:10;71:13">Start the virtual machine in the privateA subnet. Using <i class="+ topic/ph hi-d/i " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="i:2;71:72">nova images-list</i>, use the
            image id to boot image instead of the image name.  After executing this step, it is
            recommended that you wait approximately 10 seconds to allow the virtual machine to
            become active.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:4;75:24">NETA=$(neutron net-list | awk '/privateA/ {print $2}')
nova boot --flavor 1 --image &lt;id&gt; --nic net-id=$NETA vm1</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:11;77:15">Start the virtual machine in the privateB subnet.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:5;78:24">NETB=$(neutron net-list | awk '/privateB/ {print $2}')
nova boot --flavor 1 --image &lt;id&gt; --nic net-id=$NETB vm2</codeblock></li>
         <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:12;80:14">Create two floating IP's and associate each one to the respective server to gain vm access.
          <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:6;81:22">vmip1= $(nova list | awk '/vm1/ {print $12}' | awk -F '=' '{print $2}' | awk -F ',' '{print $1}')    
vm1portid=$(neutron port-list | grep $vmip1 | awk '{print $2}')
vmip2= $(nova list | awk '/vm2/ {print $12}' | awk -F '=' '{print $2}' | awk -F ',' '{print $1}')
vm2portid=$(neutron port-list | grep $vmip2 | awk '{print $2}')
neutron floatingip-create ext-net –-port-id $vm1portid
neutron floatingip-create ext-net –-port-id $vm2portid</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:13;87:15">Verify floating IP's are allocated to the respective vms. Take note of IP's for later
            use.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:7;89:24">nova show vm1
nova show vm2</codeblock></li>
        </ol>
      </sectiondiv>
      
      
       <sectiondiv class="- topic/sectiondiv " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="sectiondiv:3;95:20">
         <b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="b:4;96:13">Create VPN</b>
         <ol class="- topic/ol " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="ol:4;97:14">
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:14;98:15">You can set up the VPN by executing the below commands from the deployer or any shell
            with access to the service APIs. Begin with creating the policies with
              <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeph:2;100:23">vpn-ikepolicy-create</codeph> and <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeph:3;100:65">vpn-ipsecpolicy-create </codeph>.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:8;101:24">neutron vpn-ikepolicy-create ikepolicy
neutron vpn-ipsecpolicy-create ipsecpolicy</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:15;103:15">Create the VPN service at router1.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:9;104:24">neutron vpn-service-create --name myvpnA --description "My vpn service" router1 subA</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:16;105:15">Wait at least 5 seconds and then run <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeph:4;105:60">ipsec-site-connection-create</codeph> to
            create a ipsec-site connection.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:10;107:24">neutron ipsec-site-connection-create --name vpnconnection1 --vpnservice-id myvpnA \
--ikepolicy-id ikepolicy --ipsecpolicy-id ipsecpolicy --peer-address 172.16.0.3 \
--peer-id 172.16.0.3 --peer-cidr 10.2.0.0/24 --psk secret</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:17;110:15">Create the VPN service at router2.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:11;111:24">neutron vpn-service-create --name myvpnB --description "My vpn serviceB" router2 subB </codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:18;112:15">Wait at least 5 seconds and then run <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeph:5;112:60">ipsec-site-connection-create</codeph>
            again to create the second ipsec-site connection.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:12;114:24">neutron ipsec-site-connection-create --name vpnconnection2 --vpnservice-id myvpnB \
--ikepolicy-id ikepolicy --ipsecpolicy-id ipsecpolicy --peer-address 172.16.0.2 \
--peer-id 172.16.0.2 --peer-cidr 10.1.0.0/24 --psk secret</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:19;117:15">On the deployer, run the <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeph:6;117:48">ipsec-site-connection-list</codeph> command to see
            the active connections. Be sure to check that the vpn_services are ACTIVE. You can check
            this by running <codeph class="+ topic/ph pr-d/codeph " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeph:7;119:37">vpn-service-list</codeph> and then checking
            ipsec-site-connections status. You should expect that the time for both vpn-services and
            ipsec-site-connections to become ACTIVE could take as long as 30 to 50 seconds.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:13;122:24">neutron ipsec-site-connection-list
+--------------------------------------+----------------+--------------+---------------+------------+-----------+--------+
| id                                   | name           | peer_address | peer_cidrs    | route_mode | auth_mode | status |
+--------------------------------------+----------------+--------------+---------------+------------+-----------+--------+
| 1e8763e3-fc6a-444c-a00e-426a4e5b737c | vpnconnection2 | 172.16.0.2   | "10.1.0.0/24" | static     | psk       | ACTIVE |
| 4a97118e-6d1d-4d8c-b449-b63b41e1eb23 | vpnconnection1 | 172.16.0.3   | "10.2.0.0/24" | static     | psk       | ACTIVE |
+--------------------------------------+----------------+--------------+---------------+------------+-----------+--------+</codeblock></li>
        </ol>
      </sectiondiv>
      
      
      
      
      <sectiondiv class="- topic/sectiondiv " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="sectiondiv:4;135:19">
        <b class="+ topic/ph hi-d/b " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="b:5;136:12">Verify VPN</b>
        <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="p:6;137:12">In the case of non-admin users and non-DVR, you can verify the VPN
          connection by pinging the virtual machines.</p>
        <ol class="- topic/ol " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="ol:5;139:13">
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:20;140:15">Check the VPN connections. 
            <note class="- topic/note " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="note:2;141:19">fipvm1 and fipvm2 denotes floating IP's for vm1 and vm2 respectively.  The floating
              IP's are obtained from step 5 under <xref href="vpnaas.dita#HP2.0VPNaaS/StartVirtualMachines" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="xref:6;142:109" type="sectiondiv"><?ditaot usertext?>Start Virtual Machines</xref> section.</note>
              <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:14;143:26">ssh cirros@fipvm1
password: &lt;password&gt;
            
# ping the floating IP address of vm2
ping ###.###.###.###</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:21;148:15">In another terminal.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:15;149:24">ssh cirros@fipvm2
password: &lt;password&gt;
              
# ping the floating IP address of vm1
ping ###.###.###.###</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:22;154:15">You should see ping responses from both virtual machines.</li>
        </ol>
        <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="p:7;156:12">As the admin user, you should check to make sure that a route exists between the router
          gateways. Once the gateways have been checked, packet encryption can be verified by using
          traffic analyzer (tcpdump) by tapping on the respective namespace (qrouter-*) and tapping
          the right interface (qg-***).</p>
        <ol class="- topic/ol " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="ol:6;160:13">
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:23;161:15">Check the if the route exists between two router gateways. You can get the right
            qrouter namespace id by executing <i class="+ topic/ph hi-d/i " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="i:3;162:50">sudo ip netns</i>. Once you have the qrouter
            namespace id, you can get the interface by executing <i class="+ topic/ph hi-d/i " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="i:4;163:69">sudo ip netns qrouter-xxxxxxxx
              ip</i> and from the result the interface can be found.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:16;165:24">sudo ip netns
sudo ip netns qrouter-&lt;router1 namespace&gt; ping &lt;router2 ip&gt;
sudo ip netns qrouter-&lt;router2 namespace&gt; ping &lt;router1 ip&gt;</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:24;168:15">Initiate a tcpdump on the interface.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:17;169:24">sudo ip netns exec qrouter-xxxxxxxx tcpdump -i qg-xxxxxx</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:25;170:15">Check the VPN connection.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:18;171:24">ssh cirros@fipvm1
password: &lt;password&gt;
              
# ping the floating IP address of vm2
ping ###.###.###.###</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:26;176:15">Repeat for other namespace and right tap interface.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:19;177:24">sudo ip netns exec qrouter-xxxxxxxx tcpdump -i qg-xxxxxx</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:27;178:15">In another terminal.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="codeblock:20;179:24">ssh cirros@fipvm2
password: &lt;password&gt;
              
# ping the floating IP address of vm1
ping ###.###.###.###</codeblock></li>
          <li class="- topic/li " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="li:28;184:15">You will find encrypted packets containing ‘ESP’ in the tcpdump trace.</li>
        </ol>
      </sectiondiv>
    </section>

    <section id="MoreInfo" class="- topic/section " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="section:4;189:28">
      <title class="- topic/title " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="title:5;190:14">More Information</title>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="p:8;191:10">For more information on the neutron command-line interface (CLI) and VPN as a Service
        (VPNaaS), see the OpenStack networking command-line client reference: <xref href="http://docs.openstack.org/cli-reference/content/neutronclient_commands.html" scope="external" format="html" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="xref:7;194:43"><?ditaot gentext?>http://docs.openstack.org/cli-reference/content/neutronclient_commands.html</xref></p>
      <p class="- topic/p " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="p:9;195:10">For information on how to create an external network and subnet, see the OpenStack manual:
          <xref href="http://docs.openstack.org/kilo/install-guide/install/apt/content/neutron_initial-external-network.html" scope="external" format="html" class="- topic/xref " xtrf="C:\Users\sharmabi\git\documentation\helion\neutron\vpnaas.dita" xtrc="xref:8;198:43"><?ditaot gentext?>http://docs.openstack.org/kilo/install-guide/install/apt/content/neutron_initial-external-network.html</xref>
      </p>
    </section>
  </body>
</topic>