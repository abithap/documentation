<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_odg_33x_rt">
  <title>Networking solution for ESXi Hypervisor</title>
  <body>
    <p>To provide the <b>network as a service</b> for tenant VM’s hosted on ESXi Hypervisor, we
      deploy the service VM named ‘ OVSvApp VM’ on each ESXi Hypervisor within a cluster managed by
      Openstack Nova as shown in Figure 1. </p>
    <p> The OVSvApp VM runs hlinux as a guest Operating System and has Open vSwitch 2.1.0 or above
      installed. It also runs the agent called OVSvApp agent which is responsible for dynamically
      creating the port groups for the tenant VM’s and manages OVS bridges which contains the flows
      related to security groups and L2 networking.</p>
    <p><image href="../../media/esx/esx_ovsvapp.png" id="image_a4n_t3x_rt"/></p>
    <p> The OVSvApp VM will be orchestrated using EON to know more about EON service refer this link
      http://docs-staging.hpcloud.com/hos2.0ga/#helion/esx/eon_service.html. </p>
    <p>In order to facilitate Fault Tolerance and mitigation of data path loss for tenant VM’s we
      run the process named ‘neutron-ovsvapp-agent-montior’ as part of neutron-ovsvapp-agent service
      which is responsible for monitoring Open vSwitch module within the OVSvApp VM. It also uses
      nginx server to inform health status of Open vSwitch module to the neutron server to take
      mitigation actions. We also have mechanism to keep alive the neutron-ovsvapp-agent service via
      systemd script.</p>
    <p>When OVSvApp Service VM crashes, agent monitoring mechanism will kick in a ‘cluster
      mitigation’ process. We try to mitigate datapath traffic loss for VMs on the failed ESX host
      in that cluster. This is triggered by putting the failed ESX host into maintenance mode ,
      which in turn triggers the vCenter DRS migrates tenant VMs to other ESX hosts within the same
      cluster . This ensures data path continuity of tenant VM’s traffic. </p>
    <p>At any given point of time, an user in ‘admin’ role can view the cluster mitigation status
      using the following CLIs.Listed them below:<ol id="ol_cmz_fjx_rt">
        <li>neutron ovsvapp-mitigated-cluster-list<p>Lists all the clusters on which at least one
            round of host mitigation happened.</p><p> Example: <i>neutron
              ovsvapp-mitigated-cluster-list</i><codeblock>+----------------+--------------+-----------------------+---------------------------+
| vcenter_id     | cluster_id   | being_mitigated       | threshold_reached         |
+----------------+--------------+-----------------------+---------------------------+
| vcenter1       | cluster1     | True                  | False                     |
| vcenter2       | cluster2     | False                 | True                      |
+---------------+------------+-----------------+------------------------------------+</codeblock></p></li>
        <li>neutron ovsvapp-mitigated-cluster-show --vcenter-id &lt;VCENTER_ID&gt; --cluster-id
          &lt;CLUSTER_ID&gt; <p> Shows the status of the particular cluster. </p><p>Example :
              <i>neutron ovsvapp-mitigated-cluster-show --vcenter-id vcenter1 --cluster-id
              cluster1</i><codeblock>+---------------------------+-------------+
| Field                     | Value       |
+---------------------------+-------------+
| being_mitigated           | True        |
| cluster_id                | cluster1    |
| threshold_reached         | False       |
| vcenter_id                | vcenter1    |
+---------------------------+-------------+</codeblock></p><p>There
            can be instances where a triggered mitigation may not succeed and the neutron server is
            not informed of such failure. Example is, if the selected agent which had to mitigate
            the host, goes down before finishing the task. In these circumstances, we will be left
            with the cluster locked. To unlock the cluster for further mitigations, we can use the
            update CLI.</p></li>
        <li><b><i>neutron ovsvapp-mitigated-cluster-update --vcenter-id &lt;VCENTER_ID&gt;
              --cluster-id &lt;CLUSTER_ID&gt; </i></b><p>To update the status of a mitigated
            cluster.</p>We can modify the values of being-mitigated from True to False which will
          help unlocking the cluster.<p>Example: <i>neutron ovsvapp-mitigated-cluster-update
              --vcenter-id vcenter1 --cluster-id cluster1 --being-mitigated False</i></p><p> Updated
            mitigated_cluster: vcenter1</p><p> If we do not want any further mitigations to happen
            on this cluster, we can update the threshold-reached value to True.</p><p>Example :
              <i>neutron ovsvapp-mitigated-cluster-update --vcenter-id vcenter1 --cluster-id
              cluster1 --being-mitigated False --threshold-reached True</i></p><p> Updated
            mitigated_cluster: vcenter1</p><p>Rest API:</p><ul id="ul_rkp_4kx_rt">
            <li>curl -i -X GET <xref href="http://%3cip%3e:9696/v2.0/ovsvapp_mitigated_clusters"
                format="html" scope="external"
                >http://&lt;ip&gt;:9696/v2.0/ovsvapp_mitigated_clusters</xref> -H "User-Agent:
              python-neutronclient" -H "Accept: application/json" -H "X-Auth-Token:
              &lt;token_id&gt;"</li>
          </ul></li>
      </ol></p>
  </body>
</topic>
