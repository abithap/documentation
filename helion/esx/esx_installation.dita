<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_flx_j2b_ws">
  <title>Beta 1: Installing HP Helion <tm tmtype="reg">OpenStack</tm> on Baremetal</title>
  <body>
    <section>
      <title>Known Restrictions</title>
      <ul>
        <li>Ensure the <xref href="hardware.dita">minimum hardware requirements</xref> are met.</li>
        <li>All disks on the system(s) will be wiped: /dev/sda will be used for the OS but all other
          disks will be wiped.</li>
        <li>The deployer node must use the HP Linux for HP Helion OpenStack ISO, which can be
          downloaded from the <xref
            href="https://helion.hpwsportal.com/catalog.html#/Category/%7B%22categoryId%22%3A10311%7D/Show"
            format="html" scope="external">Helion Downloads</xref> page.</li>
        <li>Three NIC are tested, one 1G used for PXE and two bonded 10G for everything else. All
          machines can net boot from PXE and use the deployer as a DHCP server.</li>
        <li>All machines of a single type should be the same, that is, all computes,
          <?oxy_delete author="sharmabi" timestamp="20150819T155733+0530" content="all VSAs"?>, and
          so on.</li>
        <li>The deployer node must be a dedicated node in
          Beta<?oxy_delete author="sharmabi" timestamp="20150819T155748+0530" content="0"?><?oxy_insert_start author="sharmabi" timestamp="20150819T155748+0530"?>1<?oxy_insert_end?>.</li>
        <li>The machine hosting the deployer and all baremetal systems must be connected to a
          management network. Nodes on this management network must be able to reach the iLO
          subsystem of each baremetal system to enable host reboots as part of the install process.
          The HP Helion OpenStack architecture requires that the IPMI network is a separate network
          and that a route exists from the management network to the IPMI network for iLO
          access.</li>
      </ul>
    </section>
    <section id="Prereqs">
      <title>Before You Start</title>
      <p>Prepare your baremetal hardware, as follows, on all nodes:</p>
      <ul>
        <li>Set up the iLO Advanced license in the iLO configuration.</li>
        <li>Switch from UEFI to Legacy BIOS.</li>
        <li>Ensure that the network to be used for PXE installation has PXE enabled.</li>
        <li>Ensure that the other networks have PXE disabled.</li>
      </ul>
    </section>
    <section id="DeployerInstall">
      <title>Set up the Deployer</title>
      <ol>
        <li>Create LUN(s), if required.</li>
        <li>Download the HP Linux for HP Helion OpenStack Deployer ISO from the <xref
            href="https://helion.hpwsportal.com/catalog.html#/Category/%7B%22categoryId%22%3A10311%7D/Show"
            format="html" scope="external">Helion Downloads</xref> page.</li>
        <li>Boot your deployer from the ISO.</li>
        <li>Enter "install" to start installation.</li>
        <li>Select the language.</li>
        <li>Select the location.</li>
        <li>Select the keyboard layout.</li>
        <li>Select the primary network interface, if prompted:<ul>
            <li>Assign IP address, netmask</li>
          </ul></li>
        <li>Create new account:<ul>
            <li>Enter a username.</li>
            <li>Enter a password.</li>
            <li>Enter time zone if prompted to do so.</li>
            <li>Synchronize the time on all nodes manually. NTP will be installed later.</li>
          </ul></li>
      </ol>
      <p>At the end of this section you should have a deployer node set up with hLinux on it.</p>
    </section>
    <section id="HLM_Node_Personalization">
      <title>Configure and Run the Deployer</title>
      <ol>
        <li>On the deployer node, enter the following command to create the SSH keypair if one is
          not already present:<codeblock>ssh-keygen -t rsa</codeblock>
        </li>
        <li>Add ~/.ssh/id_rsa.pub to ~/.ssh/authorized_keys file:
          <codeblock>cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys</codeblock></li>
        <li>Confirm that ssh localhost works without a password and that you can get from external
          sources, both with and without sudo.</li>
        <li>Mount the install media at /media/cdrom, for example,
          <codeblock>sudo mount /media/cdrom</codeblock></li>
        <li>Unpack the following tarball:
          <codeblock>tar zxvf /media/cdrom/hos-2.0.0/hlm-deployer-2.0.0-20150805T115313Z.tgz</codeblock></li>
        <li>Run the following included script:
          <codeblock>~/hlm-deployer/hlm-init-2.0.0.bash</codeblock></li>
      </ol>
      <p>At the end of this section you should have a local directory structure, as described
        below:</p>
      <codeblock>
helion/                        Top level directory
helion/examples/               Directory contains the config input files of the example clouds
helion/my_cloud/definition/    Directory contains the config input files
helion/my_cloud/config/        Directory contains .j2 files which are symlinks to the /hlm/ansible directory
helion/hlm/                    Directory contains files used by the installer
</codeblock>
    </section>
    <section id="Configuration">
      <title>Configure Your Environment</title>
      <ol>
        <li>Set up your configuration files, as follows: <ol>
            <li>See the sample set of configuration files in the
              ~/helion/examples/one-region-poc-with-<?oxy_delete author="sharmabi" timestamp="20150819T115047+0530" content="vsa"?><?oxy_insert_start author="sharmabi" timestamp="20150819T115047+0530"?>esx<?oxy_insert_end?>
              directory. The accompanying README.md file explains the contents of each of the
              configuration files.</li>
            <li>Copy the example configuration files
              <?oxy_delete author="sharmabi" timestamp="20150819T115054+0530" content="into"?><?oxy_insert_start author="sharmabi" timestamp="20150819T115055+0530"?>in<?oxy_insert_end?>
              the required setup directory and edit them as required:
              <codeblock>cp -r ~/helion/examples/one-region-poc-with-<?oxy_delete author="sharmabi" timestamp="20150819T115030+0530" content="vsa"?><?oxy_insert_start author="sharmabi" timestamp="20150819T115030+0530"?>esx<?oxy_insert_end?>/* ~/helion/my_cloud/definition/</codeblock>
              The configuration files for editing can be found at the following location: <codeblock>~/helion/my_cloud/definition/data</codeblock><ul>
                <li>The baremetalConfig.yml file should specify the server information for your
                  environment.</li>
                <li>The servers.yml file contains the IP address information for the
                  hardware<?oxy_insert_start author="sharmabi" timestamp="20150819T155831+0530"?>
                  for controller nodes<?oxy_insert_end?>.</li>
                <li>The networks.yml file contains networking information.</li>
                <li>The control_plane.yml file contains information about the services that will be
                  installed.</li>
                <li>In the <codeph>net_interfaces.yml</codeph> file, replace all instances of
                  “bond-mode: 1” to “bond-mode: active-backup”.</li>
              </ul></li>
          </ol></li>
        <li>Run the configuration processor, as follows: <codeblock>cd ~/helion/hlm/ansible</codeblock>
          <codeblock>ansible-playbook -i hosts/localhost config-processor-run<?oxy_delete author="sharmabi" timestamp="20150819T155903+0530" content="_v2"?>.yml</codeblock>
          Note that if the installer tells you to run ansible-playbook -i hosts/localhost
          config-processor-run.yml, don't. Run command as above (v2). </li>
        <li>Check the generated host files in
            <codeph>~/helion/my_cloud/stage/ansible/host_vars/</codeph> to ensure the correct IPs
          are included. If they are not, run
          <codeblock>ansible-playbook -i hosts/localhost config-processor-clean.yml</codeblock> and
          go to step 1.</li>
      </ol>
    </section>
    <section id="CobblerDeploy">
      <title>Deploy Cobbler </title>
      <ol>
        <li>Run the following command:
          <codeblock>export ANSIBLE_HOST_KEY_CHECKING=False</codeblock></li>
        <li>Run the following playbook:
          <codeblock>ansible-playbook -i hosts/localhost cobbler-deploy.yml</codeblock></li>
      </ol>
    </section>
    <section id="NodeProvision">
      <title>Provision the Nodes</title>
      <ol>
        <li>Run the following command, which will set all nodes to PXE boot and power cycle them to
          start their OS
          install:<codeblock>ansible-playbook -i hosts/localhost cobbler-provision.yml</codeblock></li>
        <li>Wait for the nodes to install. They will power down at the end. You can make waiting
          easier with the following
          command:<codeblock><codeph>ansible-playbook -i hosts/localhost cobbler-wait-for-shutdown.yml</codeph></codeblock>This
          will complete once all machines are down.</li>
        <li>Once all nodes are down, power up the recently-installed systems, using the following
          command:<codeblock>ansible-playbook -i hosts/localhost cobbler-power-up.yml</codeblock></li>
        <li>You can make waiting easier with the command below, which will complete once all
          machines are up and the SSH daemon is responding:
          <codeblock>ansible-playbook -i hosts/localhost cobbler-wait-for-ssh.yml</codeblock></li>
      </ol>
    </section>
    <section id="CloudDeploy">
      <title>Deploy the Cloud</title>
      <ol>
        <li>Run the following command: <codeblock>ansible-playbook -i hosts/verb_hosts osconfig-runV2.yml</codeblock><ol>
            <li>Verify the network is working correctly by pinging each IP (excluding VSA-BLK and
              VIPs) from the deployer node. You can find the IP addresses in
                <b>generated_files/etc/hosts</b>. To do so, run:
              <codeblock>stack@hlm:~/helion/hlm/ansible$ less generated_files/etc/hosts</codeblock></li>
          </ol>
        </li>
        <li> Edit roles/HZN-WEB/tasks/install.yml and add the following after the 'install-package'
          section:
          <codeblock>- name: HZN-WEB | install | TEMP fix horizon permissions
  sudo: yes
  command: "chown -R stack:stack {{ HORIZON_VENV_DIR }}/lib/python2.7/site-packages"</codeblock>
          the modified file should look as follows:
          <codeblock># Install pre-packaged Horizon venv from tarball
- name: HZN-WEB | install | Install Horizon
  install_package:
    name: horizon
    service: horizon
    state: present
 
- name: HZN-WEB | install | TEMP fix horizon permissions
  sudo: yes
  command: "chown -R stack:stack {{ HORIZON_VENV_DIR }}/lib/python2.7/site-packages"</codeblock></li>
        <li>Run the following command:
          <codeblock>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml -e tuning_selector=medium</codeblock>
        </li>
      </ol>
    </section>
    <section id="VSA">
      <title>Install and Configure  ESX Compute  and OVSvAPP on vCenter</title>
      <p>This section describes the procedure to install and configure ESX compute and OVSvAPP on
        vCenter.</p>
    </section>
    <section>
      <p><b>Deploy a template</b></p>
    </section>
    <section>Perform the following steps to deploy a template:<ol id="ol_khb_dk5_bt">
        <li>Import the <codeph>hlm-shell-vm.ova</codeph> in the vCenter using the vSphere client. </li>
        <li>In the vSphere Client, click <b>File</b> and then click <b>Deploy OVF Template</b>.</li>
        <li>Follow the instructions in the wizard to specify the data center, cluster, and node to
          install. Refer to the VMWare vSphere documentation as needed. </li>
      </ol></section>
    <section><b>Deploy a Service</b><p>To deploy the service using the EON CLI, execute the
        following steps from the deployer:</p><p>
        <ol id="ol_t1q_jl5_bt">
          <li>Execute <codeph>source service.osrc</codeph>. When you execute this what is the output
            and why do we execute this?)</li>
          <li>Run the following command to update the network
              configuration:<codeblock><codeph>eon get-network-info-template --filename net_conf.json</codeph></codeblock><p>output,
              if any and is this json file available???how to get this file??</p></li>
          <li>Add the vCenter to the eon
              database.<codeblock><codeph>eon vcenter-add --name &lt;vCenter Name> --ip-address &lt;vCenter IP address> --username &lt;vCenter Username> --password&lt;vCenter Password> --port&lt;vCenter Port></codeph></codeblock><p>where:</p><p>
              <ul id="ul_lx4_yr5_bt">
                <li>vCenter Name - the name of the vCenter server where the service will be
                  deployed.</li>
                <li>vCenter IP address - the IP address of the vCenter server where the service will
                  be deployed.</li>
                <li>vCenter Username - the username for the vCenter administrator.</li>
                <li>vCenter Password - the password for the vCenter administrator.</li>
                <li>vCenter Port - the vCenter server port.<p><b>Sample
                  Output</b>:</p><codeblock>+------------+---------------------------------------+ 
| Property   | Value                                 | 
+-------A-----+--------------------------------------+ 
| created_at | 2014-05-09T09:01:09.513550            | 
| deleted    | False                                 | 
| deleted_at | None                                  | 
| id         | f7cb3811-0d33-44ec-a54a-a69cf7615f5e  | 
| ip_address | 10.1.192.98                           | 
| name       | Test_vcenter                          | 
| password   | &lt;SANITIZED>                           | 
| port       | 443                                   | 
| type       | vcenter                               | 
| updated_at | 2014-05-09T09:53:33.500434            | 
| username   | cdl\moonshotblr                       | 
+------------+---------------------------------------+</codeblock></li>
              </ul>
            </p></li>
          <li>Set the proxy VM network information for a vCenter. This is used to deploy proxy VM
            when you activate cluster for the first time under the vCenter.<codeblock><codeph>eon set-network-info --vcenter-id &lt;vCenter ID> --config-json &lt;Compute Proxy Config File></codeph></codeblock><p>
              <note>The vcenter ID is generated when you execute the above (<b>step 3</b>)
                  command.<p>The following is the sample compute proxy configuration
                  file.<?oxy_insert_start author="sharmabi" timestamp="20150820T120800+0530"?> do
                  the user need to create this file or is it availabe as a part of product install
                  ??<?oxy_insert_end?><codeblock>[vmware]
# Details related to vCenter in which Compute Proxy VM will be created
# Datacenter name
datacenter=
# Management Cluster name
mgmt_cluster=
# Shared datatstore name
datastore=
# SSL certificate file (cacert.pem) of vCenter
cert_location=

[network]
# port group name which will attached to the proxy VM 
# it will be management port group which will connect compute proxy VM
# with your overcontrollers 
port_group_name=

[compute_proxy]
# This section hold the values which will be used to configure proxy VM
# 1) hostname -> should not have '_'
# 2) Network information of the vm
# if usedhcp = False, provide values for ipaddr, netmask, gateway
# if usedhcp = True, leave empty  ipaddr, netmask, gateway
hostname=
usedhcp=True
ipaddr=
netmask=
gateway=</codeblock></p></note>
            </p></li>
          <li>Execute the following command to view the list of clusters for the given
              vCenter<codeblock><codeph>eon cluster-list --vcenter-id &lt;vCenter ID></codeph></codeblock><b>Sample
              Output</b></li>
          <li>Import the cluster for the EON database under the given vCenter.
              <codeblock><codeph>eon cluster-import --vcenter-id &lt;vCenter ID> --cluster-name &lt;Cluster Name> --cluster-moid &lt;Cluster Moid></codeph></codeblock><p>where:</p><p>
              <ul id="ul_osx_bx5_bt">
                <li>vCenter  ID:  ID of the vcenter containing the cluster.</li>
                <li>Cluster Name: the name of the cluster that needs to be imported.</li>
                <li>cluster Moid: Moid of the cluster that needs to be imported.</li>
              </ul>
            </p>One vCenter can have multiple clusters. You can import all the cluster associate4d
            with that vCenter.</li>
          <li>Activate the cluster for the selected
            vCenter.<codeblock><codeph>eon cluster-activate --vcenter-id &lt;vCenter ID> --cluster-moid &lt;Cluster Moid> </codeph></codeblock></li>
        </ol>
      </p></section>
    <p>when u activate the cluster what happnes and where will the cluster be updated???</p>
    <section><b>Run the config processor</b></section>
    <section>
      <p>Execute the following commands:</p>
      <p>
        <codeblock><codeph>cd ~/helion/hlm/ansible</codeph>
<codeph>ansible-playbook -i hosts/localhost config-processor-run.yml</codeph></codeblock>
      </p>
    </section>
    <section><b>Deploy a cloud</b></section>
    <section>
      <p>Execute the following command to deploy a
        cloud:<codeblock><codeph>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml -e tuning_selector=medium</codeph></codeblock></p>
    </section>
    <section>Verify post install</section>
    <section> </section>
  </body>
</topic>
